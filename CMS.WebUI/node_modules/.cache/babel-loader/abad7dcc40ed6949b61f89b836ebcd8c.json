{"ast":null,"code":"var _jsxFileName = \"E:\\\\Projects\\\\Rebartek\\\\cms.webui\\\\src\\\\content\\\\pages\\\\Components\\\\Designation\\\\DesignationForm.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { Post, Delete } from \"../../../../services/common.service\";\nimport { Button, Container, Grid, Card, CardHeader, CardContent, Divider, TextField, Box, Modal, Snackbar, Alert } from '@mui/material';\nimport { useForm } from 'react-hook-form';\nimport { object, string, number } from 'zod';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 600,\n  bgcolor: 'background.paper',\n  boxShadow: 24,\n  p: 4\n};\nexport const DesignationForm = _ref => {\n  _s();\n\n  let {\n    clearForm,\n    designationFormFunc,\n    designationData,\n    rerenderDesignationTable,\n    AddButtonLabel\n  } = _ref;\n  const [loading, setLoading] = useState(false);\n  const [openSuccessAlert, setopenSuccessAlert] = useState(false);\n  const [openErrorAlert, setopenErrorAlert] = useState(false);\n  const [messageSuccess, setMessageSuccess] = useState(\"\");\n  const [messageErorr, setMessageError] = useState(\"\");\n  const [open, setOpen] = useState(false);\n  const [openDeleteModal, setOpenDeleteModal] = useState(false);\n\n  const handelOpenDeleteModal = () => {\n    setOpenDeleteModal(true);\n  };\n\n  const handelCloseDeleteModal = () => {\n    setOpenDeleteModal(false);\n  };\n\n  const handleAlertClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setopenSuccessAlert(false);\n    setopenErrorAlert(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    reset(initialValues);\n    clearForm();\n  };\n\n  const initialValues = {\n    DesignationName: \"\",\n    Remarks: \"\",\n    IsDeleted: false\n  };\n\n  const showModal = () => {\n    setOpen(true);\n    reset(initialValues);\n  };\n\n  const resetForm = () => {\n    reset(initialValues);\n    clearForm();\n  };\n\n  useEffect(() => {\n    designationFormFunc.current = handleOpen;\n    reset(designationData);\n  }, []);\n  useEffect(() => {\n    reset(designationData);\n  }, [designationData, designationFormFunc]);\n  const validationSchema = object({\n    DesignationID: number().optional(),\n    DesignationName: string().nonempty('Designation is required').max(200, 'Designation must be less than 200 characters') //Remarks: string().nonempty('Remark is required')\n\n  });\n  const {\n    register,\n    formState: {\n      errors,\n      isSubmitSuccessful\n    },\n    reset,\n    handleSubmit,\n    setValue\n  } = useForm({\n    resolver: zodResolver(validationSchema)\n  });\n  useEffect(() => {\n    if (isSubmitSuccessful) {\n      reset();\n    }\n  }, [isSubmitSuccessful]);\n\n  const onSubmitHandler = values => {\n    console.log(values);\n    handleFormSubmit(values);\n  };\n\n  const onDeleteHandler = () => {\n    Delete('master/DeleteDesignation?Id=' + designationData.DesignationID).then(response => {\n      if (response.data.status == 'success') {\n        setOpenDeleteModal(false);\n        setopenSuccessAlert(true);\n        setMessageSuccess('successfully Deleted');\n        rerenderDesignationTable();\n        handleClose();\n      }\n    }, error => {\n      const resMessage = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n      setLoading(false);\n      setopenErrorAlert(true);\n      setMessageError(resMessage);\n    });\n  };\n\n  const handleFormSubmit = formValue => {\n    setLoading(true);\n    let _url = 'master/AddDesignation';\n\n    if (formValue.DesignationID != null && formValue.DesignationID > 0) {\n      _url = 'master/EditDesignation';\n    }\n\n    Post(_url, formValue).then(response => {\n      if (response.data.status == 'success') {\n        setopenSuccessAlert(true);\n        setMessageSuccess('successfully saved');\n        handleClose();\n        rerenderDesignationTable();\n      }\n    }, error => {\n      const resMessage = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n      setLoading(false);\n      setopenErrorAlert(true);\n      setMessageError(resMessage);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Snackbar, {\n      open: openSuccessAlert,\n      autoHideDuration: 5000,\n      onClose: handleAlertClose,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleAlertClose,\n        variant: \"filled\",\n        severity: \"success\",\n        sx: {\n          width: '100%'\n        },\n        children: messageSuccess\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: openErrorAlert,\n      autoHideDuration: 5000,\n      onClose: handleAlertClose,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleAlertClose,\n        variant: \"filled\",\n        severity: \"success\",\n        sx: {\n          width: '100%'\n        },\n        children: messageSuccess\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      sx: {\n        margin: 1,\n        height: '53px'\n      },\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: showModal,\n      children: [\" \", AddButtonLabel]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: openDeleteModal,\n      onClose: handelCloseDeleteModal,\n      \"aria-labelledby\": \"modal-modal-title\",\n      \"aria-describedby\": \"modal-modal-description\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        justifyContent: \"center\",\n        alignItems: \"stretch\",\n        spacing: 1,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              title: \"Confirm Delete !\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  '& .MuiTextField-root': {\n                    my: 1,\n                    width: '25ch'\n                  }\n                },\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Are you sure to delete this Designation type ?\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"button\",\n              sx: {\n                margin: 1\n              },\n              variant: \"contained\",\n              color: \"primary\",\n              onClick: onDeleteHandler,\n              children: \" Yes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              sx: {\n                margin: 1\n              },\n              variant: \"contained\",\n              color: \"error\",\n              onClick: handelCloseDeleteModal,\n              children: \" No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"modal-modal-title\",\n      \"aria-describedby\": \"modal-modal-description\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: style,\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          maxWidth: \"md\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"register-form\",\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              component: \"form\",\n              noValidate: true,\n              autoComplete: \"off\",\n              onSubmit: handleSubmit(onSubmitHandler),\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                direction: \"row\",\n                justifyContent: \"center\",\n                alignItems: \"stretch\",\n                spacing: 1,\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(Card, {\n                    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n                      title: \"Enter Designation  Detail\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 239,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 240,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n                      children: /*#__PURE__*/_jsxDEV(Box, {\n                        sx: {\n                          '& .MuiTextField-root': {\n                            my: 1,\n                            width: '25ch'\n                          }\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          children: /*#__PURE__*/_jsxDEV(TextField, {\n                            style: {\n                              width: '100%'\n                            },\n                            required: true,\n                            id: \"outlined-required\",\n                            label: \"Designation Name\",\n                            ...register('DesignationName'),\n                            fullWidth: true,\n                            error: !!errors['DesignationName'],\n                            helperText: errors['DesignationName'] ? errors['DesignationName'].message : ''\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 248,\n                            columnNumber: 57\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 247,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          children: /*#__PURE__*/_jsxDEV(TextField, {\n                            style: {\n                              width: '100%'\n                            },\n                            id: \"outlined-password-input\",\n                            label: \"Remarks\",\n                            type: \"remarks\",\n                            multiline: true,\n                            rows: 2,\n                            maxRows: 4,\n                            autoComplete: \"current-password\",\n                            ...register('Remarks')\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 260,\n                            columnNumber: 57\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 259,\n                          columnNumber: 53\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 242,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 241,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      type: \"submit\",\n                      sx: {\n                        margin: 1\n                      },\n                      variant: \"contained\",\n                      color: \"primary\",\n                      children: \" Save\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 273,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      type: \"button\",\n                      onClick: () => resetForm(),\n                      sx: {\n                        margin: 1\n                      },\n                      variant: \"contained\",\n                      color: \"secondary\",\n                      children: \" Reset \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 274,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      type: \"submit\",\n                      sx: {\n                        margin: 1\n                      },\n                      variant: \"contained\",\n                      color: \"error\",\n                      onClick: handleClose,\n                      children: \" Close\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 275,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 238,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 237,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(DesignationForm, \"kgW+4SBlkJi2HiYea1K2kCputTI=\", false, function () {\n  return [useForm];\n});\n\n_c = DesignationForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"DesignationForm\");","map":{"version":3,"sources":["E:/Projects/Rebartek/cms.webui/src/content/pages/Components/Designation/DesignationForm.tsx"],"names":["useEffect","useState","Post","Delete","Button","Container","Grid","Card","CardHeader","CardContent","Divider","TextField","Box","Modal","Snackbar","Alert","useForm","object","string","number","zodResolver","style","position","top","left","transform","width","bgcolor","boxShadow","p","DesignationForm","clearForm","designationFormFunc","designationData","rerenderDesignationTable","AddButtonLabel","loading","setLoading","openSuccessAlert","setopenSuccessAlert","openErrorAlert","setopenErrorAlert","messageSuccess","setMessageSuccess","messageErorr","setMessageError","open","setOpen","openDeleteModal","setOpenDeleteModal","handelOpenDeleteModal","handelCloseDeleteModal","handleAlertClose","event","reason","handleOpen","handleClose","reset","initialValues","DesignationName","Remarks","IsDeleted","showModal","resetForm","current","validationSchema","DesignationID","optional","nonempty","max","register","formState","errors","isSubmitSuccessful","handleSubmit","setValue","resolver","onSubmitHandler","values","console","log","handleFormSubmit","onDeleteHandler","then","response","data","status","error","resMessage","message","toString","formValue","_url","margin","height","my"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { Post, Delete } from \"../../../../services/common.service\";\r\nimport { Button, Container, Grid, Card, CardHeader, CardContent, Divider, TextField, Box, Modal, Snackbar, Alert } from '@mui/material';\r\nimport { useForm, SubmitHandler } from 'react-hook-form';\r\nimport { object, string, number, TypeOf } from 'zod';\r\nimport { zodResolver } from '@hookform/resolvers/zod';\r\n\r\n\r\nconst style = {\r\n    position: 'absolute' as 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 600,\r\n    bgcolor: 'background.paper',\r\n    boxShadow: 24,\r\n    p: 4,\r\n};\r\nexport type DesignationModel = {\r\n    DesignationID?: number;\r\n    DesignationName: string;\r\n    Remarks: string;\r\n    IsDeleted: boolean;\r\n};\r\nexport const DesignationForm: React.FC<any> = ({ clearForm, designationFormFunc, designationData, rerenderDesignationTable, AddButtonLabel }) => {\r\n\r\n    const [loading, setLoading] = useState<boolean>(false);\r\n    const [openSuccessAlert, setopenSuccessAlert] = useState<boolean>(false);\r\n    const [openErrorAlert, setopenErrorAlert] = useState<boolean>(false);\r\n    const [messageSuccess, setMessageSuccess] = useState<string>(\"\");\r\n    const [messageErorr, setMessageError] = useState<string>(\"\");\r\n    const [open, setOpen] = useState(false);\r\n    const [openDeleteModal, setOpenDeleteModal] = useState(false);\r\n\r\n    const handelOpenDeleteModal = () => {\r\n        setOpenDeleteModal(true);\r\n    }\r\n    const handelCloseDeleteModal = () => {\r\n        setOpenDeleteModal(false);\r\n    }\r\n\r\n    const handleAlertClose = (event?: React.SyntheticEvent | Event, reason?: string) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setopenSuccessAlert(false);\r\n        setopenErrorAlert(false);\r\n    };\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        reset(initialValues);\r\n        clearForm();\r\n    }\r\n    const initialValues: DesignationModel = {\r\n        DesignationName: \"\",\r\n        Remarks: \"\",\r\n        IsDeleted: false\r\n    };\r\n    const showModal = () => {\r\n        setOpen(true);\r\n        reset(initialValues);\r\n    }\r\n    const resetForm = () => {\r\n        reset(initialValues);\r\n        clearForm();\r\n    }\r\n    useEffect(() => {\r\n        designationFormFunc.current = handleOpen\r\n        reset(designationData);\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        reset(designationData);\r\n    }, [designationData, designationFormFunc]);\r\n\r\n    const validationSchema = object({\r\n        DesignationID: number().optional(),\r\n        DesignationName: string()\r\n            .nonempty('Designation is required')\r\n            .max(200, 'Designation must be less than 200 characters'),\r\n        //Remarks: string().nonempty('Remark is required')\r\n    });\r\n\r\n    const {\r\n        register,\r\n        formState: { errors, isSubmitSuccessful },\r\n        reset,\r\n        handleSubmit,\r\n        setValue\r\n    } = useForm<DesignationModel>({\r\n        resolver: zodResolver(validationSchema)\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (isSubmitSuccessful) {\r\n            reset();\r\n        }\r\n    }, [isSubmitSuccessful]);\r\n\r\n    const onSubmitHandler: SubmitHandler<DesignationModel> = (values) => {\r\n        console.log(values);\r\n        handleFormSubmit(values);\r\n    };\r\n\r\n    const onDeleteHandler = () => {\r\n\r\n        Delete('master/DeleteDesignation?Id=' + designationData.DesignationID).then(\r\n            (response: any) => {\r\n                if (response.data.status == 'success') {\r\n                    setOpenDeleteModal(false);\r\n                    setopenSuccessAlert(true);\r\n                    setMessageSuccess('successfully Deleted');\r\n                    rerenderDesignationTable();\r\n                    handleClose();\r\n                }\r\n            },\r\n            (error: any) => {\r\n                const resMessage =\r\n                    (error.response &&\r\n                        error.response.data &&\r\n                        error.response.data.message) ||\r\n                    error.message ||\r\n                    error.toString();\r\n                setLoading(false);\r\n                setopenErrorAlert(true);\r\n                setMessageError(resMessage);\r\n            }\r\n        );\r\n\r\n    }\r\n\r\n    const handleFormSubmit = (formValue: DesignationModel) => {\r\n\r\n        setLoading(true);\r\n\r\n        let _url = 'master/AddDesignation';\r\n        if (formValue.DesignationID != null && formValue.DesignationID > 0) {\r\n            _url = 'master/EditDesignation';\r\n        }\r\n\r\n        Post(_url, formValue).then(\r\n            (response: any) => {\r\n                if (response.data.status == 'success') {\r\n                    setopenSuccessAlert(true);\r\n                    setMessageSuccess('successfully saved');\r\n                    handleClose();\r\n                    rerenderDesignationTable();\r\n                }\r\n            },\r\n            (error: any) => {\r\n                const resMessage =\r\n                    (error.response &&\r\n                        error.response.data &&\r\n                        error.response.data.message) ||\r\n                    error.message ||\r\n                    error.toString();\r\n                setLoading(false);\r\n                setopenErrorAlert(true);\r\n                setMessageError(resMessage);\r\n            }\r\n        );\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Snackbar open={openSuccessAlert} autoHideDuration={5000} onClose={handleAlertClose}>\r\n                <Alert onClose={handleAlertClose} variant=\"filled\" severity=\"success\" sx={{ width: '100%' }}>\r\n                    {messageSuccess}\r\n                </Alert>\r\n            </Snackbar>\r\n\r\n            <Snackbar open={openErrorAlert} autoHideDuration={5000} onClose={handleAlertClose}>\r\n                <Alert onClose={handleAlertClose} variant=\"filled\" severity=\"success\" sx={{ width: '100%' }}>\r\n                    {messageSuccess}\r\n                </Alert>\r\n            </Snackbar>\r\n\r\n            <Button sx={{ margin: 1, height: '53px' }} variant=\"contained\" color=\"primary\" onClick={showModal}> {AddButtonLabel}</Button>\r\n            <Modal\r\n                open={openDeleteModal}\r\n                onClose={handelCloseDeleteModal}\r\n                aria-labelledby=\"modal-modal-title\"\r\n                aria-describedby=\"modal-modal-description\"\r\n            >\r\n                <Grid\r\n                    container\r\n                    direction=\"row\"\r\n                    justifyContent=\"center\"\r\n                    alignItems=\"stretch\"\r\n                    spacing={1}\r\n                >\r\n                    <Grid item xs={12}>\r\n                        <Card>\r\n                            <CardHeader title=\"Confirm Delete !\" />\r\n                            <Divider />\r\n                            <CardContent>\r\n                                <Box\r\n                                    sx={{\r\n                                        '& .MuiTextField-root': { my: 1, width: '25ch' },\r\n                                    }}\r\n                                >\r\n                                    <p>Are you sure to delete this Designation type ?</p>\r\n\r\n                                </Box>\r\n                            </CardContent>\r\n                            <Button type=\"button\" sx={{ margin: 1 }} variant=\"contained\" color=\"primary\" onClick={onDeleteHandler}> Yes</Button>\r\n                            <Button type=\"submit\" sx={{ margin: 1 }} variant=\"contained\" color=\"error\" onClick={handelCloseDeleteModal}> No</Button>\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n            </Modal>\r\n\r\n            <Modal\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"modal-modal-title\"\r\n                aria-describedby=\"modal-modal-description\"\r\n            >\r\n                <Box sx={style}>\r\n                    <Container maxWidth=\"md\">\r\n                        <div className=\"register-form\">\r\n                            <Box\r\n                                component='form'\r\n                                noValidate\r\n                                autoComplete='off'\r\n                                onSubmit={handleSubmit(onSubmitHandler)}>\r\n                                <Grid\r\n                                    container\r\n                                    direction=\"row\"\r\n                                    justifyContent=\"center\"\r\n                                    alignItems=\"stretch\"\r\n                                    spacing={1}\r\n                                >\r\n                                    <Grid item xs={12}>\r\n                                        <Card>\r\n                                            <CardHeader title=\"Enter Designation  Detail\" />\r\n                                            <Divider />\r\n                                            <CardContent>\r\n                                                <Box\r\n                                                    sx={{\r\n                                                        '& .MuiTextField-root': { my: 1, width: '25ch' },\r\n                                                    }}\r\n                                                >\r\n                                                    <div>\r\n                                                        <TextField\r\n                                                            style={{ width: '100%' }}\r\n                                                            required\r\n                                                            id=\"outlined-required\"\r\n                                                            label=\"Designation Name\"\r\n                                                            {...register('DesignationName')}\r\n                                                            fullWidth\r\n                                                            error={!!errors['DesignationName']}\r\n                                                            helperText={errors['DesignationName'] ? errors['DesignationName'].message : ''}\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div>\r\n                                                        <TextField style={{ width: '100%' }}\r\n\r\n                                                            id=\"outlined-password-input\"\r\n                                                            label=\"Remarks\"\r\n                                                            type=\"remarks\"\r\n                                                            multiline rows={2}\r\n                                                            maxRows={4}\r\n                                                            autoComplete=\"current-password\"\r\n                                                            {...register('Remarks')}\r\n                                                        />\r\n                                                    </div>\r\n                                                </Box>\r\n                                            </CardContent>\r\n                                            <Button type=\"submit\" sx={{ margin: 1 }} variant=\"contained\" color=\"primary\"> Save</Button>\r\n                                            <Button type=\"button\" onClick={() => resetForm()} sx={{ margin: 1 }} variant=\"contained\" color=\"secondary\"> Reset </Button>\r\n                                            <Button type=\"submit\" sx={{ margin: 1 }} variant=\"contained\" color=\"error\" onClick={handleClose}> Close</Button>\r\n                                            {/*<Box component='span' hidden={designationData.DesignationID == undefined}>*/}\r\n                                            {/*    <Button type=\"button\" sx={{ margin: 1, float: 'right' }} variant=\"contained\" color=\"error\" onClick={handelOpenDeleteModal}> Delete</Button>*/}\r\n                                            {/*</Box>*/}\r\n                                        </Card>\r\n                                    </Grid>\r\n                                </Grid>\r\n\r\n                            </Box>\r\n                        </div>\r\n                    </Container>\r\n                </Box>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}