{"ast":null,"code":"var _jsxFileName = \"E:\\\\Projects\\\\Rebartek\\\\CMS.WEBUI\\\\src\\\\components\\\\Text\\\\index.tsx\";\nimport PropTypes from 'prop-types';\nimport { styled } from '@mui/material/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TextWrapper = styled('span')(_ref => {\n  let {\n    theme\n  } = _ref;\n  return `\n      \n      &.MuiText {\n\n        &-black {\n          color: ${theme.palette.common.black}\n        }\n\n        &-primary {\n          color: ${theme.palette.primary.main}\n        }\n        \n        &-secondary {\n          color: ${theme.palette.secondary.main}\n        }\n        \n        &-success {\n          color: ${theme.palette.success.main}\n        }\n        \n        &-warning {\n          color: ${theme.palette.warning.main}\n        }\n              \n        &-error {\n          color: ${theme.palette.error.main}\n        }\n        \n        &-info {\n          color: ${theme.palette.info.main}\n        }\n      }\n`;\n});\n_c = TextWrapper;\n\nconst Text = _ref2 => {\n  let {\n    className = '',\n    color = 'secondary',\n    children,\n    ...rest\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(TextWrapper, {\n    className: 'MuiText-' + color,\n    ...rest,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Text;\nText.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  color: PropTypes.oneOf(['primary', 'secondary', 'error', 'warning', 'success', 'info', 'black'])\n};\nexport default Text;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TextWrapper\");\n$RefreshReg$(_c2, \"Text\");","map":{"version":3,"sources":["E:/Projects/Rebartek/CMS.WEBUI/src/components/Text/index.tsx"],"names":["PropTypes","styled","TextWrapper","theme","palette","common","black","primary","main","secondary","success","warning","error","info","Text","className","color","children","rest","propTypes","node","string","oneOf"],"mappings":";AACA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,QAAuB,sBAAvB;;AAeA,MAAMC,WAAW,GAAGD,MAAM,CAAC,MAAD,CAAN,CAClB;AAAA,MAAC;AAAEE,IAAAA;AAAF,GAAD;AAAA,SAAgB;AAClB;AACA;AACA;AACA;AACA,mBAAmBA,KAAK,CAACC,OAAN,CAAcC,MAAd,CAAqBC,KAAM;AAC9C;AACA;AACA;AACA,mBAAmBH,KAAK,CAACC,OAAN,CAAcG,OAAd,CAAsBC,IAAK;AAC9C;AACA;AACA;AACA,mBAAmBL,KAAK,CAACC,OAAN,CAAcK,SAAd,CAAwBD,IAAK;AAChD;AACA;AACA;AACA,mBAAmBL,KAAK,CAACC,OAAN,CAAcM,OAAd,CAAsBF,IAAK;AAC9C;AACA;AACA;AACA,mBAAmBL,KAAK,CAACC,OAAN,CAAcO,OAAd,CAAsBH,IAAK;AAC9C;AACA;AACA;AACA,mBAAmBL,KAAK,CAACC,OAAN,CAAcQ,KAAd,CAAoBJ,IAAK;AAC5C;AACA;AACA;AACA,mBAAmBL,KAAK,CAACC,OAAN,CAAcS,IAAd,CAAmBL,IAAK;AAC3C;AACA;AACA,CAhCE;AAAA,CADkB,CAApB;KAAMN,W;;AAoCN,MAAMY,IAAmB,GAAG,SAKtB;AAAA,MALuB;AAC3BC,IAAAA,SAAS,GAAG,EADe;AAE3BC,IAAAA,KAAK,GAAG,WAFmB;AAG3BC,IAAAA,QAH2B;AAI3B,OAAGC;AAJwB,GAKvB;AACJ,sBACE,QAAC,WAAD;AAAa,IAAA,SAAS,EAAE,aAAaF,KAArC;AAAA,OAAgDE,IAAhD;AAAA,cACGD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAXD;;MAAMH,I;AAaNA,IAAI,CAACK,SAAL,GAAiB;AACfF,EAAAA,QAAQ,EAAEjB,SAAS,CAACoB,IADL;AAEfL,EAAAA,SAAS,EAAEf,SAAS,CAACqB,MAFN;AAGfL,EAAAA,KAAK,EAAEhB,SAAS,CAACsB,KAAV,CAAgB,CACrB,SADqB,EAErB,WAFqB,EAGrB,OAHqB,EAIrB,SAJqB,EAKrB,SALqB,EAMrB,MANqB,EAOrB,OAPqB,CAAhB;AAHQ,CAAjB;AAcA,eAAeR,IAAf","sourcesContent":["import { FC, ReactNode } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { styled } from '@mui/material/styles';\r\n\r\ninterface TextProps {\r\n  className?: string;\r\n  color?:\r\n  | 'primary'\r\n  | 'secondary'\r\n  | 'error'\r\n  | 'warning'\r\n  | 'success'\r\n  | 'info'\r\n  | 'black';\r\n  children?: ReactNode;\r\n}\r\n\r\nconst TextWrapper = styled('span')(\r\n  ({ theme }) => `\r\n      \r\n      &.MuiText {\r\n\r\n        &-black {\r\n          color: ${theme.palette.common.black}\r\n        }\r\n\r\n        &-primary {\r\n          color: ${theme.palette.primary.main}\r\n        }\r\n        \r\n        &-secondary {\r\n          color: ${theme.palette.secondary.main}\r\n        }\r\n        \r\n        &-success {\r\n          color: ${theme.palette.success.main}\r\n        }\r\n        \r\n        &-warning {\r\n          color: ${theme.palette.warning.main}\r\n        }\r\n              \r\n        &-error {\r\n          color: ${theme.palette.error.main}\r\n        }\r\n        \r\n        &-info {\r\n          color: ${theme.palette.info.main}\r\n        }\r\n      }\r\n`\r\n);\r\n\r\nconst Text: FC<TextProps> = ({\r\n  className = '',\r\n  color = 'secondary',\r\n  children,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <TextWrapper className={'MuiText-' + color} {...rest}>\r\n      {children}\r\n    </TextWrapper>\r\n  );\r\n};\r\n\r\nText.propTypes = {\r\n  children: PropTypes.node,\r\n  className: PropTypes.string,\r\n  color: PropTypes.oneOf([\r\n    'primary',\r\n    'secondary',\r\n    'error',\r\n    'warning',\r\n    'success',\r\n    'info',\r\n    'black'\r\n  ])\r\n};\r\n\r\nexport default Text;\r\n"]},"metadata":{},"sourceType":"module"}