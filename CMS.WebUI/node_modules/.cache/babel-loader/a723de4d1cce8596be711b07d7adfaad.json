{"ast":null,"code":"var _jsxFileName = \"E:\\\\Projects\\\\LFMS\\\\LFMS.WebUI\\\\src\\\\content\\\\pages\\\\Components\\\\DataTables\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { alpha } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\nimport TableSortLabel from '@mui/material/TableSortLabel';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport Paper from '@mui/material/Paper';\nimport Checkbox from '@mui/material/Checkbox';\nimport IconButton from '@mui/material/IconButton';\nimport Tooltip from '@mui/material/Tooltip';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Switch from '@mui/material/Switch';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport FilterListIcon from '@mui/icons-material/FilterList';\nimport { visuallyHidden } from '@mui/utils';\nimport PropTypes from 'prop-types';\nimport { post } from \"../../../../services/common.service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n//function createData(\n//    name: string,\n//    calories: number,\n//    fat: number,\n//    carbs: number,\n//    protein: number,\n//): Data {\n//    return {\n//        name,\n//        calories,\n//        fat,\n//        carbs,\n//        protein,\n//    };\n//}\n//const rows = [\n//    createData('Cupcake', 305, 3.7, 67, 4.3),\n//    createData('Donut', 452, 25.0, 51, 4.9),\n//    createData('Eclair', 262, 16.0, 24, 6.0),\n//    createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n//    createData('Gingerbread', 356, 16.0, 49, 3.9),\n//    createData('Honeycomb', 408, 3.2, 87, 6.5),\n//    createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n//    createData('Jelly Bean', 375, 0.0, 94, 0.0),\n//    createData('KitKat', 518, 26.0, 65, 7.0),\n//    createData('Lollipop', 392, 0.2, 98, 0.0),\n//    createData('Marshmallow', 318, 0, 81, 2.0),\n//    createData('Nougat', 360, 19.0, 9, 37.0),\n//    createData('Oreo', 437, 18.0, 63, 4.0),\n//];\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc' ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\n} // This method is created for cross-browser compatibility, if you don't\n// need to support IE11, you can use Array.prototype.sort() directly\n\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n\n    if (order !== 0) {\n      return order;\n    }\n\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nfunction EnhancedTableHead(props) {\n  const {\n    headCells,\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort\n  } = props;\n\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return /*#__PURE__*/_jsxDEV(TableHead, {\n    children: /*#__PURE__*/_jsxDEV(TableRow, {\n      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n        padding: \"checkbox\",\n        children: /*#__PURE__*/_jsxDEV(Checkbox, {\n          color: \"primary\",\n          indeterminate: numSelected > 0 && numSelected < rowCount,\n          checked: rowCount > 0 && numSelected === rowCount,\n          onChange: onSelectAllClick,\n          inputProps: {\n            'aria-label': 'select all desserts'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }, this), headCells.map(headCell => /*#__PURE__*/_jsxDEV(TableCell, {\n        align: headCell.numeric ? 'right' : 'left',\n        padding: headCell.disablePadding ? 'none' : 'normal',\n        sortDirection: orderBy === headCell.id ? order : false,\n        children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n          active: orderBy === headCell.id,\n          direction: orderBy === headCell.id ? order : 'asc',\n          onClick: createSortHandler(headCell.id),\n          children: [headCell.label, orderBy === headCell.id ? /*#__PURE__*/_jsxDEV(Box, {\n            component: \"span\",\n            sx: visuallyHidden,\n            children: order === 'desc' ? 'sorted descending' : 'sorted ascending'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 33\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 25\n        }, this)\n      }, headCell.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 9\n  }, this);\n}\n\n_c = EnhancedTableHead;\n\nconst EnhancedTableToolbar = props => {\n  const {\n    numSelected\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Toolbar, {\n    sx: {\n      pl: {\n        sm: 2\n      },\n      pr: {\n        xs: 1,\n        sm: 1\n      },\n      ...(numSelected > 0 && {\n        bgcolor: theme => alpha(theme.palette.primary.main, theme.palette.action.activatedOpacity)\n      })\n    },\n    children: [numSelected > 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n      sx: {\n        flex: '1 1 100%'\n      },\n      color: \"inherit\",\n      variant: \"subtitle1\",\n      component: \"div\",\n      children: [numSelected, \" selected\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n      sx: {\n        flex: '1 1 100%'\n      },\n      variant: \"h6\",\n      id: \"tableTitle\",\n      component: \"div\",\n      children: \"Nutrition\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 17\n    }, this), numSelected > 0 ? /*#__PURE__*/_jsxDEV(Tooltip, {\n      title: \"Delete\",\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(Tooltip, {\n      title: \"Filter list\",\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        children: /*#__PURE__*/_jsxDEV(FilterListIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 212,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = EnhancedTableToolbar;\n\nconst DataTable = _ref => {\n  _s();\n\n  let {\n    headCells\n  } = _ref;\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('calories');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const [rows, setRows] = React.useState([]);\n\n  const getFilteredData = () => {\n    let _requestParamters = {\n      filter: {\n        Email: '',\n        UserID: 0,\n        PersonName: '',\n        UserName: '',\n        Password: ''\n      },\n      length: rowsPerPage,\n      start: page * rowsPerPage,\n      order: {\n        orderBy: orderBy,\n        orderDirection: order\n      }\n    };\n    post('user/GetUsers', _requestParamters).then(response => {\n      if (response.status == 200) {\n        setRows(response.data.data);\n      }\n    }, error => {\n      const resMessage = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    });\n  };\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n    getFilteredData();\n  };\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map(n => n[0]);\n      setSelected(newSelecteds);\n      return;\n    }\n\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = event => {\n    setDense(event.target.checked);\n  };\n\n  const isSelected = name => selected.indexOf(name) !== -1; // Avoid a layout jump when reaching the last page with empty rows.\n\n\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        width: '100%',\n        mb: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(EnhancedTableToolbar, {\n        numSelected: selected.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          sx: {\n            minWidth: 750\n          },\n          \"aria-labelledby\": \"tableTitle\",\n          size: dense ? 'small' : 'medium',\n          children: [/*#__PURE__*/_jsxDEV(EnhancedTableHead, {\n            numSelected: selected.length,\n            order: order,\n            orderBy: orderBy,\n            onSelectAllClick: handleSelectAllClick,\n            onRequestSort: handleRequestSort,\n            rowCount: rows.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: [//stableSort(rows, getComparator(order, orderBy))\n            //.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n            rows.map((row, index) => {\n              const isItemSelected = isSelected(row[0]);\n              const labelId = `enhanced-table-checkbox-${index}`;\n              return /*#__PURE__*/_jsxDEV(TableRow, {\n                hover: true,\n                onClick: event => handleClick(event, row[headCells[0].id]),\n                role: \"checkbox\",\n                \"aria-checked\": isItemSelected,\n                tabIndex: -1,\n                selected: isItemSelected,\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  padding: \"checkbox\",\n                  children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                    color: \"primary\",\n                    checked: isItemSelected,\n                    inputProps: {\n                      'aria-labelledby': labelId\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 394,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 393,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  component: \"th\",\n                  id: labelId,\n                  scope: \"row\",\n                  padding: \"none\",\n                  children: row[headCells[0].id]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 402,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: row[headCells[0].id]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 410,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: row[2]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 411,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: row[3]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 412,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: row[4]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 413,\n                  columnNumber: 45\n                }, this)]\n              }, row[0], true, {\n                fileName: _jsxFileName,\n                lineNumber: 384,\n                columnNumber: 41\n              }, this);\n            }), emptyRows > 0 && /*#__PURE__*/_jsxDEV(TableRow, {\n              style: {\n                height: (dense ? 33 : 53) * emptyRows\n              },\n              children: /*#__PURE__*/_jsxDEV(TableCell, {\n                colSpan: 6\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 423,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n        rowsPerPageOptions: [5, 10, 25],\n        component: \"div\",\n        count: rows.length,\n        rowsPerPage: rowsPerPage,\n        page: page,\n        onPageChange: handleChangePage,\n        onRowsPerPageChange: handleChangeRowsPerPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(Switch, {\n        checked: dense,\n        onChange: handleChangeDense\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 26\n      }, this),\n      label: \"Dense padding\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 356,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DataTable, \"kszUebpOYyVzZLcwXPyY3W3UXlY=\");\n\n_c3 = DataTable;\nDataTable.propTypes = {\n  cryptoOrders: PropTypes.array.isRequired\n};\nDataTable.defaultProps = {\n  cryptoOrders: []\n};\nexport default DataTable;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"EnhancedTableHead\");\n$RefreshReg$(_c2, \"EnhancedTableToolbar\");\n$RefreshReg$(_c3, \"DataTable\");","map":{"version":3,"sources":["E:/Projects/LFMS/LFMS.WebUI/src/content/pages/Components/DataTables/index.tsx"],"names":["React","alpha","Box","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","TableSortLabel","Toolbar","Typography","Paper","Checkbox","IconButton","Tooltip","FormControlLabel","Switch","DeleteIcon","FilterListIcon","visuallyHidden","PropTypes","post","descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","map","el","index","sort","EnhancedTableHead","props","headCells","onSelectAllClick","numSelected","rowCount","onRequestSort","createSortHandler","property","event","headCell","numeric","disablePadding","id","label","EnhancedTableToolbar","pl","sm","pr","xs","bgcolor","theme","palette","primary","main","action","activatedOpacity","flex","DataTable","setOrder","useState","setOrderBy","selected","setSelected","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","rows","setRows","getFilteredData","_requestParamters","filter","Email","UserID","PersonName","UserName","Password","length","start","orderDirection","then","response","status","data","error","resMessage","message","toString","handleRequestSort","isAsc","handleSelectAllClick","target","checked","newSelecteds","n","handleClick","name","selectedIndex","indexOf","newSelected","concat","slice","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","value","handleChangeDense","isSelected","emptyRows","Math","max","width","mb","minWidth","row","isItemSelected","labelId","height","propTypes","cryptoOrders","isRequired","defaultProps"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,KAAT,QAAsB,sBAAtB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,eAAP,MAA4B,+BAA5B;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAOC,cAAP,MAA2B,gCAA3B;AACA,SAASC,cAAT,QAA+B,YAA/B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,IAAT,QAAqB,qCAArB;;;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASC,oBAAT,CAAiCC,CAAjC,EAAuCC,CAAvC,EAA6CC,OAA7C,EAA+D;AAC3D,MAAID,CAAC,CAACC,OAAD,CAAD,GAAaF,CAAC,CAACE,OAAD,CAAlB,EAA6B;AACzB,WAAO,CAAC,CAAR;AACH;;AACD,MAAID,CAAC,CAACC,OAAD,CAAD,GAAaF,CAAC,CAACE,OAAD,CAAlB,EAA6B;AACzB,WAAO,CAAP;AACH;;AACD,SAAO,CAAP;AACH;;AAID,SAASC,aAAT,CACIC,KADJ,EAEIF,OAFJ,EAMgB;AACZ,SAAOE,KAAK,KAAK,MAAV,GACD,CAACJ,CAAD,EAAIC,CAAJ,KAAUF,oBAAoB,CAACC,CAAD,EAAIC,CAAJ,EAAOC,OAAP,CAD7B,GAED,CAACF,CAAD,EAAIC,CAAJ,KAAU,CAACF,oBAAoB,CAACC,CAAD,EAAIC,CAAJ,EAAOC,OAAP,CAFrC;AAGH,C,CAED;AACA;;;AACA,SAASG,UAAT,CAAuBC,KAAvB,EAA4CC,UAA5C,EAAgF;AAC5E,QAAMC,cAAc,GAAGF,KAAK,CAACG,GAAN,CAAU,CAACC,EAAD,EAAKC,KAAL,KAAe,CAACD,EAAD,EAAKC,KAAL,CAAzB,CAAvB;AACAH,EAAAA,cAAc,CAACI,IAAf,CAAoB,CAACZ,CAAD,EAAIC,CAAJ,KAAU;AAC1B,UAAMG,KAAK,GAAGG,UAAU,CAACP,CAAC,CAAC,CAAD,CAAF,EAAOC,CAAC,CAAC,CAAD,CAAR,CAAxB;;AACA,QAAIG,KAAK,KAAK,CAAd,EAAiB;AACb,aAAOA,KAAP;AACH;;AACD,WAAOJ,CAAC,CAAC,CAAD,CAAD,GAAOC,CAAC,CAAC,CAAD,CAAf;AACH,GAND;AAOA,SAAOO,cAAc,CAACC,GAAf,CAAoBC,EAAD,IAAQA,EAAE,CAAC,CAAD,CAA7B,CAAP;AACH;;AAoDD,SAASG,iBAAT,CAA2BC,KAA3B,EAAsD;AAClD,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,gBAAb;AAA+BZ,IAAAA,KAA/B;AAAsCF,IAAAA,OAAtC;AAA+Ce,IAAAA,WAA/C;AAA4DC,IAAAA,QAA5D;AAAsEC,IAAAA;AAAtE,MACFL,KADJ;;AAEA,QAAMM,iBAAiB,GAClBC,QAAD,IAAuBC,KAAD,IAAsC;AACxDH,IAAAA,aAAa,CAACG,KAAD,EAAQD,QAAR,CAAb;AACH,GAHL;;AAKA,sBACI,QAAC,SAAD;AAAA,2BACI,QAAC,QAAD;AAAA,8BACI,QAAC,SAAD;AAAW,QAAA,OAAO,EAAC,UAAnB;AAAA,+BACI,QAAC,QAAD;AACI,UAAA,KAAK,EAAC,SADV;AAEI,UAAA,aAAa,EAAEJ,WAAW,GAAG,CAAd,IAAmBA,WAAW,GAAGC,QAFpD;AAGI,UAAA,OAAO,EAAEA,QAAQ,GAAG,CAAX,IAAgBD,WAAW,KAAKC,QAH7C;AAII,UAAA,QAAQ,EAAEF,gBAJd;AAKI,UAAA,UAAU,EAAE;AACR,0BAAc;AADN;AALhB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,EAYKD,SAAS,CAACN,GAAV,CAAec,QAAD,iBACX,QAAC,SAAD;AAEI,QAAA,KAAK,EAAEA,QAAQ,CAACC,OAAT,GAAmB,OAAnB,GAA6B,MAFxC;AAGI,QAAA,OAAO,EAAED,QAAQ,CAACE,cAAT,GAA0B,MAA1B,GAAmC,QAHhD;AAII,QAAA,aAAa,EAAEvB,OAAO,KAAKqB,QAAQ,CAACG,EAArB,GAA0BtB,KAA1B,GAAkC,KAJrD;AAAA,+BAMI,QAAC,cAAD;AACI,UAAA,MAAM,EAAEF,OAAO,KAAKqB,QAAQ,CAACG,EADjC;AAEI,UAAA,SAAS,EAAExB,OAAO,KAAKqB,QAAQ,CAACG,EAArB,GAA0BtB,KAA1B,GAAkC,KAFjD;AAGI,UAAA,OAAO,EAAEgB,iBAAiB,CAACG,QAAQ,CAACG,EAAV,CAH9B;AAAA,qBAKKH,QAAQ,CAACI,KALd,EAMKzB,OAAO,KAAKqB,QAAQ,CAACG,EAArB,gBACG,QAAC,GAAD;AAAK,YAAA,SAAS,EAAC,MAAf;AAAsB,YAAA,EAAE,EAAE9B,cAA1B;AAAA,sBACKQ,KAAK,KAAK,MAAV,GAAmB,mBAAnB,GAAyC;AAD9C;AAAA;AAAA;AAAA;AAAA,kBADH,GAIG,IAVR;AAAA;AAAA;AAAA;AAAA;AAAA;AANJ,SACSmB,QAAQ,CAACG,EADlB;AAAA;AAAA;AAAA;AAAA,cADH,CAZL;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAsCH;;KA9CQb,iB;;AAqDT,MAAMe,oBAAoB,GAAId,KAAD,IAAsC;AAC/D,QAAM;AAAEG,IAAAA;AAAF,MAAkBH,KAAxB;AAEA,sBACI,QAAC,OAAD;AACI,IAAA,EAAE,EAAE;AACAe,MAAAA,EAAE,EAAE;AAAEC,QAAAA,EAAE,EAAE;AAAN,OADJ;AAEAC,MAAAA,EAAE,EAAE;AAAEC,QAAAA,EAAE,EAAE,CAAN;AAASF,QAAAA,EAAE,EAAE;AAAb,OAFJ;AAGA,UAAIb,WAAW,GAAG,CAAd,IAAmB;AACnBgB,QAAAA,OAAO,EAAGC,KAAD,IACL1D,KAAK,CAAC0D,KAAK,CAACC,OAAN,CAAcC,OAAd,CAAsBC,IAAvB,EAA6BH,KAAK,CAACC,OAAN,CAAcG,MAAd,CAAqBC,gBAAlD;AAFU,OAAvB;AAHA,KADR;AAAA,eAUKtB,WAAW,GAAG,CAAd,gBACG,QAAC,UAAD;AACI,MAAA,EAAE,EAAE;AAAEuB,QAAAA,IAAI,EAAE;AAAR,OADR;AAEI,MAAA,KAAK,EAAC,SAFV;AAGI,MAAA,OAAO,EAAC,WAHZ;AAII,MAAA,SAAS,EAAC,KAJd;AAAA,iBAMKvB,WANL;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,gBAUG,QAAC,UAAD;AACI,MAAA,EAAE,EAAE;AAAEuB,QAAAA,IAAI,EAAE;AAAR,OADR;AAEI,MAAA,OAAO,EAAC,IAFZ;AAGI,MAAA,EAAE,EAAC,YAHP;AAII,MAAA,SAAS,EAAC,KAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YApBR,EA6BKvB,WAAW,GAAG,CAAd,gBACG,QAAC,OAAD;AAAS,MAAA,KAAK,EAAC,QAAf;AAAA,6BACI,QAAC,UAAD;AAAA,+BACI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADH,gBAOG,QAAC,OAAD;AAAS,MAAA,KAAK,EAAC,aAAf;AAAA,6BACI,QAAC,UAAD;AAAA,+BACI,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YApCR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA6CH,CAhDD;;MAAMW,oB;;AAkDN,MAAMa,SAAwB,GAAG,QAAmB;AAAA;;AAAA,MAAlB;AAAE1B,IAAAA;AAAF,GAAkB;AAChD,QAAM,CAACX,KAAD,EAAQsC,QAAR,IAAoBnE,KAAK,CAACoE,QAAN,CAAsB,KAAtB,CAA1B;AACA,QAAM,CAACzC,OAAD,EAAU0C,UAAV,IAAwBrE,KAAK,CAACoE,QAAN,CAAuB,UAAvB,CAA9B;AACA,QAAM,CAACE,QAAD,EAAWC,WAAX,IAA0BvE,KAAK,CAACoE,QAAN,CAAkC,EAAlC,CAAhC;AACA,QAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBzE,KAAK,CAACoE,QAAN,CAAe,CAAf,CAAxB;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoB3E,KAAK,CAACoE,QAAN,CAAe,KAAf,CAA1B;AACA,QAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgC7E,KAAK,CAACoE,QAAN,CAAe,CAAf,CAAtC;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkB/E,KAAK,CAACoE,QAAN,CAAe,EAAf,CAAxB;;AAEA,QAAMY,eAAe,GAAG,MAAM;AAC1B,QAAIC,iBAAmC,GAAG;AACtCC,MAAAA,MAAM,EAAE;AACJC,QAAAA,KAAK,EAAE,EADH;AAEJC,QAAAA,MAAM,EAAE,CAFJ;AAGJC,QAAAA,UAAU,EAAE,EAHR;AAIJC,QAAAA,QAAQ,EAAE,EAJN;AAKJC,QAAAA,QAAQ,EAAE;AALN,OAD8B;AAQtCC,MAAAA,MAAM,EAAEZ,WAR8B;AAStCa,MAAAA,KAAK,EAAEjB,IAAI,GAAGI,WATwB;AAUtC/C,MAAAA,KAAK,EAAE;AAAEF,QAAAA,OAAO,EAAEA,OAAX;AAAoB+D,QAAAA,cAAc,EAAE7D;AAApC;AAV+B,KAA1C;AAYAN,IAAAA,IAAI,CAAC,eAAD,EAAkB0D,iBAAlB,CAAJ,CAAyCU,IAAzC,CACKC,QAAD,IAAmB;AACf,UAAIA,QAAQ,CAACC,MAAT,IAAmB,GAAvB,EAA4B;AACxBd,QAAAA,OAAO,CAACa,QAAQ,CAACE,IAAT,CAAcA,IAAf,CAAP;AAEH;AACJ,KANL,EAOKC,KAAD,IAAgB;AACZ,YAAMC,UAAU,GACXD,KAAK,CAACH,QAAN,IACGG,KAAK,CAACH,QAAN,CAAeE,IADlB,IAEGC,KAAK,CAACH,QAAN,CAAeE,IAAf,CAAoBG,OAFxB,IAGAF,KAAK,CAACE,OAHN,IAIAF,KAAK,CAACG,QAAN,EALJ;AAMH,KAdL;AAgBH,GA7BD;;AA8BA,QAAMC,iBAAiB,GAAG,CACtBpD,KADsB,EAEtBD,QAFsB,KAGrB;AACD,UAAMsD,KAAK,GAAGzE,OAAO,KAAKmB,QAAZ,IAAwBjB,KAAK,KAAK,KAAhD;AACAsC,IAAAA,QAAQ,CAACiC,KAAK,GAAG,MAAH,GAAY,KAAlB,CAAR;AACA/B,IAAAA,UAAU,CAACvB,QAAD,CAAV;AACAkC,IAAAA,eAAe;AAClB,GARD;;AAUA,QAAMqB,oBAAoB,GAAItD,KAAD,IAAgD;AACzE,QAAIA,KAAK,CAACuD,MAAN,CAAaC,OAAjB,EAA0B;AACtB,YAAMC,YAAY,GAAG1B,IAAI,CAAC5C,GAAL,CAAUuE,CAAD,IAAOA,CAAC,CAAC,CAAD,CAAjB,CAArB;AACAlC,MAAAA,WAAW,CAACiC,YAAD,CAAX;AACA;AACH;;AACDjC,IAAAA,WAAW,CAAC,EAAD,CAAX;AACH,GAPD;;AASA,QAAMmC,WAAW,GAAG,CAAC3D,KAAD,EAAmC4D,IAAnC,KAAiD;AACjE,UAAMC,aAAa,GAAGtC,QAAQ,CAACuC,OAAT,CAAiBF,IAAjB,CAAtB;AACA,QAAIG,WAA8B,GAAG,EAArC;;AAEA,QAAIF,aAAa,KAAK,CAAC,CAAvB,EAA0B;AACtBE,MAAAA,WAAW,GAAGA,WAAW,CAACC,MAAZ,CAAmBzC,QAAnB,EAA6BqC,IAA7B,CAAd;AACH,KAFD,MAEO,IAAIC,aAAa,KAAK,CAAtB,EAAyB;AAC5BE,MAAAA,WAAW,GAAGA,WAAW,CAACC,MAAZ,CAAmBzC,QAAQ,CAAC0C,KAAT,CAAe,CAAf,CAAnB,CAAd;AACH,KAFM,MAEA,IAAIJ,aAAa,KAAKtC,QAAQ,CAACkB,MAAT,GAAkB,CAAxC,EAA2C;AAC9CsB,MAAAA,WAAW,GAAGA,WAAW,CAACC,MAAZ,CAAmBzC,QAAQ,CAAC0C,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAAnB,CAAd;AACH,KAFM,MAEA,IAAIJ,aAAa,GAAG,CAApB,EAAuB;AAC1BE,MAAAA,WAAW,GAAGA,WAAW,CAACC,MAAZ,CACVzC,QAAQ,CAAC0C,KAAT,CAAe,CAAf,EAAkBJ,aAAlB,CADU,EAEVtC,QAAQ,CAAC0C,KAAT,CAAeJ,aAAa,GAAG,CAA/B,CAFU,CAAd;AAIH;;AAEDrC,IAAAA,WAAW,CAACuC,WAAD,CAAX;AACH,GAlBD;;AAoBA,QAAMG,gBAAgB,GAAG,CAAClE,KAAD,EAAiBmE,OAAjB,KAAqC;AAC1DzC,IAAAA,OAAO,CAACyC,OAAD,CAAP;AACH,GAFD;;AAIA,QAAMC,uBAAuB,GAAIpE,KAAD,IAAgD;AAC5E8B,IAAAA,cAAc,CAACuC,QAAQ,CAACrE,KAAK,CAACuD,MAAN,CAAae,KAAd,EAAqB,EAArB,CAAT,CAAd;AACA5C,IAAAA,OAAO,CAAC,CAAD,CAAP;AACH,GAHD;;AAKA,QAAM6C,iBAAiB,GAAIvE,KAAD,IAAgD;AACtE4B,IAAAA,QAAQ,CAAC5B,KAAK,CAACuD,MAAN,CAAaC,OAAd,CAAR;AACH,GAFD;;AAIA,QAAMgB,UAAU,GAAIZ,IAAD,IAAerC,QAAQ,CAACuC,OAAT,CAAiBF,IAAjB,MAA2B,CAAC,CAA9D,CA3FgD,CA6FhD;;;AACA,QAAMa,SAAS,GACXhD,IAAI,GAAG,CAAP,GAAWiD,IAAI,CAACC,GAAL,CAAS,CAAT,EAAY,CAAC,IAAIlD,IAAL,IAAaI,WAAb,GAA2BE,IAAI,CAACU,MAA5C,CAAX,GAAiE,CADrE;AAGA,sBACI,QAAC,GAAD;AAAK,IAAA,EAAE,EAAE;AAAEmC,MAAAA,KAAK,EAAE;AAAT,KAAT;AAAA,4BACI,QAAC,KAAD;AAAO,MAAA,EAAE,EAAE;AAAEA,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,EAAE,EAAE;AAArB,OAAX;AAAA,8BACI,QAAC,oBAAD;AAAsB,QAAA,WAAW,EAAEtD,QAAQ,CAACkB;AAA5C;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,cAAD;AAAA,+BACI,QAAC,KAAD;AACI,UAAA,EAAE,EAAE;AAAEqC,YAAAA,QAAQ,EAAE;AAAZ,WADR;AAEI,6BAAgB,YAFpB;AAGI,UAAA,IAAI,EAAEnD,KAAK,GAAG,OAAH,GAAa,QAH5B;AAAA,kCAKI,QAAC,iBAAD;AACI,YAAA,WAAW,EAAEJ,QAAQ,CAACkB,MAD1B;AAEI,YAAA,KAAK,EAAE3D,KAFX;AAGI,YAAA,OAAO,EAAEF,OAHb;AAII,YAAA,gBAAgB,EAAE0E,oBAJtB;AAKI,YAAA,aAAa,EAAEF,iBALnB;AAMI,YAAA,QAAQ,EAAErB,IAAI,CAACU;AANnB;AAAA;AAAA;AAAA;AAAA,kBALJ,eAaI,QAAC,SAAD;AAAA,uBAIQ;AACA;AACAV,YAAAA,IAAI,CAAC5C,GAAL,CAAS,CAAC4F,GAAD,EAAM1F,KAAN,KAAgB;AACrB,oBAAM2F,cAAc,GAAGR,UAAU,CAACO,GAAG,CAAC,CAAD,CAAJ,CAAjC;AACA,oBAAME,OAAO,GAAI,2BAA0B5F,KAAM,EAAjD;AAEA,kCACI,QAAC,QAAD;AACI,gBAAA,KAAK,MADT;AAEI,gBAAA,OAAO,EAAGW,KAAD,IAAW2D,WAAW,CAAC3D,KAAD,EAAQ+E,GAAG,CAACtF,SAAS,CAAC,CAAD,CAAT,CAAaW,EAAd,CAAX,CAFnC;AAGI,gBAAA,IAAI,EAAC,UAHT;AAII,gCAAc4E,cAJlB;AAKI,gBAAA,QAAQ,EAAE,CAAC,CALf;AAOI,gBAAA,QAAQ,EAAEA,cAPd;AAAA,wCASI,QAAC,SAAD;AAAW,kBAAA,OAAO,EAAC,UAAnB;AAAA,yCACI,QAAC,QAAD;AACI,oBAAA,KAAK,EAAC,SADV;AAEI,oBAAA,OAAO,EAAEA,cAFb;AAGI,oBAAA,UAAU,EAAE;AACR,yCAAmBC;AADX;AAHhB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,wBATJ,eAkBI,QAAC,SAAD;AACI,kBAAA,SAAS,EAAC,IADd;AAEI,kBAAA,EAAE,EAAEA,OAFR;AAGI,kBAAA,KAAK,EAAC,KAHV;AAII,kBAAA,OAAO,EAAC,MAJZ;AAAA,4BAMKF,GAAG,CAACtF,SAAS,CAAC,CAAD,CAAT,CAAaW,EAAd;AANR;AAAA;AAAA;AAAA;AAAA,wBAlBJ,eA0BI,QAAC,SAAD;AAAW,kBAAA,KAAK,EAAC,OAAjB;AAAA,4BAA0B2E,GAAG,CAACtF,SAAS,CAAC,CAAD,CAAT,CAAaW,EAAd;AAA7B;AAAA;AAAA;AAAA;AAAA,wBA1BJ,eA2BI,QAAC,SAAD;AAAW,kBAAA,KAAK,EAAC,OAAjB;AAAA,4BAA0B2E,GAAG,CAAC,CAAD;AAA7B;AAAA;AAAA;AAAA;AAAA,wBA3BJ,eA4BI,QAAC,SAAD;AAAW,kBAAA,KAAK,EAAC,OAAjB;AAAA,4BAA0BA,GAAG,CAAC,CAAD;AAA7B;AAAA;AAAA;AAAA;AAAA,wBA5BJ,eA6BI,QAAC,SAAD;AAAW,kBAAA,KAAK,EAAC,OAAjB;AAAA,4BAA0BA,GAAG,CAAC,CAAD;AAA7B;AAAA;AAAA;AAAA;AAAA,wBA7BJ;AAAA,iBAMSA,GAAG,CAAC,CAAD,CANZ;AAAA;AAAA;AAAA;AAAA,sBADJ;AAiCH,aArCD,CANR,EA4CKN,SAAS,GAAG,CAAZ,iBACG,QAAC,QAAD;AACI,cAAA,KAAK,EAAE;AACHS,gBAAAA,MAAM,EAAE,CAACvD,KAAK,GAAG,EAAH,GAAQ,EAAd,IAAoB8C;AADzB,eADX;AAAA,qCAKI,QAAC,SAAD;AAAW,gBAAA,OAAO,EAAE;AAApB;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,oBA7CR;AAAA;AAAA;AAAA;AAAA;AAAA,kBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFJ,eAwEI,QAAC,eAAD;AACI,QAAA,kBAAkB,EAAE,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,CADxB;AAEI,QAAA,SAAS,EAAC,KAFd;AAGI,QAAA,KAAK,EAAE1C,IAAI,CAACU,MAHhB;AAII,QAAA,WAAW,EAAEZ,WAJjB;AAKI,QAAA,IAAI,EAAEJ,IALV;AAMI,QAAA,YAAY,EAAEyC,gBANlB;AAOI,QAAA,mBAAmB,EAAEE;AAPzB;AAAA;AAAA;AAAA;AAAA,cAxEJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAmFI,QAAC,gBAAD;AACI,MAAA,OAAO,eAAE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEzC,KAAjB;AAAwB,QAAA,QAAQ,EAAE4C;AAAlC;AAAA;AAAA;AAAA;AAAA,cADb;AAEI,MAAA,KAAK,EAAC;AAFV;AAAA;AAAA;AAAA;AAAA,YAnFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA0FH,CA3LD;;GAAMpD,S;;MAAAA,S;AA4LNA,SAAS,CAACgE,SAAV,GAAsB;AACpBC,EAAAA,YAAY,EAAE7G,SAAS,CAACS,KAAV,CAAgBqG;AADV,CAAtB;AAIAlE,SAAS,CAACmE,YAAV,GAAyB;AACvBF,EAAAA,YAAY,EAAE;AADS,CAAzB;AAIA,eAAejE,SAAf","sourcesContent":["import * as React from 'react';\r\nimport { alpha } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableSortLabel from '@mui/material/TableSortLabel';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Paper from '@mui/material/Paper';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Switch from '@mui/material/Switch';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport FilterListIcon from '@mui/icons-material/FilterList';\r\nimport { visuallyHidden } from '@mui/utils';\r\nimport PropTypes from 'prop-types';\r\nimport { DataTableRequest, DataTableResponse } from '../../../../models/table.type';\r\nimport { post } from \"../../../../services/common.service\";\r\n\r\ninterface Data {\r\n    calories: number;\r\n    carbs: number;\r\n    fat: number;\r\n    name: string;\r\n    protein: number;\r\n}\r\n\r\n//function createData(\r\n//    name: string,\r\n//    calories: number,\r\n//    fat: number,\r\n//    carbs: number,\r\n//    protein: number,\r\n//): Data {\r\n//    return {\r\n//        name,\r\n//        calories,\r\n//        fat,\r\n//        carbs,\r\n//        protein,\r\n//    };\r\n//}\r\n\r\n//const rows = [\r\n//    createData('Cupcake', 305, 3.7, 67, 4.3),\r\n//    createData('Donut', 452, 25.0, 51, 4.9),\r\n//    createData('Eclair', 262, 16.0, 24, 6.0),\r\n//    createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n//    createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n//    createData('Honeycomb', 408, 3.2, 87, 6.5),\r\n//    createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n//    createData('Jelly Bean', 375, 0.0, 94, 0.0),\r\n//    createData('KitKat', 518, 26.0, 65, 7.0),\r\n//    createData('Lollipop', 392, 0.2, 98, 0.0),\r\n//    createData('Marshmallow', 318, 0, 81, 2.0),\r\n//    createData('Nougat', 360, 19.0, 9, 37.0),\r\n//    createData('Oreo', 437, 18.0, 63, 4.0),\r\n//];\r\n\r\nfunction descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n        return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\ntype Order = 'asc' | 'desc';\r\n\r\nfunction getComparator<Key extends keyof any>(\r\n    order: Order,\r\n    orderBy: Key,\r\n): (\r\n        a: { [key in Key]: number | string },\r\n        b: { [key in Key]: number | string },\r\n    ) => number {\r\n    return order === 'desc'\r\n        ? (a, b) => descendingComparator(a, b, orderBy)\r\n        : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\n// This method is created for cross-browser compatibility, if you don't\r\n// need to support IE11, you can use Array.prototype.sort() directly\r\nfunction stableSort<T>(array: readonly T[], comparator: (a: T, b: T) => number) {\r\n    const stabilizedThis = array.map((el, index) => [el, index] as [T, number]);\r\n    stabilizedThis.sort((a, b) => {\r\n        const order = comparator(a[0], b[0]);\r\n        if (order !== 0) {\r\n            return order;\r\n        }\r\n        return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\ninterface HeadCell {\r\n    disablePadding: boolean;\r\n    id: string;\r\n    label: string;\r\n    numeric: boolean;\r\n}\r\n\r\n//const headCells: readonly HeadCell[] = [\r\n//    {\r\n//        id: 'UserName',\r\n//        numeric: false,\r\n//        disablePadding: true,\r\n//        label: 'Dessert (100g serving)',\r\n//    },\r\n//    {\r\n//        id: 'calories',\r\n//        numeric: true,\r\n//        disablePadding: false,\r\n//        label: 'Calories',\r\n//    },\r\n//    {\r\n//        id: 'fat',\r\n//        numeric: true,\r\n//        disablePadding: false,\r\n//        label: 'Fat (g)',\r\n//    },\r\n//    {\r\n//        id: 'carbs',\r\n//        numeric: true,\r\n//        disablePadding: false,\r\n//        label: 'Carbs (g)',\r\n//    },\r\n//    {\r\n//        id: 'protein',\r\n//        numeric: true,\r\n//        disablePadding: false,\r\n//        label: 'Protein (g)',\r\n//    },\r\n//];\r\n\r\ninterface EnhancedTableProps {\r\n    headCells: any[];\r\n    numSelected: number;\r\n    onRequestSort: (event: React.MouseEvent<unknown>, property: string) => void;\r\n    onSelectAllClick: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n    order: Order;\r\n    orderBy: string;\r\n    rowCount: number;\r\n}\r\n\r\nfunction EnhancedTableHead(props: EnhancedTableProps) {\r\n    const { headCells, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } =\r\n        props;\r\n    const createSortHandler =\r\n        (property: string) => (event: React.MouseEvent<unknown>) => {\r\n            onRequestSort(event, property);\r\n        };\r\n\r\n    return (\r\n        <TableHead>\r\n            <TableRow>\r\n                <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                        color=\"primary\"\r\n                        indeterminate={numSelected > 0 && numSelected < rowCount}\r\n                        checked={rowCount > 0 && numSelected === rowCount}\r\n                        onChange={onSelectAllClick}\r\n                        inputProps={{\r\n                            'aria-label': 'select all desserts',\r\n                        }}\r\n                    />\r\n                </TableCell>\r\n                {headCells.map((headCell) => (\r\n                    <TableCell\r\n                        key={headCell.id}\r\n                        align={headCell.numeric ? 'right' : 'left'}\r\n                        padding={headCell.disablePadding ? 'none' : 'normal'}\r\n                        sortDirection={orderBy === headCell.id ? order : false}\r\n                    >\r\n                        <TableSortLabel\r\n                            active={orderBy === headCell.id}\r\n                            direction={orderBy === headCell.id ? order : 'asc'}\r\n                            onClick={createSortHandler(headCell.id)}\r\n                        >\r\n                            {headCell.label}\r\n                            {orderBy === headCell.id ? (\r\n                                <Box component=\"span\" sx={visuallyHidden}>\r\n                                    {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                                </Box>\r\n                            ) : null}\r\n                        </TableSortLabel>\r\n                    </TableCell>\r\n                ))}\r\n            </TableRow>\r\n        </TableHead>\r\n    );\r\n}\r\n\r\ninterface EnhancedTableToolbarProps {\r\n    numSelected: number;\r\n    headCells: [];\r\n}\r\n\r\nconst EnhancedTableToolbar = (props: EnhancedTableToolbarProps) => {\r\n    const { numSelected } = props;\r\n\r\n    return (\r\n        <Toolbar\r\n            sx={{\r\n                pl: { sm: 2 },\r\n                pr: { xs: 1, sm: 1 },\r\n                ...(numSelected > 0 && {\r\n                    bgcolor: (theme) =>\r\n                        alpha(theme.palette.primary.main, theme.palette.action.activatedOpacity),\r\n                }),\r\n            }}\r\n        >\r\n            {numSelected > 0 ? (\r\n                <Typography\r\n                    sx={{ flex: '1 1 100%' }}\r\n                    color=\"inherit\"\r\n                    variant=\"subtitle1\"\r\n                    component=\"div\"\r\n                >\r\n                    {numSelected} selected\r\n                </Typography>\r\n            ) : (\r\n                <Typography\r\n                    sx={{ flex: '1 1 100%' }}\r\n                    variant=\"h6\"\r\n                    id=\"tableTitle\"\r\n                    component=\"div\"\r\n                >\r\n                    Nutrition\r\n                </Typography>\r\n            )}\r\n            {numSelected > 0 ? (\r\n                <Tooltip title=\"Delete\">\r\n                    <IconButton>\r\n                        <DeleteIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n            ) : (\r\n                <Tooltip title=\"Filter list\">\r\n                    <IconButton>\r\n                        <FilterListIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n            )}\r\n        </Toolbar>\r\n    );\r\n};\r\n\r\nconst DataTable: React.FC<any> = ({ headCells }) => {\r\n    const [order, setOrder] = React.useState<Order>('asc');\r\n    const [orderBy, setOrderBy] = React.useState<string>('calories');\r\n    const [selected, setSelected] = React.useState<readonly string[]>([]);\r\n    const [page, setPage] = React.useState(0);\r\n    const [dense, setDense] = React.useState(false);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n    const [rows, setRows] = React.useState([]);\r\n\r\n    const getFilteredData = () => {\r\n        let _requestParamters: DataTableRequest = {\r\n            filter: {\r\n                Email: '',\r\n                UserID: 0,\r\n                PersonName: '',\r\n                UserName: '',\r\n                Password: ''\r\n            },\r\n            length: rowsPerPage,\r\n            start: page * rowsPerPage,\r\n            order: { orderBy: orderBy, orderDirection: order }\r\n        };\r\n        post('user/GetUsers', _requestParamters).then(\r\n            (response: any) => {\r\n                if (response.status == 200) {\r\n                    setRows(response.data.data);\r\n\r\n                }\r\n            },\r\n            (error: any) => {\r\n                const resMessage =\r\n                    (error.response &&\r\n                        error.response.data &&\r\n                        error.response.data.message) ||\r\n                    error.message ||\r\n                    error.toString();\r\n            }\r\n        );\r\n    };\r\n    const handleRequestSort = (\r\n        event: React.MouseEvent<unknown>,\r\n        property: string,\r\n    ) => {\r\n        const isAsc = orderBy === property && order === 'asc';\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(property);\r\n        getFilteredData();\r\n    };\r\n\r\n    const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        if (event.target.checked) {\r\n            const newSelecteds = rows.map((n) => n[0]);\r\n            setSelected(newSelecteds);\r\n            return;\r\n        }\r\n        setSelected([]);\r\n    };\r\n\r\n    const handleClick = (event: React.MouseEvent<unknown>, name: any) => {\r\n        const selectedIndex = selected.indexOf(name);\r\n        let newSelected: readonly string[] = [];\r\n\r\n        if (selectedIndex === -1) {\r\n            newSelected = newSelected.concat(selected, name);\r\n        } else if (selectedIndex === 0) {\r\n            newSelected = newSelected.concat(selected.slice(1));\r\n        } else if (selectedIndex === selected.length - 1) {\r\n            newSelected = newSelected.concat(selected.slice(0, -1));\r\n        } else if (selectedIndex > 0) {\r\n            newSelected = newSelected.concat(\r\n                selected.slice(0, selectedIndex),\r\n                selected.slice(selectedIndex + 1),\r\n            );\r\n        }\r\n\r\n        setSelected(newSelected);\r\n    };\r\n\r\n    const handleChangePage = (event: unknown, newPage: number) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n\r\n    const handleChangeDense = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setDense(event.target.checked);\r\n    };\r\n\r\n    const isSelected = (name: any) => selected.indexOf(name) !== -1;\r\n\r\n    // Avoid a layout jump when reaching the last page with empty rows.\r\n    const emptyRows =\r\n        page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\r\n\r\n    return (\r\n        <Box sx={{ width: '100%' }}>\r\n            <Paper sx={{ width: '100%', mb: 2 }}>\r\n                <EnhancedTableToolbar numSelected={selected.length} />\r\n                <TableContainer>\r\n                    <Table\r\n                        sx={{ minWidth: 750 }}\r\n                        aria-labelledby=\"tableTitle\"\r\n                        size={dense ? 'small' : 'medium'}\r\n                    >\r\n                        <EnhancedTableHead\r\n                            numSelected={selected.length}\r\n                            order={order}\r\n                            orderBy={orderBy}\r\n                            onSelectAllClick={handleSelectAllClick}\r\n                            onRequestSort={handleRequestSort}\r\n                            rowCount={rows.length}\r\n                        />\r\n                        <TableBody>\r\n                            {/* if you don't need to support IE11, you can replace the `stableSort` call with:\r\n              rows.slice().sort(getComparator(order, orderBy)) */}\r\n                            {\r\n                                //stableSort(rows, getComparator(order, orderBy))\r\n                                //.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                rows.map((row, index) => {\r\n                                    const isItemSelected = isSelected(row[0]);\r\n                                    const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                                    return (\r\n                                        <TableRow\r\n                                            hover\r\n                                            onClick={(event) => handleClick(event, row[headCells[0].id])}\r\n                                            role=\"checkbox\"\r\n                                            aria-checked={isItemSelected}\r\n                                            tabIndex={-1}\r\n                                            key={row[0]}\r\n                                            selected={isItemSelected}\r\n                                        >\r\n                                            <TableCell padding=\"checkbox\">\r\n                                                <Checkbox\r\n                                                    color=\"primary\"\r\n                                                    checked={isItemSelected}\r\n                                                    inputProps={{\r\n                                                        'aria-labelledby': labelId,\r\n                                                    }}\r\n                                                />\r\n                                            </TableCell>\r\n                                            <TableCell\r\n                                                component=\"th\"\r\n                                                id={labelId}\r\n                                                scope=\"row\"\r\n                                                padding=\"none\"\r\n                                            >\r\n                                                {row[headCells[0].id]}\r\n                                            </TableCell>\r\n                                            <TableCell align=\"right\">{row[headCells[0].id]}</TableCell>\r\n                                            <TableCell align=\"right\">{row[2]}</TableCell>\r\n                                            <TableCell align=\"right\">{row[3]}</TableCell>\r\n                                            <TableCell align=\"right\">{row[4]}</TableCell>\r\n                                        </TableRow>\r\n                                    );\r\n                                })}\r\n                            {emptyRows > 0 && (\r\n                                <TableRow\r\n                                    style={{\r\n                                        height: (dense ? 33 : 53) * emptyRows,\r\n                                    }}\r\n                                >\r\n                                    <TableCell colSpan={6} />\r\n                                </TableRow>\r\n                            )}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[5, 10, 25]}\r\n                    component=\"div\"\r\n                    count={rows.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    onPageChange={handleChangePage}\r\n                    onRowsPerPageChange={handleChangeRowsPerPage}\r\n                />\r\n            </Paper>\r\n            <FormControlLabel\r\n                control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n                label=\"Dense padding\"\r\n            />\r\n        </Box>\r\n    );\r\n}\r\nDataTable.propTypes = {\r\n  cryptoOrders: PropTypes.array.isRequired\r\n};\r\n\r\nDataTable.defaultProps = {\r\n  cryptoOrders: []\r\n};\r\n\r\nexport default DataTable;"]},"metadata":{},"sourceType":"module"}