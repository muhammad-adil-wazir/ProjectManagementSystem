{"ast":null,"code":"var _jsxFileName = \"E:\\\\Projects\\\\Rebartek\\\\CMS.WEBUI\\\\src\\\\layouts\\\\SidebarLayout\\\\Sidebar\\\\SidebarMenu\\\\item.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useContext } from 'react';\nimport { NavLink as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport { SidebarContext } from '../../../../contexts/SidebarContext';\nimport PropTypes from 'prop-types';\nimport { Button, Badge, Collapse, ListItem } from '@mui/material';\nimport ExpandLessTwoToneIcon from '@mui/icons-material/ExpandLessTwoTone';\nimport ExpandMoreTwoToneIcon from '@mui/icons-material/ExpandMoreTwoTone';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SidebarMenuItem = _ref => {\n  _s();\n\n  let {\n    children,\n    link,\n    icon: Icon,\n    badge,\n    open: openParent,\n    active,\n    name,\n    ...rest\n  } = _ref;\n  const [menuToggle, setMenuToggle] = useState(openParent);\n  const {\n    toggleSidebar\n  } = useContext(SidebarContext);\n\n  const toggleMenu = () => {\n    setMenuToggle(Open => !Open);\n  };\n\n  if (children) {\n    return /*#__PURE__*/_jsxDEV(ListItem, {\n      component: \"div\",\n      className: \"Mui-children\",\n      ...rest,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        className: clsx({\n          'Mui-active': menuToggle\n        }),\n        startIcon: Icon && /*#__PURE__*/_jsxDEV(Icon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 30\n        }, this),\n        endIcon: menuToggle ? /*#__PURE__*/_jsxDEV(ExpandLessTwoToneIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 26\n        }, this) : /*#__PURE__*/_jsxDEV(ExpandMoreTwoToneIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 54\n        }, this),\n        onClick: toggleMenu,\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n        in: menuToggle,\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, name, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ListItem, {\n    component: \"div\",\n    ...rest,\n    children: /*#__PURE__*/_jsxDEV(Button\n    /*  activeClassName=\"Mui-active\"*/\n    , {\n      component: RouterLink,\n      onClick: toggleSidebar,\n      to: link,\n      startIcon: Icon && /*#__PURE__*/_jsxDEV(Icon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 28\n      }, this),\n      children: [name, badge && /*#__PURE__*/_jsxDEV(Badge, {\n        badgeContent: badge\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, name, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SidebarMenuItem, \"NSJyZbIuuv/2ZfgJWIe4H2jiHC0=\");\n\n_c = SidebarMenuItem;\nSidebarMenuItem.propTypes = {\n  children: PropTypes.node,\n  active: PropTypes.bool,\n  link: PropTypes.string,\n  icon: PropTypes.elementType,\n  badge: PropTypes.string,\n  open: PropTypes.bool,\n  name: PropTypes.string.isRequired\n};\nSidebarMenuItem.defaultProps = {\n  open: false,\n  active: false\n};\nexport default SidebarMenuItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"SidebarMenuItem\");","map":{"version":3,"sources":["E:/Projects/Rebartek/CMS.WEBUI/src/layouts/SidebarLayout/Sidebar/SidebarMenu/item.tsx"],"names":["useState","useContext","NavLink","RouterLink","clsx","SidebarContext","PropTypes","Button","Badge","Collapse","ListItem","ExpandLessTwoToneIcon","ExpandMoreTwoToneIcon","SidebarMenuItem","children","link","icon","Icon","badge","open","openParent","active","name","rest","menuToggle","setMenuToggle","toggleSidebar","toggleMenu","Open","propTypes","node","bool","string","elementType","isRequired","defaultProps"],"mappings":"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","sourcesContent":["import { FC, ReactNode, useState, useContext } from 'react';\r\nimport { NavLink as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport { SidebarContext } from '../../../../contexts/SidebarContext';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport { Button, Badge, Collapse, ListItem } from '@mui/material';\r\n\r\nimport ExpandLessTwoToneIcon from '@mui/icons-material/ExpandLessTwoTone';\r\nimport ExpandMoreTwoToneIcon from '@mui/icons-material/ExpandMoreTwoTone';\r\n\r\ninterface SidebarMenuItemProps {\r\n  children?: ReactNode;\r\n  link?: any;\r\n  icon?: any;\r\n  badge?: string;\r\n    open?: any;\r\n  active?: boolean;\r\n  name: string;\r\n}\r\n\r\nconst SidebarMenuItem: FC<SidebarMenuItemProps> = ({\r\n  children,\r\n  link,\r\n  icon: Icon,\r\n  badge,\r\n  open: openParent,\r\n  active,\r\n  name,\r\n  ...rest\r\n}) => {\r\n  const [menuToggle, setMenuToggle] = useState<boolean>(openParent);\r\n\r\n  const { toggleSidebar } = useContext(SidebarContext);\r\n\r\n  const toggleMenu = (): void => {\r\n    setMenuToggle((Open) => !Open);\r\n  };\r\n\r\n  if (children) {\r\n    return (\r\n      <ListItem component=\"div\" className=\"Mui-children\" key={name} {...rest}>\r\n        <Button\r\n          className={clsx({ 'Mui-active': menuToggle })}\r\n          startIcon={Icon && <Icon />}\r\n          endIcon={\r\n            menuToggle ? <ExpandLessTwoToneIcon /> : <ExpandMoreTwoToneIcon />\r\n          }\r\n          onClick={toggleMenu}\r\n        >\r\n          {name}\r\n        </Button>\r\n        <Collapse in={menuToggle}>{children}</Collapse>\r\n      </ListItem>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ListItem component=\"div\" key={name} {...rest}>\r\n      <Button\r\n    /*  activeClassName=\"Mui-active\"*/\r\n     component={RouterLink}\r\n        onClick={toggleSidebar}\r\n        to={link}\r\n        startIcon={Icon && <Icon />}\r\n      >\r\n        {name}\r\n        {badge && <Badge badgeContent={badge} />}\r\n      </Button>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nSidebarMenuItem.propTypes = {\r\n  children: PropTypes.node,\r\n  active: PropTypes.bool,\r\n  link: PropTypes.string,\r\n  icon: PropTypes.elementType,\r\n    badge: PropTypes.string,\r\n    open: PropTypes.bool,\r\n  name: PropTypes.string.isRequired\r\n};\r\n\r\nSidebarMenuItem.defaultProps = {\r\n  open: false,\r\n  active: false,\r\n};\r\n\r\nexport default SidebarMenuItem;\r\n"]},"metadata":{},"sourceType":"module"}