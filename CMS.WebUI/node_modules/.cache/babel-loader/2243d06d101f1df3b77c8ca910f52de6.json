{"ast":null,"code":"var _jsxFileName = \"E:\\\\Projects\\\\LFMS\\\\LFMS.WebUI\\\\src\\\\content\\\\pages\\\\Components\\\\Director\\\\DirectorForm.tsx\",\n    _s = $RefreshSig$();\n\n////import { Helmet } from 'react-helmet-async';\nimport React, { useEffect, useRef, useState } from 'react';\nimport * as Yup from \"yup\";\nimport { get, post } from \"../../../../services/common.service\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { Button, IconButton, Container, Grid, Card, CardHeader, CardContent, Divider, TextField, Box, Modal, Autocomplete, Tabs, Tab, AppBar, useTheme, Fab, ListItem, Stack, ListItemAvatar, Avatar, ListItemText, Checkbox } from '@mui/material';\nimport SwipeableViews from 'react-swipeable-views';\nimport { useForm } from 'react-hook-form';\nimport { dropdowns } from '../../../../services/dropdowns.service';\nimport { TabPanel, switchTab } from '../../../../components/TabPanel';\nimport { DatePicker } from '@mui/lab';\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload';\nimport DeleteOutlineTwoToneIcon from '@mui/icons-material/DeleteOutlineTwoTone';\nimport FilePresentTwoToneIcon from '@mui/icons-material/FilePresentTwoTone';\nimport { DirectorTypeForm } from '../../../../content/pages/Components/DirectorType/DirectorTypeForm';\nimport { DesignationForm } from '../../../../content/pages/Components/Designation/DesignationForm';\nimport { IDTypeForm } from '../../../../content/pages/Components/IDType/IDTypeForm';\nimport { NationalityForm } from '../../../../content/pages/Components/Nationality/NationalityForm';\nimport { PlaceOfBirthForm } from '../../../../content/pages/Components/PlaceOfBirth/PlaceOfBirthForm'; //import { DatePicker as DatePickers, KeyboardDatePicker } from \"@material-ui/pickers\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst label = {\n  inputProps: {\n    'aria-label': 'Switch demo'\n  }\n};\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 1100,\n  bgcolor: 'background.paper',\n  //border: '2px solid #000',\n  boxShadow: 24\n};\nconst uploadFileRowStyle = {\n  height: '83px',\n  overflowX: 'auto'\n};\nconst uploadFileStyle = {\n  padding: '30px 10px',\n  width: '250px',\n  'justify-content': 'flex-start'\n};\nconst uploadFileListItemStyle = {\n  width: '300px',\n  minWidth: '300px',\n  backgroundColor: 'lightgrey',\n  borderRadius: '15px',\n  height: '60px',\n  boxShadow: 24\n};\nexport const DirectorForm = _ref => {\n  _s();\n\n  let {\n    clearForm,\n    directorFormFunc,\n    directorData,\n    rerenderTable\n  } = _ref;\n  const [passportFileNames, setPassportFileNames] = useState([]);\n  const [passportFiles, setPassportFiles] = useState([]);\n  const [billFileNames, setBillFileNames] = useState([]);\n  const [billFiles, setBillFiles] = useState([]);\n  const [companyFileNames, setCompanyFileNames] = useState([]);\n  const [companyFiles, setCompanyFiles] = useState([]);\n  const [otherFileNames, setOtherFileNames] = useState([]);\n  const [otherFiles, setOtherFiles] = useState([]);\n  const [worldFileNames, setWorldFileNames] = useState([]);\n  const [worldFiles, setWorldFiles] = useState([]);\n  const [openSuccessAlert, setopenSuccessAlert] = useState(false);\n  const [dobDate, setDobDate] = useState(null);\n  const [appointmentDate, setAppointmentDate] = useState(null);\n  const [cessationDate, setCessationDate] = useState(null);\n  const [directorTypes, setDirectorTypes] = useState([]);\n  const [selectedDirectorType, setSelectedDirectorType] = useState();\n  const [designations, setDesignations] = useState([]);\n  const [selectedDesignation, setSelectedDesignation] = useState();\n  const [nationalities, setNationalities] = useState([]);\n  const [selectedNationality, setSelectedNationality] = useState();\n  const [idTypes, setIDTypes] = useState([]);\n  const [selectedIdType, setselectedIdType] = useState();\n  const [placeOfBirths, setPlaceOfBirths] = useState([]);\n  const [selectedPlaceOfBirth, setSelectedPlaceOfBirth] = useState();\n  const [directorFormData, setDirectorFormData] = useState();\n  const [selectedTabIndex, setSelectedTabIndex] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [open, setOpen] = useState(false);\n  const theme = useTheme();\n\n  const handleOpen = () => {\n    setOpen(true); // reset(companyTypeData);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    reset(directorData);\n    clearForm();\n  };\n\n  const handleAlertClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setopenSuccessAlert(false);\n  };\n\n  const showModal = () => {\n    setOpen(true);\n    reset(directorData);\n  };\n\n  const resetForm = () => {\n    reset(directorData);\n    clearForm();\n  };\n\n  const changeTab = index => {\n    return {\n      id: `simple-tab-${index}`,\n      'aria-controls': `simple-tabpanel-${index}`\n    };\n  };\n\n  useEffect(() => {\n    directorFormFunc.current = handleOpen;\n    reset(directorData);\n    loadDropdowns();\n  }, []);\n  useEffect(() => {\n    reset(directorData);\n    editForm(directorData);\n  }, [directorData, directorFormFunc]);\n\n  const editForm = data => {\n    setselectedIdType({\n      IDTypeID: directorData.IDTypeID,\n      IDTypeName: directorData.IDTypeName\n    });\n    setSelectedNationality({\n      NationalityID: directorData.NationalityID,\n      NationalityName: directorData.NationalityName\n    });\n    setSelectedDesignation({\n      DesignationID: directorData.DesignationID,\n      DesignationName: directorData.DesignationName\n    });\n    setSelectedDirectorType({\n      DirectorTypeID: directorData.DirectorTypeID,\n      DirectorTypeName: directorData.DirectorTypeName\n    });\n    setSelectedPlaceOfBirth({\n      PlaceOfBirthID: directorData.PlaceOfBirthID,\n      PlaceOfBirthName: directorData.PlaceOfBirthName\n    });\n    setAppointmentDate(new Date(data.AppointmentDate));\n    setCessationDate(new Date(data.CessationDate));\n    setDobDate(new Date(data.DOB));\n\n    if (data.DirectorID) {\n      get('Director/GetDirectorFiles').then(x => {\n        setPassportFileNames(x.data.PassportFiles);\n        setBillFileNames(x.data.BillFiles);\n        setCompanyFileNames(x.data.CompanyFiles);\n        setOtherFileNames(x.data.OtherFiles);\n        setWorldFileNames(x.data.WorldFiles);\n      });\n    }\n  };\n\n  const loadDropdowns = () => {\n    dropdowns.getAllDirectorTypes().then(x => setDirectorTypes(x));\n    dropdowns.getAllDesignations().then(x => setDesignations(x));\n    dropdowns.getAllNationalities().then(x => setNationalities(x));\n    dropdowns.getAllPlaceOfBirths().then(x => setPlaceOfBirths(x));\n    dropdowns.getAllIDTypes().then(x => {\n      console.log(x);\n      setIDTypes(x);\n    });\n  };\n\n  const validationSchema = Yup.object().shape({\n    CompanyNumber: Yup.string().required('Director is required').min(2, 'Director must be at least 2 characters').max(20, 'Director must not exceed 20 characters'),\n    PlaceOfBirthID: Yup.string().required('Director is required'),\n    AppointmentDate: Yup.string().required('date is required')\n  });\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(validationSchema)\n  });\n\n  const onClickBack = () => {\n    setSelectedTabIndex(0);\n    switchTab(0); //switchTab(1);\n    //handleFormSubmit(data);\n    //console.log(JSON.stringify(data, null, 2));\n  };\n\n  const onSubmit = data => {\n    var _PlaceOfBirthID, _DesignationID, _DirectorTypeID, _NationalityID, _IDTypeID;\n\n    data.PlaceOfBirthID = (_PlaceOfBirthID = selectedPlaceOfBirth.PlaceOfBirthID) !== null && _PlaceOfBirthID !== void 0 ? _PlaceOfBirthID : 0;\n    data.DesignationID = (_DesignationID = selectedDesignation.DesignationID) !== null && _DesignationID !== void 0 ? _DesignationID : 0;\n    data.DirectorTypeID = (_DirectorTypeID = selectedDirectorType.DirectorTypeID) !== null && _DirectorTypeID !== void 0 ? _DirectorTypeID : 0;\n    data.NationalityID = (_NationalityID = selectedNationality.NationalityID) !== null && _NationalityID !== void 0 ? _NationalityID : 0;\n    data.IDTypeID = (_IDTypeID = selectedIdType.IDTypeID) !== null && _IDTypeID !== void 0 ? _IDTypeID : 0;\n    data.AppointmentDate = new Date(data.AppointmentDate);\n    console.log(data);\n    setDirectorFormData(data);\n    setSelectedTabIndex(1);\n    switchTab(1); //handleFormSubmit(data);\n    //console.log(JSON.stringify(data, null, 2));\n  };\n\n  const handleSave = () => {\n    let formData = new FormData();\n    formData.append(\"Director\", JSON.stringify(directorFormData));\n\n    for (var i = 1; i <= passportFiles.length; i++) {\n      formData.append('PassportFiles', passportFiles[i - 1]);\n    }\n\n    for (var i = 1; i <= billFiles.length; i++) {\n      formData.append('BillFiles', billFiles[i - 1]);\n    }\n\n    for (var i = 1; i <= companyFiles.length; i++) {\n      formData.append('CompanyFiles', companyFiles[i - 1]);\n    }\n\n    for (var i = 1; i <= otherFiles.length; i++) {\n      formData.append('OtherFiles', otherFiles[i - 1]);\n    }\n\n    for (var i = 1; i <= worldFiles.length; i++) {\n      formData.append('WorldFiles', worldFiles[i - 1]);\n    }\n\n    handleFormSubmit(formData);\n  };\n\n  const handleFormSubmit = formData => {\n    setLoading(true);\n    let _url = 'director/AddDirectorAsync';\n\n    if (directorFormData.DirectorID) {\n      _url = 'director/EditDirector';\n    }\n\n    post(_url, formData).then(response => {\n      // history.push(\"/profile\");\n      if (response.data.status == 'success') {\n        setMessage('Director Successfully Saved!');\n        setopenSuccessAlert(true);\n        handleClose();\n        rerenderTable();\n      }\n    }, error => {\n      const resMessage = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n      setLoading(false);\n      setMessage(resMessage);\n    });\n  };\n\n  const handleTabChange = (event, newValue) => {\n    setSelectedTabIndex(newValue);\n  };\n\n  const handleChangeIndex = index => {\n    setSelectedTabIndex(index);\n  };\n\n  const handleChangeFile = event => {\n    if (event.target.id == 'filePassport') {\n      let _passportFiles = passportFiles;\n\n      _passportFiles.push(...event.target.files);\n\n      setPassportFiles(_passportFiles);\n      setPassportFileNames(_passportFiles.map(x => x.name));\n    } else if (event.target.id == 'fileBills') {\n      let _billFiles = billFiles;\n\n      for (var i = 0; i < event.target.files.length; i++) {\n        _billFiles === null || _billFiles === void 0 ? void 0 : _billFiles.push(event.target.files[i]);\n      }\n\n      setBillFiles(billFiles);\n      setBillFileNames(_billFiles.map(x => x.name));\n    } else if (event.target.id == 'fileCompanyDocs') {\n      let _companyFiles = companyFiles;\n\n      for (var i = 0; i < event.target.files.length; i++) {\n        _companyFiles === null || _companyFiles === void 0 ? void 0 : _companyFiles.push(event.target.files[i]);\n      }\n\n      setCompanyFiles(_companyFiles);\n      setCompanyFileNames(_companyFiles.map(x => x.name));\n    } else if (event.target.id == 'fileOtherDocs') {\n      let _otherFiles = otherFiles;\n\n      for (var i = 0; i < event.target.files.length; i++) {\n        _otherFiles === null || _otherFiles === void 0 ? void 0 : _otherFiles.push(event.target.files[i]);\n      }\n\n      setOtherFiles(_otherFiles);\n      setOtherFileNames(_otherFiles.map(x => x.name));\n    } else if (event.target.id == 'fileOtherDocs') {\n      let _otherFiles = otherFiles;\n\n      for (var i = 0; i < event.target.files.length; i++) {\n        _otherFiles === null || _otherFiles === void 0 ? void 0 : _otherFiles.push(event.target.files[i]);\n      }\n\n      setOtherFiles(_otherFiles);\n      setOtherFileNames(_otherFiles.map(x => x.name));\n    } else if (event.target.id == 'fileWorld') {\n      let _worldFiles = worldFiles;\n\n      for (var i = 0; i < event.target.files.length; i++) {\n        _worldFiles === null || _worldFiles === void 0 ? void 0 : _worldFiles.push(event.target.files[i]);\n      }\n\n      setWorldFiles(_worldFiles);\n      setWorldFileNames(_worldFiles.map(x => x.name));\n    }\n  };\n\n  const rerenderDirectorTypeTable = () => {\n    dropdowns.getAllDirectorTypes().then(x => setDirectorTypes(x));\n  };\n\n  const rerenderDesignationTable = () => {\n    dropdowns.getAllDesignations().then(x => setDesignations(x));\n  };\n\n  const rerenderIDTypeTable = () => {\n    dropdowns.getAllIDTypes().then(x => setIDTypes(x));\n  };\n\n  const rerenderNationalityTable = () => {\n    dropdowns.getAllNationalities().then(x => setNationalities(x));\n  };\n\n  const rerenderPlaceOfBirthTable = () => {\n    dropdowns.getAllPlaceOfBirths().then(x => setPlaceOfBirths(x));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      sx: {\n        margin: 1\n      },\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleOpen,\n      children: \"Open modal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"modal-modal-title\",\n      \"aria-describedby\": \"modal-modal-description\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        noValidate: true,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: style,\n          children: /*#__PURE__*/_jsxDEV(Container, {\n            maxWidth: \"md\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"register-form\",\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                direction: \"row\",\n                justifyContent: \"center\",\n                alignItems: \"stretch\",\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(Card, {\n                    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n                      title: \"Enter Director Detail\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 324,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 325,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(AppBar, {\n                      position: \"static\",\n                      children: /*#__PURE__*/_jsxDEV(Tabs, {\n                        value: selectedTabIndex,\n                        onChange: handleTabChange,\n                        indicatorColor: \"secondary\",\n                        textColor: \"inherit\",\n                        variant: \"fullWidth\",\n                        \"aria-label\": \"full width tabs example\",\n                        children: [/*#__PURE__*/_jsxDEV(Tab, {\n                          label: \"Details\",\n                          ...switchTab(0)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 335,\n                          columnNumber: 49\n                        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n                          label: \"Uploads\",\n                          ...switchTab(1)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 336,\n                          columnNumber: 49\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 327,\n                        columnNumber: 45\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 326,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n                      children: /*#__PURE__*/_jsxDEV(Box, {\n                        component: \"div\",\n                        sx: {\n                          '& .MuiTextField-root': {\n                            my: 1,\n                            width: '25ch'\n                          }\n                        },\n                        children: /*#__PURE__*/_jsxDEV(SwipeableViews, {\n                          axis: theme.direction === 'rtl' ? 'x-reverse' : 'x',\n                          index: selectedTabIndex,\n                          onChangeIndex: handleChangeIndex,\n                          children: [/*#__PURE__*/_jsxDEV(TabPanel, {\n                            value: selectedTabIndex,\n                            index: 0,\n                            dir: theme.direction,\n                            children: /*#__PURE__*/_jsxDEV(Grid, {\n                              container: true,\n                              direction: \"row\",\n                              justifyContent: \"center\",\n                              alignItems: \"stretch\",\n                              spacing: 1,\n                              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                                item: true,\n                                xs: 3.6,\n                                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                                  children: [/*#__PURE__*/_jsxDEV(TextField, {\n                                    style: {\n                                      width: '100%'\n                                    },\n                                    required: true,\n                                    id: \"outlined-required\",\n                                    label: \"Director Name\",\n                                    ...register('DirectorName'),\n                                    className: `form-control ${errors.DirectorName ? 'is-invalid' : ''}`\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 353,\n                                    columnNumber: 69\n                                  }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                                    style: {\n                                      width: '100%'\n                                    },\n                                    required: true,\n                                    id: \"outlined-required\",\n                                    label: \"Company Name\",\n                                    ...register('CompanyName'),\n                                    className: `form-control ${errors.CompanyName ? 'is-invalid' : ''}`\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 361,\n                                    columnNumber: 73\n                                  }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                                    style: {\n                                      width: '100%'\n                                    },\n                                    required: true,\n                                    id: \"outlined-required\",\n                                    label: \"CompanyNumber\",\n                                    ...register('CompanyNumber'),\n                                    className: `form-control ${errors.CompanyNumber ? 'is-invalid' : ''}`\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 370,\n                                    columnNumber: 73\n                                  }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n                                    label: \"Appointment Date\",\n                                    ...register('AppointmentDate'),\n                                    value: appointmentDate,\n                                    onChange: newValue => {\n                                      setAppointmentDate(newValue);\n                                    },\n                                    renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n                                      style: {\n                                        width: '100%'\n                                      },\n                                      ...params,\n                                      required: true\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 385,\n                                      columnNumber: 102\n                                    }, this)\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 378,\n                                    columnNumber: 73\n                                  }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n                                    label: \"DOB\",\n                                    ...register('DOB'),\n                                    value: dobDate,\n                                    onChange: newValue => {\n                                      setDobDate(newValue);\n                                    },\n                                    renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n                                      style: {\n                                        width: '100%'\n                                      },\n                                      fullWidth: true,\n                                      ...params,\n                                      required: true\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 394,\n                                      columnNumber: 102\n                                    }, this)\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 387,\n                                    columnNumber: 73\n                                  }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n                                    label: \"Cessation Date\",\n                                    ...register('CessationDate'),\n                                    value: cessationDate,\n                                    onChange: newValue => {\n                                      setCessationDate(newValue);\n                                    },\n                                    renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n                                      style: {\n                                        width: '100%'\n                                      },\n                                      ...params,\n                                      required: true\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 403,\n                                      columnNumber: 102\n                                    }, this)\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 396,\n                                    columnNumber: 73\n                                  }, this)]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 352,\n                                  columnNumber: 65\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 351,\n                                columnNumber: 61\n                              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                                item: true,\n                                xs: 3.6,\n                                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                                  children: [/*#__PURE__*/_jsxDEV(TextField, {\n                                    style: {\n                                      width: '100%'\n                                    },\n                                    required: true,\n                                    id: \"outlined-required\",\n                                    label: \"Email\",\n                                    ...register('Email'),\n                                    className: `form-control ${errors.Email ? 'is-invalid' : ''}`\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 410,\n                                    columnNumber: 73\n                                  }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                                    style: {\n                                      width: '100%'\n                                    },\n                                    required: true,\n                                    id: \"outlined-required\",\n                                    label: \"ID Number\",\n                                    ...register('IDNumber'),\n                                    className: `form-control ${errors.IDNumber ? 'is-invalid' : ''}`\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 419,\n                                    columnNumber: 73\n                                  }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                                    style: {\n                                      width: '100%'\n                                    },\n                                    required: true,\n                                    id: \"outlined-required\",\n                                    label: \"Contact Number\",\n                                    ...register('ContactNumber'),\n                                    className: `form-control ${errors.ContactNumber ? 'is-invalid' : ''}`\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 427,\n                                    columnNumber: 73\n                                  }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                                    multiline: true,\n                                    style: {\n                                      width: '100%'\n                                    },\n                                    type: \"text\",\n                                    required: true,\n                                    id: \"outlined-required\",\n                                    label: \"Permanant Address\",\n                                    ...register('PermanentAddress'),\n                                    className: `form-control ${errors.PermanentAddress ? 'is-invalid' : ''}`\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 435,\n                                    columnNumber: 73\n                                  }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                                    multiline: true,\n                                    style: {\n                                      width: '100%'\n                                    },\n                                    type: \"text\",\n                                    required: true,\n                                    id: \"outlined-required\",\n                                    label: \"Comunication Address\",\n                                    ...register('ComunicationAddress'),\n                                    className: `form-control ${errors.ComunicationAddress ? 'is-invalid' : ''}`\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 443,\n                                    columnNumber: 73\n                                  }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n                                    color: \"primary\",\n                                    checked: true,\n                                    inputProps: {\n                                      'aria-labelledby': 'Is World Check'\n                                    }\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 451,\n                                    columnNumber: 73\n                                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                                    children: \"Is World Check\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 458,\n                                    columnNumber: 73\n                                  }, this)]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 409,\n                                  columnNumber: 65\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 408,\n                                columnNumber: 61\n                              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                                item: true,\n                                xs: 3.6,\n                                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                                  children: [/*#__PURE__*/_jsxDEV(Autocomplete, {\n                                    onChange: (event, newValue) => {\n                                      setSelectedDirectorType(newValue);\n                                    },\n                                    value: selectedDirectorType,\n                                    disablePortal: true,\n                                    style: {\n                                      width: '100%'\n                                    },\n                                    id: \"drpDirectorType\",\n                                    options: directorTypes,\n                                    getOptionLabel: directorTypes => directorTypes.DirectorTypeName,\n                                    renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n                                      style: {\n                                        width: '100%'\n                                      },\n                                      ...params,\n                                      label: \"Director Type\"\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 472,\n                                      columnNumber: 102\n                                    }, this)\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 463,\n                                    columnNumber: 73\n                                  }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n                                    onChange: (event, newValue) => {\n                                      setselectedIdType(newValue);\n                                    },\n                                    value: selectedIdType,\n                                    disablePortal: true,\n                                    id: \"drpIDType\",\n                                    options: idTypes,\n                                    getOptionLabel: idType => idType.IDTypeName,\n                                    renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n                                      style: {\n                                        width: '100%'\n                                      },\n                                      ...params,\n                                      label: \"ID Type\"\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 483,\n                                      columnNumber: 102\n                                    }, this)\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 474,\n                                    columnNumber: 73\n                                  }, this), /*#__PURE__*/_jsxDEV(Autocomplete, { ...register('PlaceOfBirthID'),\n                                    onChange: (event, newValue) => {\n                                      setSelectedPlaceOfBirth(newValue);\n                                    },\n                                    value: selectedPlaceOfBirth,\n                                    disablePortal: true,\n                                    style: {\n                                      width: '100%'\n                                    },\n                                    id: \"drpPlaceOfBirth\",\n                                    options: placeOfBirths,\n                                    getOptionLabel: placeOfBirths => placeOfBirths.PlaceOfBirthName,\n                                    renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n                                      style: {\n                                        width: '100%'\n                                      },\n                                      ...params,\n                                      label: \"Place of Birth\",\n                                      required: true\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 495,\n                                      columnNumber: 102\n                                    }, this)\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 485,\n                                    columnNumber: 73\n                                  }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n                                    onChange: (event, newValue) => {\n                                      setSelectedDesignation(newValue);\n                                    },\n                                    value: selectedDesignation,\n                                    disablePortal: true,\n                                    style: {\n                                      width: '100%'\n                                    },\n                                    id: \"drpDesignation\",\n                                    options: designations,\n                                    getOptionLabel: designations => designations.DesignationName,\n                                    renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n                                      style: {\n                                        width: '100%'\n                                      },\n                                      ...params,\n                                      label: \"Designation\"\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 509,\n                                      columnNumber: 102\n                                    }, this)\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 500,\n                                    columnNumber: 73\n                                  }, this), /*#__PURE__*/_jsxDEV(Autocomplete, { ...register('NationalityID'),\n                                    onChange: (event, newValue) => {\n                                      setSelectedNationality(newValue);\n                                    },\n                                    value: selectedNationality,\n                                    disablePortal: true,\n                                    style: {\n                                      width: '100%'\n                                    },\n                                    id: \"drpNationality\",\n                                    options: nationalities,\n                                    getOptionLabel: nationalities => nationalities.NationalityName,\n                                    renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n                                      style: {\n                                        width: '100%'\n                                      },\n                                      ...params,\n                                      label: \"Nationality\"\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 521,\n                                      columnNumber: 102\n                                    }, this)\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 511,\n                                    columnNumber: 73\n                                  }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                                    style: {\n                                      width: '100%'\n                                    },\n                                    type: \"text\",\n                                    required: true,\n                                    id: \"outlined-required\",\n                                    label: \"Remarks\",\n                                    ...register('Remarks'),\n                                    className: `form-control ${errors.Remarks ? 'is-invalid' : ''}`\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 523,\n                                    columnNumber: 73\n                                  }, this)]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 462,\n                                  columnNumber: 65\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 461,\n                                columnNumber: 61\n                              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                                item: true,\n                                xs: 1.2,\n                                children: [/*#__PURE__*/_jsxDEV(DirectorTypeForm, {\n                                  xs: {\n                                    mb: 3\n                                  },\n                                  clearForm: () => {},\n                                  rerenderDirectorTypeTable: rerenderDirectorTypeTable,\n                                  directorTypeFormFunc: useRef(null),\n                                  directorTypeData: selectedDirectorType,\n                                  AddButtonLabel: \"Add\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 535,\n                                  columnNumber: 69\n                                }, this), /*#__PURE__*/_jsxDEV(IDTypeForm, {\n                                  clearForm: () => {},\n                                  rerenderIDTypeTable: rerenderIDTypeTable,\n                                  iDTypeFormFunc: useRef(null),\n                                  idTypeData: selectedIdType,\n                                  AddButtonLabel: \"Add\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 536,\n                                  columnNumber: 69\n                                }, this), /*#__PURE__*/_jsxDEV(PlaceOfBirthForm, {\n                                  clearForm: () => {},\n                                  rerenderPlaceOfBirthTable: rerenderPlaceOfBirthTable,\n                                  placeOfBirthFormFunc: useRef(null),\n                                  directorTypeData: selectedPlaceOfBirth,\n                                  AddButtonLabel: \"Add\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 537,\n                                  columnNumber: 69\n                                }, this), /*#__PURE__*/_jsxDEV(DesignationForm, {\n                                  clearForm: () => {},\n                                  rerenderDesignationTable: rerenderDesignationTable,\n                                  designationFormFunc: useRef(null),\n                                  designationData: selectedDesignation,\n                                  AddButtonLabel: \"Add\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 538,\n                                  columnNumber: 69\n                                }, this), /*#__PURE__*/_jsxDEV(NationalityForm, {\n                                  clearForm: () => {},\n                                  rerenderNationalityTable: rerenderNationalityTable,\n                                  nationalityFormFunc: useRef(null),\n                                  nationalityData: selectedNationality,\n                                  AddButtonLabel: \"Add\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 540,\n                                  columnNumber: 69\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 534,\n                                columnNumber: 65\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 344,\n                              columnNumber: 57\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 343,\n                            columnNumber: 53\n                          }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n                            value: selectedTabIndex,\n                            index: 1,\n                            dir: theme.direction,\n                            children: [/*#__PURE__*/_jsxDEV(Grid, {\n                              container: true,\n                              direction: \"row\",\n                              sx: uploadFileRowStyle,\n                              justifyContent: \"center\",\n                              alignItems: \"stretch\",\n                              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                                item: true,\n                                xs: 3.5,\n                                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                                  htmlFor: \"filePassport\",\n                                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                                    style: {\n                                      display: 'none'\n                                    },\n                                    onChange: handleChangeFile,\n                                    id: \"filePassport\",\n                                    name: \"upload-photo\",\n                                    type: \"file\",\n                                    multiple: true\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 549,\n                                    columnNumber: 73\n                                  }, this), /*#__PURE__*/_jsxDEV(Fab, {\n                                    sx: uploadFileStyle,\n                                    color: \"secondary\",\n                                    size: \"small\",\n                                    component: \"div\",\n                                    \"aria-label\": \"add\",\n                                    variant: \"extended\",\n                                    children: [/*#__PURE__*/_jsxDEV(CloudUploadIcon, {\n                                      fontSize: \"large\",\n                                      sx: {\n                                        mr: 2\n                                      }\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 551,\n                                      columnNumber: 77\n                                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                                      style: {},\n                                      children: \"Upload Passport\"\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 552,\n                                      columnNumber: 77\n                                    }, this)]\n                                  }, void 0, true, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 550,\n                                    columnNumber: 73\n                                  }, this)]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 548,\n                                  columnNumber: 69\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 547,\n                                columnNumber: 65\n                              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                                item: true,\n                                xs: 8.5,\n                                children: /*#__PURE__*/_jsxDEV(Stack, {\n                                  direction: \"row\",\n                                  spacing: 2,\n                                  sx: {\n                                    overflowX: 'auto',\n                                    height: '75px'\n                                  },\n                                  children: passportFileNames.map(x => {\n                                    return /*#__PURE__*/_jsxDEV(ListItem, {\n                                      sx: uploadFileListItemStyle,\n                                      secondaryAction: /*#__PURE__*/_jsxDEV(IconButton, {\n                                        edge: \"end\",\n                                        \"aria-label\": \"delete\",\n                                        children: /*#__PURE__*/_jsxDEV(DeleteOutlineTwoToneIcon, {}, void 0, false, {\n                                          fileName: _jsxFileName,\n                                          lineNumber: 565,\n                                          columnNumber: 97\n                                        }, this)\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 564,\n                                        columnNumber: 93\n                                      }, this),\n                                      children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                                        children: /*#__PURE__*/_jsxDEV(Avatar, {\n                                          children: /*#__PURE__*/_jsxDEV(FilePresentTwoToneIcon, {}, void 0, false, {\n                                            fileName: _jsxFileName,\n                                            lineNumber: 571,\n                                            columnNumber: 97\n                                          }, this)\n                                        }, void 0, false, {\n                                          fileName: _jsxFileName,\n                                          lineNumber: 570,\n                                          columnNumber: 93\n                                        }, this)\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 569,\n                                        columnNumber: 89\n                                      }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                                        primary: x\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 574,\n                                        columnNumber: 89\n                                      }, this)]\n                                    }, void 0, true, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 562,\n                                      columnNumber: 85\n                                    }, this);\n                                  })\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 558,\n                                  columnNumber: 69\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 557,\n                                columnNumber: 65\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 546,\n                              columnNumber: 61\n                            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                              container: true,\n                              direction: \"row\",\n                              sx: uploadFileRowStyle,\n                              justifyContent: \"flex-start\",\n                              alignItems: \"stretch\",\n                              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                                item: true,\n                                xs: 3.5,\n                                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                                  htmlFor: \"fileBills\",\n                                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                                    style: {\n                                      display: 'none'\n                                    },\n                                    onChange: handleChangeFile,\n                                    id: \"fileBills\",\n                                    name: \"upload-bill\",\n                                    type: \"file\",\n                                    multiple: true\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 588,\n                                    columnNumber: 73\n                                  }, this), /*#__PURE__*/_jsxDEV(Fab, {\n                                    sx: uploadFileStyle,\n                                    color: \"secondary\",\n                                    size: \"small\",\n                                    component: \"span\",\n                                    \"aria-label\": \"add\",\n                                    variant: \"extended\",\n                                    children: [/*#__PURE__*/_jsxDEV(CloudUploadIcon, {\n                                      fontSize: \"large\",\n                                      sx: {\n                                        mr: 2\n                                      }\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 590,\n                                      columnNumber: 77\n                                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                                      children: \"Upload Utility Bills\"\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 591,\n                                      columnNumber: 77\n                                    }, this)]\n                                  }, void 0, true, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 589,\n                                    columnNumber: 73\n                                  }, this)]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 587,\n                                  columnNumber: 69\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 586,\n                                columnNumber: 65\n                              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                                item: true,\n                                xs: 8.5,\n                                children: /*#__PURE__*/_jsxDEV(Stack, {\n                                  direction: \"row\",\n                                  spacing: 2,\n                                  sx: {\n                                    overflowX: 'auto',\n                                    height: '75px'\n                                  },\n                                  children: billFileNames.map(x => {\n                                    return /*#__PURE__*/_jsxDEV(ListItem, {\n                                      sx: uploadFileListItemStyle,\n                                      secondaryAction: /*#__PURE__*/_jsxDEV(IconButton, {\n                                        edge: \"end\",\n                                        \"aria-label\": \"delete\",\n                                        children: /*#__PURE__*/_jsxDEV(DeleteOutlineTwoToneIcon, {}, void 0, false, {\n                                          fileName: _jsxFileName,\n                                          lineNumber: 603,\n                                          columnNumber: 97\n                                        }, this)\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 602,\n                                        columnNumber: 93\n                                      }, this),\n                                      children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                                        children: /*#__PURE__*/_jsxDEV(Avatar, {\n                                          children: /*#__PURE__*/_jsxDEV(FilePresentTwoToneIcon, {}, void 0, false, {\n                                            fileName: _jsxFileName,\n                                            lineNumber: 609,\n                                            columnNumber: 97\n                                          }, this)\n                                        }, void 0, false, {\n                                          fileName: _jsxFileName,\n                                          lineNumber: 608,\n                                          columnNumber: 93\n                                        }, this)\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 607,\n                                        columnNumber: 89\n                                      }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                                        primary: x\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 612,\n                                        columnNumber: 89\n                                      }, this)]\n                                    }, void 0, true, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 600,\n                                      columnNumber: 85\n                                    }, this);\n                                  })\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 596,\n                                  columnNumber: 69\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 595,\n                                columnNumber: 65\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 585,\n                              columnNumber: 61\n                            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                              container: true,\n                              direction: \"row\",\n                              sx: uploadFileRowStyle,\n                              justifyContent: \"center\",\n                              alignItems: \"stretch\",\n                              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                                item: true,\n                                xs: 3.5,\n                                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                                  htmlFor: \"fileCompanyDocs\",\n                                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                                    style: {\n                                      display: 'none'\n                                    },\n                                    onChange: handleChangeFile,\n                                    id: \"fileCompanyDocs\",\n                                    name: \"upload-company-docs\",\n                                    type: \"file\",\n                                    multiple: true\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 625,\n                                    columnNumber: 73\n                                  }, this), /*#__PURE__*/_jsxDEV(Fab, {\n                                    sx: uploadFileStyle,\n                                    color: \"secondary\",\n                                    size: \"small\",\n                                    component: \"span\",\n                                    \"aria-label\": \"add\",\n                                    variant: \"extended\",\n                                    children: [/*#__PURE__*/_jsxDEV(CloudUploadIcon, {\n                                      fontSize: \"large\",\n                                      sx: {\n                                        mr: 2\n                                      }\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 627,\n                                      columnNumber: 77\n                                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                                      children: \"Upload Company Docs\"\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 628,\n                                      columnNumber: 77\n                                    }, this)]\n                                  }, void 0, true, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 626,\n                                    columnNumber: 73\n                                  }, this)]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 624,\n                                  columnNumber: 69\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 623,\n                                columnNumber: 65\n                              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                                item: true,\n                                xs: 8.5,\n                                children: /*#__PURE__*/_jsxDEV(Stack, {\n                                  direction: \"row\",\n                                  spacing: 2,\n                                  sx: {\n                                    overflowX: 'auto',\n                                    height: '75px'\n                                  },\n                                  children: companyFileNames.map(x => {\n                                    return /*#__PURE__*/_jsxDEV(ListItem, {\n                                      sx: uploadFileListItemStyle,\n                                      secondaryAction: /*#__PURE__*/_jsxDEV(IconButton, {\n                                        edge: \"end\",\n                                        \"aria-label\": \"delete\",\n                                        children: /*#__PURE__*/_jsxDEV(DeleteOutlineTwoToneIcon, {}, void 0, false, {\n                                          fileName: _jsxFileName,\n                                          lineNumber: 640,\n                                          columnNumber: 97\n                                        }, this)\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 639,\n                                        columnNumber: 93\n                                      }, this),\n                                      children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                                        children: /*#__PURE__*/_jsxDEV(Avatar, {\n                                          children: /*#__PURE__*/_jsxDEV(FilePresentTwoToneIcon, {}, void 0, false, {\n                                            fileName: _jsxFileName,\n                                            lineNumber: 646,\n                                            columnNumber: 97\n                                          }, this)\n                                        }, void 0, false, {\n                                          fileName: _jsxFileName,\n                                          lineNumber: 645,\n                                          columnNumber: 93\n                                        }, this)\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 644,\n                                        columnNumber: 89\n                                      }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                                        primary: x\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 649,\n                                        columnNumber: 89\n                                      }, this)]\n                                    }, void 0, true, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 637,\n                                      columnNumber: 85\n                                    }, this);\n                                  })\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 633,\n                                  columnNumber: 69\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 632,\n                                columnNumber: 65\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 622,\n                              columnNumber: 61\n                            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                              container: true,\n                              direction: \"row\",\n                              sx: uploadFileRowStyle,\n                              justifyContent: \"center\",\n                              alignItems: \"stretch\",\n                              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                                item: true,\n                                xs: 3.5,\n                                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                                  htmlFor: \"fileOtherDocs\",\n                                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                                    style: {\n                                      display: 'none'\n                                    },\n                                    onChange: handleChangeFile,\n                                    id: \"fileOtherDocs\",\n                                    name: \"upload-photo\",\n                                    type: \"file\",\n                                    multiple: true\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 662,\n                                    columnNumber: 73\n                                  }, this), /*#__PURE__*/_jsxDEV(Fab, {\n                                    sx: uploadFileStyle,\n                                    color: \"secondary\",\n                                    size: \"small\",\n                                    component: \"span\",\n                                    \"aria-label\": \"add\",\n                                    variant: \"extended\",\n                                    children: [/*#__PURE__*/_jsxDEV(CloudUploadIcon, {\n                                      fontSize: \"large\",\n                                      sx: {\n                                        mr: 2\n                                      }\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 664,\n                                      columnNumber: 77\n                                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                                      children: \"Upload Other Docs\"\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 665,\n                                      columnNumber: 77\n                                    }, this)]\n                                  }, void 0, true, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 663,\n                                    columnNumber: 73\n                                  }, this)]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 661,\n                                  columnNumber: 69\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 660,\n                                columnNumber: 65\n                              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                                item: true,\n                                xs: 8.5,\n                                children: /*#__PURE__*/_jsxDEV(Stack, {\n                                  direction: \"row\",\n                                  spacing: 2,\n                                  sx: {\n                                    overflowX: 'auto',\n                                    height: '75px'\n                                  },\n                                  children: otherFileNames.map(x => {\n                                    return /*#__PURE__*/_jsxDEV(ListItem, {\n                                      sx: uploadFileListItemStyle,\n                                      secondaryAction: /*#__PURE__*/_jsxDEV(IconButton, {\n                                        edge: \"end\",\n                                        \"aria-label\": \"delete\",\n                                        children: /*#__PURE__*/_jsxDEV(DeleteOutlineTwoToneIcon, {}, void 0, false, {\n                                          fileName: _jsxFileName,\n                                          lineNumber: 677,\n                                          columnNumber: 97\n                                        }, this)\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 676,\n                                        columnNumber: 93\n                                      }, this),\n                                      children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                                        children: /*#__PURE__*/_jsxDEV(Avatar, {\n                                          children: /*#__PURE__*/_jsxDEV(FilePresentTwoToneIcon, {}, void 0, false, {\n                                            fileName: _jsxFileName,\n                                            lineNumber: 683,\n                                            columnNumber: 97\n                                          }, this)\n                                        }, void 0, false, {\n                                          fileName: _jsxFileName,\n                                          lineNumber: 682,\n                                          columnNumber: 93\n                                        }, this)\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 681,\n                                        columnNumber: 89\n                                      }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                                        primary: x\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 686,\n                                        columnNumber: 89\n                                      }, this)]\n                                    }, void 0, true, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 674,\n                                      columnNumber: 85\n                                    }, this);\n                                  })\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 670,\n                                  columnNumber: 69\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 669,\n                                columnNumber: 65\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 659,\n                              columnNumber: 61\n                            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                              container: true,\n                              direction: \"row\",\n                              sx: uploadFileRowStyle,\n                              justifyContent: \"center\",\n                              alignItems: \"stretch\",\n                              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                                item: true,\n                                xs: 3.5,\n                                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                                  htmlFor: \"fileWorld\",\n                                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                                    style: {\n                                      display: 'none'\n                                    },\n                                    onChange: handleChangeFile,\n                                    id: \"fileWorld\",\n                                    name: \"upload-photo\",\n                                    type: \"file\",\n                                    multiple: true\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 699,\n                                    columnNumber: 73\n                                  }, this), /*#__PURE__*/_jsxDEV(Fab, {\n                                    sx: uploadFileStyle,\n                                    color: \"secondary\",\n                                    size: \"small\",\n                                    component: \"span\",\n                                    \"aria-label\": \"add\",\n                                    variant: \"extended\",\n                                    children: [/*#__PURE__*/_jsxDEV(CloudUploadIcon, {\n                                      fontSize: \"large\",\n                                      sx: {\n                                        mr: 2\n                                      }\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 701,\n                                      columnNumber: 77\n                                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                                      children: \"Upload World Check\"\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 702,\n                                      columnNumber: 77\n                                    }, this)]\n                                  }, void 0, true, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 700,\n                                    columnNumber: 73\n                                  }, this)]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 698,\n                                  columnNumber: 69\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 697,\n                                columnNumber: 65\n                              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                                item: true,\n                                xs: 8.5,\n                                children: /*#__PURE__*/_jsxDEV(Stack, {\n                                  direction: \"row\",\n                                  spacing: 2,\n                                  sx: {\n                                    overflowX: 'auto',\n                                    height: '75px'\n                                  },\n                                  children: worldFileNames.map(x => {\n                                    return /*#__PURE__*/_jsxDEV(ListItem, {\n                                      sx: uploadFileListItemStyle,\n                                      secondaryAction: /*#__PURE__*/_jsxDEV(IconButton, {\n                                        edge: \"end\",\n                                        \"aria-label\": \"delete\",\n                                        children: /*#__PURE__*/_jsxDEV(DeleteOutlineTwoToneIcon, {}, void 0, false, {\n                                          fileName: _jsxFileName,\n                                          lineNumber: 714,\n                                          columnNumber: 97\n                                        }, this)\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 713,\n                                        columnNumber: 93\n                                      }, this),\n                                      children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                                        children: /*#__PURE__*/_jsxDEV(Avatar, {\n                                          children: /*#__PURE__*/_jsxDEV(FilePresentTwoToneIcon, {}, void 0, false, {\n                                            fileName: _jsxFileName,\n                                            lineNumber: 720,\n                                            columnNumber: 97\n                                          }, this)\n                                        }, void 0, false, {\n                                          fileName: _jsxFileName,\n                                          lineNumber: 719,\n                                          columnNumber: 93\n                                        }, this)\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 718,\n                                        columnNumber: 89\n                                      }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                                        primary: x\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 723,\n                                        columnNumber: 89\n                                      }, this)]\n                                    }, void 0, true, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 711,\n                                      columnNumber: 85\n                                    }, this);\n                                  })\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 707,\n                                  columnNumber: 69\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 706,\n                                columnNumber: 65\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 696,\n                              columnNumber: 61\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 545,\n                            columnNumber: 53\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 341,\n                          columnNumber: 49\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 340,\n                        columnNumber: 45\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 339,\n                      columnNumber: 41\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 323,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 322,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    style: {\n                      display: selectedTabIndex == 1 ? 'none' : undefined\n                    },\n                    type: \"submit\",\n                    sx: {\n                      margin: 1\n                    },\n                    variant: \"contained\",\n                    color: \"primary\",\n                    children: \" Next\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 740,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    style: {\n                      display: selectedTabIndex == 0 ? 'none' : undefined\n                    },\n                    type: \"button\",\n                    sx: {\n                      margin: 1\n                    },\n                    variant: \"contained\",\n                    color: \"primary\",\n                    onClick: handleSave,\n                    children: \" Save\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 741,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    onClick: () => onClickBack(),\n                    sx: {\n                      margin: 1\n                    },\n                    style: {\n                      display: selectedTabIndex == 0 ? 'none' : undefined\n                    },\n                    type: \"button\",\n                    variant: \"contained\",\n                    color: \"primary\",\n                    children: \" Back\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 742,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    type: \"button\",\n                    onClick: () => resetForm(),\n                    sx: {\n                      margin: 1\n                    },\n                    variant: \"contained\",\n                    color: \"secondary\",\n                    children: \"Reset\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 743,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 739,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(DirectorForm, \"WVOF2uTvhUodeQFrkgat1vIYGq8=\", false, function () {\n  return [useTheme, useForm];\n});\n\n_c = DirectorForm;\nexport default DirectorForm;\n/*{ \"AppointmentDate\": \"Wed Jun 22 2022 12:10:53 GMT+0500 (Pakistan Standard Time)\", \"PlaceOfBirthID\": 2, \"CompanyNumber\": \"dfsdf\", \"DirectorName\": \"\", \"DirectorTypeID\": 2, \"DirectorTypeName\": \"\", \"DesignationID\": 2, \"DesignationName\": \"\", \"NationalityID\": 2, \"NationalityName\": \"\", \"DOB\": \"2022-06-22T07:10:53.736Z\", \"PlaceOfBirthName\": \"\", \"IDTypeID\": 2, \"IDTypeName\": \"\", \"IDNumber\": \"\", \"CessationDate\": \"2022-06-22T07:10:53.736Z\", \"PermanentAddress\": \"\", \"ComunicationAddress\": \"\", \"ContactNumber\": \"\", \"CompanyName\": \"\", \"Email\": \"\", \"IsWorldCheck\": false, \"Remarks\": \"\" }*/\n\nvar _c;\n\n$RefreshReg$(_c, \"DirectorForm\");","map":{"version":3,"sources":["E:/Projects/LFMS/LFMS.WebUI/src/content/pages/Components/Director/DirectorForm.tsx"],"names":["React","useEffect","useRef","useState","Yup","get","post","yupResolver","Button","IconButton","Container","Grid","Card","CardHeader","CardContent","Divider","TextField","Box","Modal","Autocomplete","Tabs","Tab","AppBar","useTheme","Fab","ListItem","Stack","ListItemAvatar","Avatar","ListItemText","Checkbox","SwipeableViews","useForm","dropdowns","TabPanel","switchTab","DatePicker","CloudUploadIcon","DeleteOutlineTwoToneIcon","FilePresentTwoToneIcon","DirectorTypeForm","DesignationForm","IDTypeForm","NationalityForm","PlaceOfBirthForm","label","inputProps","style","position","top","left","transform","width","bgcolor","boxShadow","uploadFileRowStyle","height","overflowX","uploadFileStyle","padding","uploadFileListItemStyle","minWidth","backgroundColor","borderRadius","DirectorForm","clearForm","directorFormFunc","directorData","rerenderTable","passportFileNames","setPassportFileNames","passportFiles","setPassportFiles","billFileNames","setBillFileNames","billFiles","setBillFiles","companyFileNames","setCompanyFileNames","companyFiles","setCompanyFiles","otherFileNames","setOtherFileNames","otherFiles","setOtherFiles","worldFileNames","setWorldFileNames","worldFiles","setWorldFiles","openSuccessAlert","setopenSuccessAlert","dobDate","setDobDate","appointmentDate","setAppointmentDate","cessationDate","setCessationDate","directorTypes","setDirectorTypes","selectedDirectorType","setSelectedDirectorType","designations","setDesignations","selectedDesignation","setSelectedDesignation","nationalities","setNationalities","selectedNationality","setSelectedNationality","idTypes","setIDTypes","selectedIdType","setselectedIdType","placeOfBirths","setPlaceOfBirths","selectedPlaceOfBirth","setSelectedPlaceOfBirth","directorFormData","setDirectorFormData","selectedTabIndex","setSelectedTabIndex","loading","setLoading","message","setMessage","open","setOpen","theme","handleOpen","handleClose","reset","handleAlertClose","event","reason","showModal","resetForm","changeTab","index","id","current","loadDropdowns","editForm","data","IDTypeID","IDTypeName","NationalityID","NationalityName","DesignationID","DesignationName","DirectorTypeID","DirectorTypeName","PlaceOfBirthID","PlaceOfBirthName","Date","AppointmentDate","CessationDate","DOB","DirectorID","then","x","PassportFiles","BillFiles","CompanyFiles","OtherFiles","WorldFiles","getAllDirectorTypes","getAllDesignations","getAllNationalities","getAllPlaceOfBirths","getAllIDTypes","console","log","validationSchema","object","shape","CompanyNumber","string","required","min","max","register","handleSubmit","formState","errors","resolver","onClickBack","onSubmit","handleSave","formData","FormData","append","JSON","stringify","i","length","handleFormSubmit","_url","response","status","error","resMessage","toString","handleTabChange","newValue","handleChangeIndex","handleChangeFile","target","_passportFiles","push","files","map","name","_billFiles","_companyFiles","_otherFiles","_worldFiles","rerenderDirectorTypeTable","rerenderDesignationTable","rerenderIDTypeTable","rerenderNationalityTable","rerenderPlaceOfBirthTable","margin","my","direction","DirectorName","CompanyName","params","Email","IDNumber","ContactNumber","PermanentAddress","ComunicationAddress","idType","Remarks","mb","display","mr","undefined"],"mappings":"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","sourcesContent":["////import { Helmet } from 'react-helmet-async';\r\nimport PageTitle from '../../../../components/PageTitle';\r\nimport React, { ChangeEvent, useEffect, useRef, useState } from 'react';\r\nimport * as Yup from \"yup\";\r\nimport { get, post} from \"../../../../services/common.service\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\n\r\nimport PageTitleWrapper from '../../../../components/PageTitleWrapper';\r\nimport { Button, IconButton, Container, Grid, Card, CardHeader, CardContent, Divider, TextField, Box, Modal, Typography, Autocomplete, Tabs, Tab, AppBar, useTheme, Fab, List, ListItem, Stack, ListItemAvatar, Avatar, ListItemText, Checkbox,  } from '@mui/material';\r\nimport Footer from '../../../../components/Footer';\r\nimport SwipeableViews from 'react-swipeable-views';\r\n\r\nimport Switch from '@mui/material/Switch';\r\nimport { useForm } from 'react-hook-form';\r\nimport { DirectorModel } from '../../../../types/director.type';\r\nimport { dropdowns } from '../../../../services/dropdowns.service';\r\nimport { DesignationModel, DirectorTypeModel, IDTypeModel, NationalityModel, PlaceOfBirthModel } from '../../../../types/master.type';\r\nimport Scrollbars from 'react-custom-scrollbars-2';\r\nimport { TabPanel, TabPanelProps, switchTab } from '../../../../components/TabPanel';\r\nimport { DatePicker } from '@mui/lab';\r\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload';\r\nimport DeleteOutlineTwoToneIcon from '@mui/icons-material/DeleteOutlineTwoTone';\r\nimport FilePresentTwoToneIcon from '@mui/icons-material/FilePresentTwoTone';\r\nimport { DirectorTypeForm } from '../../../../content/pages/Components/DirectorType/DirectorTypeForm';\r\nimport { DesignationForm } from '../../../../content/pages/Components/Designation/DesignationForm';\r\nimport { IDTypeForm } from '../../../../content/pages/Components/IDType/IDTypeForm';\r\nimport { NationalityForm } from '../../../../content/pages/Components/Nationality/NationalityForm';\r\nimport { PlaceOfBirthForm } from '../../../../content/pages/Components/PlaceOfBirth/PlaceOfBirthForm';\r\n//import { DatePicker as DatePickers, KeyboardDatePicker } from \"@material-ui/pickers\";\r\n\r\nconst label = { inputProps: { 'aria-label': 'Switch demo' } };\r\nconst style = {\r\n    position: 'absolute' as 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 1100,\r\n    bgcolor: 'background.paper',\r\n    //border: '2px solid #000',\r\n    boxShadow: 24,\r\n    \r\n};\r\n\r\nconst uploadFileRowStyle = { height: '83px', overflowX: 'auto' };\r\nconst uploadFileStyle = { padding: '30px 10px', width: '250px', 'justify-content': 'flex-start' };\r\nconst uploadFileListItemStyle = { width: '300px', minWidth: '300px', backgroundColor: 'lightgrey', borderRadius: '15px', height: '60px', boxShadow: 24 };\r\n\r\nexport const DirectorForm: React.FC<any> = ({ clearForm, directorFormFunc, directorData, rerenderTable }) => {\r\n    const [passportFileNames, setPassportFileNames] = useState<string[]>([]);\r\n    const [passportFiles, setPassportFiles] = useState<File[]>([]);\r\n    const [billFileNames, setBillFileNames] = useState<string[]>([]);\r\n    const [billFiles, setBillFiles] = useState<File[]>([]);\r\n    const [companyFileNames, setCompanyFileNames] = useState<string[]>([]);\r\n    const [companyFiles, setCompanyFiles] = useState<File[]>([]);\r\n    const [otherFileNames, setOtherFileNames] = useState<string[]>([]);\r\n    const [otherFiles, setOtherFiles] = useState<File[]>([]);\r\n    const [worldFileNames, setWorldFileNames] = useState<string[]>([]);\r\n    const [worldFiles, setWorldFiles] = useState<File[]>([]);\r\n    const [openSuccessAlert, setopenSuccessAlert] = useState<boolean>(false);\r\n    const [dobDate, setDobDate] = useState<Date | null>(null);\r\n    const [appointmentDate, setAppointmentDate] = useState<Date | null>(null);\r\n    const [cessationDate, setCessationDate] = useState<Date | null>(null);\r\n    const [directorTypes, setDirectorTypes] = useState<DirectorTypeModel[]>([]);\r\n    const [selectedDirectorType, setSelectedDirectorType] = useState<DirectorTypeModel>();\r\n    const [designations, setDesignations] = useState<DesignationModel[]>([]);\r\n    const [selectedDesignation, setSelectedDesignation] = useState<DesignationModel>();\r\n    const [nationalities, setNationalities] = useState<NationalityModel[]>([]);\r\n    const [selectedNationality, setSelectedNationality] = useState<NationalityModel>();\r\n    const [idTypes, setIDTypes] = useState<IDTypeModel[]>([]);\r\n    const [selectedIdType, setselectedIdType] = useState<IDTypeModel>();\r\n    const [placeOfBirths, setPlaceOfBirths] = useState<PlaceOfBirthModel[]>([]);\r\n    const [selectedPlaceOfBirth, setSelectedPlaceOfBirth] = useState<PlaceOfBirthModel>();\r\n    const [directorFormData, setDirectorFormData] = useState<DirectorModel>();\r\n    const [selectedTabIndex, setSelectedTabIndex] = useState(0);\r\n    const [loading, setLoading] = useState<boolean>(false);\r\n    const [message, setMessage] = useState<string>(\"\");\r\n    const [open, setOpen] = useState(false);\r\n    const theme = useTheme();\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n        // reset(companyTypeData);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        reset(directorData);\r\n        clearForm();\r\n    }\r\n    const handleAlertClose = (event?: React.SyntheticEvent | Event, reason?: string) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setopenSuccessAlert(false);\r\n    };\r\n   \r\n    const showModal = () => {\r\n        setOpen(true);\r\n        reset(directorData);\r\n    }\r\n    const resetForm = () => {\r\n        reset(directorData);\r\n        clearForm();\r\n    }\r\n    const changeTab = (index: number) => {\r\n        return {\r\n            id: `simple-tab-${index}`,\r\n            'aria-controls': `simple-tabpanel-${index}`,\r\n        };\r\n    }\r\n    useEffect(() => {\r\n        directorFormFunc.current = handleOpen\r\n        reset(directorData);\r\n        loadDropdowns();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        reset(directorData);\r\n        editForm(directorData);\r\n        \r\n    }, [directorData, directorFormFunc]);\r\n    const editForm = (data: DirectorModel) => {\r\n        setselectedIdType({ IDTypeID: directorData.IDTypeID, IDTypeName: directorData.IDTypeName });\r\n        setSelectedNationality({ NationalityID: directorData.NationalityID, NationalityName: directorData.NationalityName });\r\n        setSelectedDesignation({ DesignationID: directorData.DesignationID, DesignationName: directorData.DesignationName });\r\n        setSelectedDirectorType({ DirectorTypeID: directorData.DirectorTypeID, DirectorTypeName: directorData.DirectorTypeName });\r\n        setSelectedPlaceOfBirth({ PlaceOfBirthID: directorData.PlaceOfBirthID, PlaceOfBirthName: directorData.PlaceOfBirthName });\r\n        setAppointmentDate(new Date(data.AppointmentDate));\r\n        setCessationDate(new Date(data.CessationDate));\r\n        setDobDate(new Date(data.DOB));\r\n        if (data.DirectorID) {\r\n            get('Director/GetDirectorFiles').then(x => {\r\n\r\n                setPassportFileNames(x.data.PassportFiles);\r\n                setBillFileNames(x.data.BillFiles);\r\n                setCompanyFileNames(x.data.CompanyFiles);\r\n                setOtherFileNames(x.data.OtherFiles);\r\n                setWorldFileNames(x.data.WorldFiles);\r\n            });\r\n        }\r\n        \r\n        \r\n    }\r\n    const loadDropdowns = () => {\r\n        dropdowns.getAllDirectorTypes().then(x => setDirectorTypes(x));\r\n        dropdowns.getAllDesignations().then(x => setDesignations(x));\r\n        dropdowns.getAllNationalities().then(x => setNationalities(x));\r\n        dropdowns.getAllPlaceOfBirths().then(x => setPlaceOfBirths(x));\r\n        dropdowns.getAllIDTypes().then(x => { console.log(x); setIDTypes(x) });\r\n    }\r\n    const validationSchema = Yup.object().shape({\r\n        CompanyNumber: Yup.string()\r\n            .required('Director is required')\r\n            .min(2, 'Director must be at least 2 characters')\r\n            .max(20, 'Director must not exceed 20 characters'),\r\n        PlaceOfBirthID: Yup.string()\r\n            .required('Director is required'),\r\n        AppointmentDate: Yup.string().required('date is required')\r\n    });\r\n\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        reset,\r\n        formState: { errors }\r\n    } = useForm<DirectorModel>({\r\n        resolver: yupResolver(validationSchema)\r\n    });\r\n    const onClickBack = () => {\r\n        setSelectedTabIndex(0);\r\n        switchTab(0);\r\n        //switchTab(1);\r\n        //handleFormSubmit(data);\r\n        //console.log(JSON.stringify(data, null, 2));\r\n    };\r\n    const onSubmit = (data: DirectorModel) => {\r\n        data.PlaceOfBirthID = selectedPlaceOfBirth!.PlaceOfBirthID ?? 0;\r\n        data.DesignationID = selectedDesignation!.DesignationID ?? 0;\r\n        data.DirectorTypeID = selectedDirectorType!.DirectorTypeID ?? 0;\r\n        data.NationalityID = selectedNationality!.NationalityID ?? 0;\r\n        data.IDTypeID = selectedIdType!.IDTypeID ?? 0;\r\n        data.AppointmentDate = new Date(data.AppointmentDate);\r\n        console.log(data);\r\n        setDirectorFormData(data);\r\n        setSelectedTabIndex(1);\r\n        switchTab(1);\r\n        \r\n        //handleFormSubmit(data);\r\n        //console.log(JSON.stringify(data, null, 2));\r\n    };\r\n    const handleSave = () => {\r\n        let formData = new FormData();\r\n        formData.append(\"Director\", JSON.stringify(directorFormData));\r\n        for (var i = 1; i <= passportFiles.length; i++) {\r\n            formData.append('PassportFiles', passportFiles[i - 1]);\r\n        }\r\n        for (var i = 1; i <= billFiles.length; i++) {\r\n            formData.append('BillFiles', billFiles[i - 1]);\r\n        }\r\n        for (var i = 1; i <= companyFiles.length; i++) {\r\n            formData.append('CompanyFiles', companyFiles[i - 1]);\r\n        }\r\n        for (var i = 1; i <= otherFiles.length; i++) {\r\n            formData.append('OtherFiles', otherFiles[i - 1]);\r\n        }\r\n        for (var i = 1; i <= worldFiles.length; i++) {\r\n            formData.append('WorldFiles', worldFiles[i - 1]);\r\n        }\r\n        handleFormSubmit(formData);\r\n    };\r\n    const handleFormSubmit = (formData: FormData) => {\r\n        setLoading(true);\r\n        let _url = 'director/AddDirectorAsync';\r\n            if (directorFormData!.DirectorID) {\r\n                _url = 'director/EditDirector';\r\n            }\r\n        post(_url, formData).then(\r\n                (response: any) => {\r\n                    // history.push(\"/profile\");\r\n                    if (response.data.status == 'success') {\r\n                        setMessage('Director Successfully Saved!');\r\n                        setopenSuccessAlert(true);\r\n                        handleClose();\r\n                        rerenderTable();\r\n                    }\r\n                },\r\n                (error: any) => {\r\n                    const resMessage =\r\n                        (error.response &&\r\n                            error.response.data &&\r\n                            error.response.data.message) ||\r\n                        error.message ||\r\n                        error.toString();\r\n                    setLoading(false);\r\n                    setMessage(resMessage);\r\n                }\r\n            ); \r\n      \r\n    };\r\n\r\n    const handleTabChange = (event: React.SyntheticEvent, newValue: number) => {\r\n        setSelectedTabIndex(newValue);\r\n    };\r\n    const handleChangeIndex = (index: number) => {\r\n        setSelectedTabIndex(index);\r\n    };\r\n    const handleChangeFile = event => {\r\n        if (event.target.id == 'filePassport') {\r\n            let _passportFiles = passportFiles;\r\n            _passportFiles.push(...event.target.files);\r\n            setPassportFiles(_passportFiles);\r\n            setPassportFileNames(_passportFiles.map(x => x.name));\r\n        }\r\n        else if (event.target.id == 'fileBills') {\r\n            let _billFiles = billFiles;\r\n            for (var i = 0; i < event!.target!.files!.length; i++) {\r\n                _billFiles?.push(event!.target!.files![i]);\r\n            }\r\n            setBillFiles(billFiles);\r\n            setBillFileNames(_billFiles!.map(x => x.name));\r\n        }\r\n        else if (event.target.id == 'fileCompanyDocs') {\r\n            let _companyFiles = companyFiles;\r\n            for (var i = 0; i < event!.target!.files!.length; i++) {\r\n                _companyFiles?.push(event!.target!.files![i]);\r\n            }\r\n            setCompanyFiles(_companyFiles);\r\n            setCompanyFileNames(_companyFiles!.map(x => x.name));\r\n        }\r\n        else if (event.target.id == 'fileOtherDocs') {\r\n            let _otherFiles = otherFiles;\r\n            for (var i = 0; i < event!.target!.files!.length; i++) {\r\n                _otherFiles?.push(event!.target!.files![i]);\r\n            }\r\n            setOtherFiles(_otherFiles);\r\n            setOtherFileNames(_otherFiles!.map(x => x.name));\r\n        }\r\n        else if (event.target.id == 'fileOtherDocs') {\r\n            let _otherFiles = otherFiles;\r\n            for (var i = 0; i < event!.target!.files!.length; i++) {\r\n                _otherFiles?.push(event!.target!.files![i]);\r\n            }\r\n            setOtherFiles(_otherFiles);\r\n            setOtherFileNames(_otherFiles!.map(x => x.name));\r\n        }\r\n        else if (event.target.id == 'fileWorld') {\r\n            let _worldFiles = worldFiles;\r\n            for (var i = 0; i < event!.target!.files!.length; i++) {\r\n                _worldFiles?.push(event!.target!.files![i]);\r\n            }\r\n            setWorldFiles(_worldFiles);\r\n            setWorldFileNames(_worldFiles!.map(x => x.name));\r\n        }\r\n        \r\n    };\r\n    const rerenderDirectorTypeTable = () => {\r\n        dropdowns.getAllDirectorTypes().then(x => setDirectorTypes(x));\r\n    }\r\n    const rerenderDesignationTable = () => {\r\n        dropdowns.getAllDesignations().then(x => setDesignations(x));\r\n    }\r\n    const rerenderIDTypeTable = () => {\r\n        dropdowns.getAllIDTypes().then(x => setIDTypes(x));\r\n    }\r\n    const rerenderNationalityTable = () => {\r\n        dropdowns.getAllNationalities().then(x => setNationalities(x));\r\n    }\r\n    const rerenderPlaceOfBirthTable = () => {\r\n        dropdowns.getAllPlaceOfBirths().then(x => setPlaceOfBirths(x));\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <Button sx={{ margin: 1 }} variant=\"contained\" color=\"primary\" onClick={handleOpen}>Open modal</Button>\r\n            <Modal open={open}  onClose={handleClose}  aria-labelledby=\"modal-modal-title\" aria-describedby=\"modal-modal-description\" >\r\n                <form onSubmit={handleSubmit(onSubmit)} noValidate >\r\n                <Box sx={style}>\r\n                    <Container maxWidth=\"md\">\r\n                        <div className=\"register-form\">\r\n                            {/*   <form onSubmit={handleSubmit(onSubmit)} noValidate>*/}\r\n                            <Grid container direction=\"row\" justifyContent=\"center\" alignItems=\"stretch\">\r\n                                <Grid item xs={12}>\r\n                                    <Card>\r\n                                        <CardHeader title=\"Enter Director Detail\" />\r\n                                        <Divider />\r\n                                        <AppBar position=\"static\">\r\n                                            <Tabs\r\n                                                value={selectedTabIndex}\r\n                                                onChange={handleTabChange}\r\n                                                indicatorColor=\"secondary\"\r\n                                                textColor=\"inherit\"\r\n                                                variant=\"fullWidth\"\r\n                                                aria-label=\"full width tabs example\"\r\n                                            >\r\n                                                <Tab label=\"Details\" {...switchTab(0)} />\r\n                                                <Tab label=\"Uploads\" {...switchTab(1)} />\r\n                                            </Tabs>\r\n                                        </AppBar>\r\n                                        <CardContent>\r\n                                            <Box component=\"div\" sx={{ '& .MuiTextField-root': { my: 1, width: '25ch' }, }}  >\r\n                                                <SwipeableViews  axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'} index={selectedTabIndex} onChangeIndex={handleChangeIndex}\r\n                                                >\r\n                                                    <TabPanel value={selectedTabIndex} index={0} dir={theme.direction}>\r\n                                                        <Grid\r\n                                                            container\r\n                                                            direction=\"row\"\r\n                                                            justifyContent=\"center\"\r\n                                                            alignItems=\"stretch\"\r\n                                                            spacing={1}\r\n                                                        >\r\n                                                            <Grid item xs={3.6}>\r\n                                                                <div>\r\n                                                                    <TextField\r\n                                                                        style={{ width: '100%' }}\r\n                                                                        required\r\n                                                                        id=\"outlined-required\"\r\n                                                                        label=\"Director Name\"\r\n                                                                        {...register('DirectorName')}\r\n                                                                        className={`form-control ${errors.DirectorName ? 'is-invalid' : ''}`}\r\n                                                                        />\r\n                                                                        <TextField\r\n                                                                            style={{ width: '100%' }}\r\n                                                                            required\r\n                                                                            id=\"outlined-required\"\r\n                                                                            label=\"Company Name\"\r\n                                                                            {...register('CompanyName')}\r\n                                                                            className={`form-control ${errors.CompanyName ? 'is-invalid' : ''}`}\r\n                                                                        />\r\n\r\n                                                                        <TextField\r\n                                                                            style={{ width: '100%' }}\r\n                                                                            required\r\n                                                                            id=\"outlined-required\"\r\n                                                                            label=\"CompanyNumber\"\r\n                                                                            {...register('CompanyNumber')}\r\n                                                                            className={`form-control ${errors.CompanyNumber ? 'is-invalid' : ''}`}\r\n                                                                        />\r\n                                                                        <DatePicker\r\n                                                                            label=\"Appointment Date\"\r\n                                                                            {...register('AppointmentDate')}\r\n                                                                            value={appointmentDate}\r\n                                                                            onChange={(newValue) => {\r\n                                                                                setAppointmentDate(newValue);\r\n                                                                            }}\r\n                                                                            renderInput={(params) => <TextField style={{ width: '100%' }} {...params} required />}\r\n                                                                        />\r\n                                                                        <DatePicker\r\n                                                                            label=\"DOB\"\r\n                                                                            {...register('DOB')}\r\n                                                                            value={dobDate}\r\n                                                                            onChange={(newValue) => {\r\n                                                                                setDobDate(newValue);\r\n                                                                            }}\r\n                                                                            renderInput={(params) => <TextField style={{ width: '100%' }} fullWidth {...params} required />}\r\n                                                                        />\r\n                                                                        <DatePicker\r\n                                                                            label=\"Cessation Date\"\r\n                                                                            {...register('CessationDate')}\r\n                                                                            value={cessationDate}\r\n                                                                            onChange={(newValue) => {\r\n                                                                                setCessationDate(newValue);\r\n                                                                            }}\r\n                                                                            renderInput={(params) => <TextField style={{ width: '100%' }} {...params} required />}\r\n                                                                        />\r\n                                                                   \r\n                                                                </div>\r\n                                                            </Grid>\r\n                                                            <Grid item xs={3.6}>\r\n                                                                <div>\r\n                                                                        <TextField\r\n                                                                            style={{ width: '100%' }}\r\n                                                                            required\r\n                                                                            id=\"outlined-required\"\r\n                                                                            label=\"Email\"\r\n                                                                            {...register('Email')}\r\n                                                                            className={`form-control ${errors.Email ? 'is-invalid' : ''}`}\r\n                                                                        />\r\n                                                                       \r\n                                                                        <TextField\r\n                                                                            style={{ width: '100%' }}\r\n                                                                            required\r\n                                                                            id=\"outlined-required\"\r\n                                                                            label=\"ID Number\"\r\n                                                                            {...register('IDNumber')}\r\n                                                                            className={`form-control ${errors.IDNumber ? 'is-invalid' : ''}`}\r\n                                                                        />\r\n                                                                        <TextField\r\n                                                                            style={{ width: '100%' }}\r\n                                                                            required\r\n                                                                            id=\"outlined-required\"\r\n                                                                            label=\"Contact Number\"\r\n                                                                            {...register('ContactNumber')}\r\n                                                                            className={`form-control ${errors.ContactNumber ? 'is-invalid' : ''}`}\r\n                                                                        />\r\n                                                                        <TextField multiline \r\n                                                                            style={{ width: '100%' }} type=\"text\"\r\n                                                                            required\r\n                                                                            id=\"outlined-required\"\r\n                                                                            label=\"Permanant Address\"\r\n                                                                            {...register('PermanentAddress')}\r\n                                                                            className={`form-control ${errors.PermanentAddress ? 'is-invalid' : ''}`}\r\n                                                                        />\r\n                                                                        <TextField multiline\r\n                                                                            style={{ width: '100%' }} type=\"text\"\r\n                                                                            required\r\n                                                                            id=\"outlined-required\"\r\n                                                                            label=\"Comunication Address\"\r\n                                                                            {...register('ComunicationAddress')}\r\n                                                                            className={`form-control ${errors.ComunicationAddress ? 'is-invalid' : ''}`}\r\n                                                                        />\r\n                                                                        <Checkbox\r\n                                                                            color=\"primary\"\r\n                                                                            checked={true}\r\n                                                                            inputProps={{\r\n                                                                                'aria-labelledby': 'Is World Check',\r\n                                                                            }}\r\n                                                                        />\r\n                                                                        <label>Is World Check</label>\r\n                                                                    </div>\r\n                                                            </Grid>\r\n                                                            <Grid item xs={3.6}>\r\n                                                                <div>\r\n                                                                        <Autocomplete\r\n                                                                            onChange={(event, newValue) => {\r\n                                                                                setSelectedDirectorType(newValue!);\r\n                                                                            }}\r\n                                                                            value={selectedDirectorType}\r\n                                                                            disablePortal style={{ width: '100%' }}\r\n                                                                            id=\"drpDirectorType\"\r\n                                                                            options={directorTypes}\r\n                                                                            getOptionLabel={directorTypes => directorTypes.DirectorTypeName}\r\n                                                                            renderInput={(params) => <TextField style={{ width: '100%' }} {...params} label=\"Director Type\" />}\r\n                                                                        />\r\n                                                                        <Autocomplete\r\n                                                                            onChange={(event, newValue) => {\r\n                                                                                setselectedIdType(newValue!);\r\n                                                                            }}\r\n                                                                            value={selectedIdType}\r\n                                                                            disablePortal\r\n                                                                            id=\"drpIDType\"\r\n                                                                            options={idTypes}\r\n                                                                            getOptionLabel={idType => idType.IDTypeName}\r\n                                                                            renderInput={(params) => <TextField style={{ width: '100%' }} {...params} label=\"ID Type\" />}\r\n                                                                        />\r\n                                                                        <Autocomplete\r\n                                                                            {...register('PlaceOfBirthID')}\r\n                                                                            onChange={(event, newValue) => {\r\n                                                                                setSelectedPlaceOfBirth(newValue!);\r\n                                                                            }}\r\n                                                                            value={selectedPlaceOfBirth}\r\n                                                                        disablePortal style={{ width: '100%' }}\r\n                                                                        id=\"drpPlaceOfBirth\"\r\n                                                                        options={placeOfBirths}\r\n                                                                        getOptionLabel={placeOfBirths => placeOfBirths.PlaceOfBirthName}\r\n                                                                            renderInput={(params) => <TextField style={{ width: '100%' }} {...params} label=\"Place of Birth\"\r\n                                                                                required={true}\r\n                                                                            />}\r\n                                                                        />\r\n                                                                       \r\n                                                                        <Autocomplete\r\n                                                                            onChange={(event, newValue) => {\r\n                                                                                setSelectedDesignation(newValue!);\r\n                                                                            }}\r\n                                                                            value={selectedDesignation}\r\n                                                                            disablePortal style={{ width: '100%' }}\r\n                                                                            id=\"drpDesignation\"\r\n                                                                            options={designations}\r\n                                                                            getOptionLabel={designations => designations.DesignationName}\r\n                                                                            renderInput={(params) => <TextField style={{ width: '100%' }} {...params} label=\"Designation\" />}\r\n                                                                        />\r\n                                                                        <Autocomplete\r\n                                                                            {...register('NationalityID')}\r\n                                                                            onChange={(event, newValue) => {\r\n                                                                                setSelectedNationality(newValue!);\r\n                                                                            }}\r\n                                                                            value={selectedNationality}\r\n                                                                            disablePortal style={{ width: '100%' }}\r\n                                                                            id=\"drpNationality\"\r\n                                                                            options={nationalities}\r\n                                                                            getOptionLabel={nationalities => nationalities.NationalityName}\r\n                                                                            renderInput={(params) => <TextField style={{ width: '100%' }} {...params} label=\"Nationality\" />}\r\n                                                                        />\r\n                                                                        <TextField \r\n                                                                            style={{ width: '100%' }} type=\"text\"\r\n                                                                            required\r\n                                                                            id=\"outlined-required\"\r\n                                                                            label=\"Remarks\"\r\n                                                                            {...register('Remarks')}\r\n                                                                            className={`form-control ${errors.Remarks ? 'is-invalid' : ''}`}\r\n                                                                        />\r\n                                                                       \r\n                                                                </div>\r\n                                                            </Grid>\r\n                                                                <Grid item xs={1.2}>\r\n                                                                    <DirectorTypeForm xs={{ mb: 3 }} clearForm={() => { }} rerenderDirectorTypeTable={rerenderDirectorTypeTable} directorTypeFormFunc={useRef<any>(null)} directorTypeData={selectedDirectorType} AddButtonLabel=\"Add\" />\r\n                                                                    <IDTypeForm clearForm={() => { }} rerenderIDTypeTable={rerenderIDTypeTable} iDTypeFormFunc={useRef<any>(null)} idTypeData={selectedIdType} AddButtonLabel=\"Add\" />\r\n                                                                    <PlaceOfBirthForm clearForm={() => { }} rerenderPlaceOfBirthTable={rerenderPlaceOfBirthTable} placeOfBirthFormFunc={useRef<any>(null)} directorTypeData={selectedPlaceOfBirth} AddButtonLabel=\"Add\" />\r\n                                                                    <DesignationForm clearForm={() => { }} rerenderDesignationTable={rerenderDesignationTable} designationFormFunc={useRef<any>(null)} designationData={selectedDesignation} AddButtonLabel=\"Add\"  />\r\n                                                                    \r\n                                                                    <NationalityForm clearForm={() => { }} rerenderNationalityTable={rerenderNationalityTable} nationalityFormFunc={useRef<any>(null)} nationalityData={selectedNationality} AddButtonLabel=\"Add\" />\r\n                                                                    \r\n                                                            </Grid>\r\n                                                        </Grid>\r\n                                                    </TabPanel>\r\n                                                    <TabPanel value={selectedTabIndex} index={1} dir={theme.direction}>\r\n                                                            <Grid container direction=\"row\" sx={uploadFileRowStyle} justifyContent=\"center\" alignItems=\"stretch\">\r\n                                                                <Grid item xs={3.5}>\r\n                                                                    <label htmlFor=\"filePassport\" >\r\n                                                                        <input style={{ display: 'none' }} onChange={handleChangeFile} id=\"filePassport\" name=\"upload-photo\" type=\"file\" multiple />\r\n                                                                        <Fab  sx={uploadFileStyle} color=\"secondary\" size=\"small\" component=\"div\" aria-label=\"add\" variant=\"extended\">\r\n                                                                            <CloudUploadIcon fontSize=\"large\" sx={{ mr: 2 }} />\r\n                                                                            <p style={{   }}>Upload Passport</p>\r\n                                                                        </Fab>\r\n                                                                    </label>\r\n                                                                   \r\n                                                                </Grid>\r\n                                                                <Grid item xs={ 8.5}>\r\n                                                                    <Stack direction=\"row\" spacing={2} sx={{ overflowX: 'auto', height: '75px' }}>\r\n                                                                        {\r\n                                                                            passportFileNames.map(x => {\r\n                                                                                return (\r\n                                                                                    <ListItem sx={uploadFileListItemStyle}\r\n                                                                                        secondaryAction={\r\n                                                                                            <IconButton edge=\"end\" aria-label=\"delete\">\r\n                                                                                                <DeleteOutlineTwoToneIcon />\r\n                                                                                            </IconButton>\r\n                                                                                        }\r\n                                                                                    >\r\n                                                                                        <ListItemAvatar>\r\n                                                                                            <Avatar>\r\n                                                                                                <FilePresentTwoToneIcon />\r\n                                                                                            </Avatar>\r\n                                                                                        </ListItemAvatar>\r\n                                                                                        <ListItemText\r\n                                                                                            primary={x}\r\n                                                                                        />\r\n                                                                                    </ListItem>\r\n                                                                                    )\r\n                                                                            })\r\n                                                                        }\r\n                                                                       \r\n                                                                        </Stack>\r\n                                                                </Grid>\r\n                                                            </Grid>\r\n                                                            <Grid container direction=\"row\" sx={uploadFileRowStyle} justifyContent=\"flex-start\" alignItems=\"stretch\">\r\n                                                                <Grid item xs={3.5} >\r\n                                                                    <label htmlFor=\"fileBills\">\r\n                                                                        <input style={{ display: 'none' }} onChange={handleChangeFile} id=\"fileBills\" name=\"upload-bill\" type=\"file\" multiple />\r\n                                                                        <Fab sx={uploadFileStyle} color=\"secondary\" size=\"small\" component=\"span\" aria-label=\"add\" variant=\"extended\">\r\n                                                                            <CloudUploadIcon fontSize=\"large\" sx={{ mr: 2 }} />\r\n                                                                            <p>Upload Utility Bills</p>\r\n                                                                        </Fab>\r\n                                                                    </label>\r\n                                                                </Grid>\r\n                                                                <Grid item xs={8.5}>\r\n                                                                    <Stack direction=\"row\" spacing={2} sx={{ overflowX: 'auto', height: '75px' }}>\r\n                                                                        {\r\n                                                                            billFileNames.map(x => {\r\n                                                                                return (\r\n                                                                                    <ListItem sx={uploadFileListItemStyle}\r\n                                                                                        secondaryAction={\r\n                                                                                            <IconButton edge=\"end\" aria-label=\"delete\">\r\n                                                                                                <DeleteOutlineTwoToneIcon />\r\n                                                                                            </IconButton>\r\n                                                                                        }\r\n                                                                                    >\r\n                                                                                        <ListItemAvatar>\r\n                                                                                            <Avatar>\r\n                                                                                                <FilePresentTwoToneIcon />\r\n                                                                                            </Avatar>\r\n                                                                                        </ListItemAvatar>\r\n                                                                                        <ListItemText\r\n                                                                                            primary={x}\r\n                                                                                        />\r\n                                                                                    </ListItem>\r\n                                                                                )\r\n                                                                            })\r\n                                                                        }\r\n                                                                        </Stack>\r\n                                                                </Grid>\r\n                                                            </Grid>\r\n                                                            <Grid container direction=\"row\" sx={uploadFileRowStyle} justifyContent=\"center\" alignItems=\"stretch\">\r\n                                                                <Grid item xs={3.5}>\r\n                                                                    <label htmlFor=\"fileCompanyDocs\">\r\n                                                                        <input style={{ display: 'none' }} onChange={handleChangeFile} id=\"fileCompanyDocs\" name=\"upload-company-docs\" type=\"file\" multiple />\r\n                                                                        <Fab sx={uploadFileStyle} color=\"secondary\" size=\"small\" component=\"span\" aria-label=\"add\" variant=\"extended\">\r\n                                                                            <CloudUploadIcon fontSize=\"large\" sx={{ mr: 2 }} />\r\n                                                                            <p>Upload Company Docs</p>\r\n                                                                        </Fab>\r\n                                                                    </label>\r\n                                                                </Grid>\r\n                                                                <Grid item xs={8.5}>\r\n                                                                    <Stack direction=\"row\" spacing={2} sx={{ overflowX: 'auto', height: '75px' }}>\r\n                                                                        {\r\n                                                                            companyFileNames.map(x => {\r\n                                                                                return (\r\n                                                                                    <ListItem sx={uploadFileListItemStyle}\r\n                                                                                        secondaryAction={\r\n                                                                                            <IconButton edge=\"end\" aria-label=\"delete\">\r\n                                                                                                <DeleteOutlineTwoToneIcon />\r\n                                                                                            </IconButton>\r\n                                                                                        }\r\n                                                                                    >\r\n                                                                                        <ListItemAvatar>\r\n                                                                                            <Avatar>\r\n                                                                                                <FilePresentTwoToneIcon />\r\n                                                                                            </Avatar>\r\n                                                                                        </ListItemAvatar>\r\n                                                                                        <ListItemText\r\n                                                                                            primary={x}\r\n                                                                                        />\r\n                                                                                    </ListItem>\r\n                                                                                )\r\n                                                                            })\r\n                                                                        }\r\n                                                                    </Stack>\r\n                                                                </Grid>\r\n                                                            </Grid>\r\n                                                            <Grid container direction=\"row\" sx={uploadFileRowStyle} justifyContent=\"center\" alignItems=\"stretch\">\r\n                                                                <Grid item xs={3.5}>\r\n                                                                    <label htmlFor=\"fileOtherDocs\">\r\n                                                                        <input style={{ display: 'none' }} onChange={handleChangeFile} id=\"fileOtherDocs\" name=\"upload-photo\" type=\"file\" multiple />\r\n                                                                        <Fab sx={uploadFileStyle} color=\"secondary\" size=\"small\" component=\"span\" aria-label=\"add\" variant=\"extended\">\r\n                                                                            <CloudUploadIcon fontSize=\"large\" sx={{ mr: 2 }} />\r\n                                                                            <p>Upload Other Docs</p>\r\n                                                                        </Fab>\r\n                                                                    </label>\r\n                                                                </Grid>\r\n                                                                <Grid item xs={8.5}>\r\n                                                                    <Stack direction=\"row\" spacing={2} sx={{ overflowX: 'auto', height: '75px' }}>\r\n                                                                        {\r\n                                                                            otherFileNames.map(x => {\r\n                                                                                return (\r\n                                                                                    <ListItem sx={uploadFileListItemStyle}\r\n                                                                                        secondaryAction={\r\n                                                                                            <IconButton edge=\"end\" aria-label=\"delete\">\r\n                                                                                                <DeleteOutlineTwoToneIcon />\r\n                                                                                            </IconButton>\r\n                                                                                        }\r\n                                                                                    >\r\n                                                                                        <ListItemAvatar>\r\n                                                                                            <Avatar>\r\n                                                                                                <FilePresentTwoToneIcon />\r\n                                                                                            </Avatar>\r\n                                                                                        </ListItemAvatar>\r\n                                                                                        <ListItemText\r\n                                                                                            primary={x}\r\n                                                                                        />\r\n                                                                                    </ListItem>\r\n                                                                                )\r\n                                                                            })\r\n                                                                        }\r\n                                                                    </Stack>\r\n                                                                </Grid>\r\n                                                            </Grid>\r\n                                                            <Grid container direction=\"row\" sx={uploadFileRowStyle} justifyContent=\"center\" alignItems=\"stretch\">\r\n                                                                <Grid item xs={3.5}>\r\n                                                                    <label htmlFor=\"fileWorld\">\r\n                                                                        <input style={{ display: 'none' }} onChange={handleChangeFile} id=\"fileWorld\" name=\"upload-photo\" type=\"file\" multiple />\r\n                                                                        <Fab sx={uploadFileStyle} color=\"secondary\" size=\"small\" component=\"span\" aria-label=\"add\" variant=\"extended\">\r\n                                                                            <CloudUploadIcon fontSize=\"large\" sx={{ mr: 2 }} />\r\n                                                                            <p>Upload World Check</p>\r\n                                                                        </Fab>\r\n                                                                    </label>\r\n                                                                </Grid>\r\n                                                                <Grid item xs={8.5}>\r\n                                                                    <Stack direction=\"row\" spacing={2} sx={{ overflowX: 'auto', height: '75px' }}>\r\n                                                                        {\r\n                                                                            worldFileNames.map(x => {\r\n                                                                                return (\r\n                                                                                    <ListItem sx={uploadFileListItemStyle}\r\n                                                                                        secondaryAction={\r\n                                                                                            <IconButton edge=\"end\" aria-label=\"delete\">\r\n                                                                                                <DeleteOutlineTwoToneIcon />\r\n                                                                                            </IconButton>\r\n                                                                                        }\r\n                                                                                    >\r\n                                                                                        <ListItemAvatar>\r\n                                                                                            <Avatar>\r\n                                                                                                <FilePresentTwoToneIcon />\r\n                                                                                            </Avatar>\r\n                                                                                        </ListItemAvatar>\r\n                                                                                        <ListItemText\r\n                                                                                            primary={x}\r\n                                                                                        />\r\n                                                                                    </ListItem>\r\n                                                                                )\r\n                                                                            })\r\n                                                                        }\r\n                                                                    </Stack>\r\n                                                                </Grid>\r\n                                                            </Grid>\r\n                                                    </TabPanel>\r\n                                                </SwipeableViews>\r\n                                            </Box>\r\n                                        </CardContent>\r\n                                    </Card>\r\n                                </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Button style={{ display: selectedTabIndex == 1 ? 'none' : undefined }} type=\"submit\" sx={{ margin: 1 }} variant=\"contained\" color=\"primary\"> Next</Button>\r\n                                        <Button style={{ display: selectedTabIndex == 0 ? 'none' : undefined }} type=\"button\" sx={{ margin: 1 }} variant=\"contained\" color=\"primary\" onClick={handleSave}> Save</Button>\r\n                                        <Button onClick={() => onClickBack()} sx={{ margin: 1 }} style={{ display: selectedTabIndex == 0 ? 'none' : undefined }} type=\"button\" variant=\"contained\" color=\"primary\"> Back</Button>\r\n                                    <Button type=\"button\"\r\n                                        onClick={() => resetForm()} sx={{ margin: 1 }} variant=\"contained\" color=\"secondary\">\r\n                                        Reset\r\n                                    </Button>\r\n\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                            {/*</form>*/}\r\n                        </div>\r\n                    </Container>\r\n                    </Box>\r\n                </form>\r\n            </Modal>\r\n\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default DirectorForm;\r\n\r\n\r\n/*{ \"AppointmentDate\": \"Wed Jun 22 2022 12:10:53 GMT+0500 (Pakistan Standard Time)\", \"PlaceOfBirthID\": 2, \"CompanyNumber\": \"dfsdf\", \"DirectorName\": \"\", \"DirectorTypeID\": 2, \"DirectorTypeName\": \"\", \"DesignationID\": 2, \"DesignationName\": \"\", \"NationalityID\": 2, \"NationalityName\": \"\", \"DOB\": \"2022-06-22T07:10:53.736Z\", \"PlaceOfBirthName\": \"\", \"IDTypeID\": 2, \"IDTypeName\": \"\", \"IDNumber\": \"\", \"CessationDate\": \"2022-06-22T07:10:53.736Z\", \"PermanentAddress\": \"\", \"ComunicationAddress\": \"\", \"ContactNumber\": \"\", \"CompanyName\": \"\", \"Email\": \"\", \"IsWorldCheck\": false, \"Remarks\": \"\" }*/"]},"metadata":{},"sourceType":"module"}