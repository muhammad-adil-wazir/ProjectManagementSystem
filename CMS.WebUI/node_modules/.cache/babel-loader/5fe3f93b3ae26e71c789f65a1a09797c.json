{"ast":null,"code":"var _jsxFileName = \"E:\\\\Projects\\\\LFMS\\\\LFMS.WebUI\\\\src\\\\content\\\\pages\\\\Components\\\\ShareholderType\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport { Grid, Container } from '@mui/material';\nimport { useRef, useState } from 'react';\nimport { ShareholderTypeForm } from './ShareholderTypeForm';\nimport ShareholderTypeTable from './ShareholderTypeTable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ShareholderType() {\n  _s();\n\n  const initualData = {\n    ShareholderTypeName: \"\",\n    Remarks: \"\"\n  };\n  const [shareholderTypeData, setShareholderTypeData] = useState(initualData);\n  const [rerenderTableFlag, setrerenderTableFlag] = useState(false);\n  const shareholderTypeFormFunc = useRef(null);\n\n  const editHandler = (event, shareholderType) => {\n    event.stopPropagation();\n    setShareholderTypeData(shareholderType);\n\n    if (shareholderTypeFormFunc.current != null) {\n      var _shareholderTypeFormF;\n\n      (_shareholderTypeFormF = shareholderTypeFormFunc.current) === null || _shareholderTypeFormF === void 0 ? void 0 : _shareholderTypeFormF.call(shareholderTypeFormFunc);\n    }\n  };\n\n  const clearShareholderTypeData = () => {\n    setShareholderTypeData(initualData);\n  };\n\n  const rerenderTable = () => {\n    setrerenderTableFlag(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"lg\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        justifyContent: \"center\",\n        alignItems: \"stretch\",\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(ShareholderTypeForm, {\n            clearForm: clearShareholderTypeData,\n            rerenderTable: rerenderTable,\n            shareholderTypeFormFunc: shareholderTypeFormFunc,\n            shareholderTypeData: shareholderTypeData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(ShareholderTypeTable, {\n            editHandler: editHandler,\n            rerenderTableFlag: rerenderTableFlag\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(ShareholderType, \"4Z7C+5w5Z9EIz1WDqgrn5xMCNeY=\");\n\n_c = ShareholderType;\nexport default ShareholderType;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShareholderType\");","map":{"version":3,"sources":["E:/Projects/LFMS/LFMS.WebUI/src/content/pages/Components/ShareholderType/index.tsx"],"names":["Grid","Container","useRef","useState","ShareholderTypeForm","ShareholderTypeTable","ShareholderType","initualData","ShareholderTypeName","Remarks","shareholderTypeData","setShareholderTypeData","rerenderTableFlag","setrerenderTableFlag","shareholderTypeFormFunc","editHandler","event","shareholderType","stopPropagation","current","clearShareholderTypeData","rerenderTable"],"mappings":";;;AAAA,SAASA,IAAT,EAAeC,SAAf,QAAgC,eAAhC;AACA,SAA4BC,MAA5B,EAAoCC,QAApC,QAAoD,OAApD;AACA,SAASC,mBAAT,QAA0D,uBAA1D;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;;;;AAEA,SAASC,eAAT,GAA2B;AAAA;;AACvB,QAAMC,WAAW,GAAG;AAChBC,IAAAA,mBAAmB,EAAE,EADL;AAEhBC,IAAAA,OAAO,EAAE;AAFO,GAApB;AAIA,QAAM,CAACC,mBAAD,EAAsBC,sBAAtB,IAAgDR,QAAQ,CAAuBI,WAAvB,CAA9D;AACA,QAAM,CAACK,iBAAD,EAAoBC,oBAApB,IAA4CV,QAAQ,CAAU,KAAV,CAA1D;AACA,QAAMW,uBAAuB,GAAGZ,MAAM,CAAM,IAAN,CAAtC;;AACA,QAAMa,WAAgB,GAAG,CAACC,KAAD,EAAaC,eAAb,KAAsC;AAC3DD,IAAAA,KAAK,CAACE,eAAN;AAEAP,IAAAA,sBAAsB,CAACM,eAAD,CAAtB;;AACA,QAAIH,uBAAuB,CAACK,OAAxB,IAAmC,IAAvC,EAA6C;AAAA;;AACzC,+BAAAL,uBAAuB,CAACK,OAAxB,qFAAAL,uBAAuB;AAC1B;AACJ,GAPD;;AAQA,QAAMM,wBAAwB,GAAG,MAAM;AACnCT,IAAAA,sBAAsB,CAACJ,WAAD,CAAtB;AACH,GAFD;;AAGA,QAAMc,aAAa,GAAG,MAAM;AACxBR,IAAAA,oBAAoB,CAAC,IAAD,CAApB;AACH,GAFD;;AAGA,sBACI;AAAA,2BACI,QAAC,SAAD;AAAW,MAAA,QAAQ,EAAC,IAApB;AAAA,6BACI,QAAC,IAAD;AACI,QAAA,SAAS,MADb;AAEI,QAAA,SAAS,EAAC,KAFd;AAGI,QAAA,cAAc,EAAC,QAHnB;AAII,QAAA,UAAU,EAAC,SAJf;AAKI,QAAA,OAAO,EAAE,CALb;AAAA,gCAOI,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAA,iCACI,QAAC,mBAAD;AAAqB,YAAA,SAAS,EAAEO,wBAAhC;AACI,YAAA,aAAa,EAAEC,aADnB;AACkC,YAAA,uBAAuB,EAAEP,uBAD3D;AAEI,YAAA,mBAAmB,EAAEJ;AAFzB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAPJ,eAYI,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAA,iCACI,QAAC,oBAAD;AAAsB,YAAA,WAAW,EAAEK,WAAnC;AAAgD,YAAA,iBAAiB,EAAEH;AAAnE;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAZJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAsBH;;GA5CQN,e;;KAAAA,e;AA8CT,eAAeA,eAAf","sourcesContent":["import { Grid, Container } from '@mui/material';\r\nimport { MouseEventHandler, useRef, useState } from 'react';\r\nimport { ShareholderTypeForm, ShareholderTypeModel } from './ShareholderTypeForm';\r\nimport ShareholderTypeTable from './ShareholderTypeTable';\r\n\r\nfunction ShareholderType() {\r\n    const initualData = {\r\n        ShareholderTypeName: \"\",\r\n        Remarks: \"\",\r\n    }\r\n    const [shareholderTypeData, setShareholderTypeData] = useState<ShareholderTypeModel>(initualData);\r\n    const [rerenderTableFlag, setrerenderTableFlag] = useState<boolean>(false);\r\n    const shareholderTypeFormFunc = useRef<any>(null)\r\n    const editHandler: any = (event: any, shareholderType: any) => {\r\n        event.stopPropagation();\r\n\r\n        setShareholderTypeData(shareholderType);\r\n        if (shareholderTypeFormFunc.current != null) {\r\n            shareholderTypeFormFunc.current?.();\r\n        }\r\n    }\r\n    const clearShareholderTypeData = () => {\r\n        setShareholderTypeData(initualData);\r\n    }\r\n    const rerenderTable = () => {\r\n        setrerenderTableFlag(true);\r\n    }\r\n    return (\r\n        <>\r\n            <Container maxWidth=\"lg\">\r\n                <Grid\r\n                    container\r\n                    direction=\"row\"\r\n                    justifyContent=\"center\"\r\n                    alignItems=\"stretch\"\r\n                    spacing={3}\r\n                >\r\n                    <Grid item xs={12}>\r\n                        <ShareholderTypeForm clearForm={clearShareholderTypeData}\r\n                            rerenderTable={rerenderTable} shareholderTypeFormFunc={shareholderTypeFormFunc}\r\n                            shareholderTypeData={shareholderTypeData} />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <ShareholderTypeTable editHandler={editHandler} rerenderTableFlag={rerenderTableFlag} />\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ShareholderType;\r\n"]},"metadata":{},"sourceType":"module"}