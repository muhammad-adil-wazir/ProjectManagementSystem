{"ast":null,"code":"var _jsxFileName = \"E:\\\\Projects\\\\Rebartek\\\\CMS.WEBUI\\\\src\\\\content\\\\pages\\\\Components\\\\Lecture\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport { Grid, Container, Autocomplete, TextField, Snackbar, Alert, ListItem, Checkbox, ListItemIcon, ListItemText, List, Card, Divider, CardHeader, Button, CardContent } from '@mui/material';\nimport { useEffect, useRef, useState } from 'react';\nimport { lectureService } from '../../../../services/lecture.service';\nimport { ProfileService } from '../../../../services/profile.service';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction not(a, b) {\n  return a.filter(value => b.indexOf(value) === -1);\n}\n\nfunction intersection(a, b) {\n  return a.filter(value => b.indexOf(value) !== -1);\n}\n\nfunction union(a, b) {\n  return [...a, ...not(b, a)];\n}\n\nconst Lecture = () => {\n  _s();\n\n  const [openSuccessAlert, setopenSuccessAlert] = useState(false);\n  const [openErrorAlert, setopenErrorAlert] = useState(false);\n  const [messageSuccess, setMessageSuccess] = useState(\"\");\n  const [messageErorr, setMessageError] = useState(\"\");\n  const [selectedLectures, setSelectedLectures] = useState([]);\n  const [departments, setDepartments] = useState([]);\n  const [selectedDepartment, setSelectedDepartment] = useState();\n  const [rerenderTableFlag, setrerenderTableFlag] = useState(false);\n  const userFormFunc = useRef(null);\n  useEffect(() => {\n    lectureService.getAllDepartments().then(x => setDepartments(x));\n\n    let _profile = ProfileService.getProfile();\n\n    if (_profile) {\n      if (_profile.RoleID != 1) {\n        if (_profile.RoleID == 2) {} else if (_profile.RoleID == 3) {//let _student = studenteService.getStudentById(_profile.UserID);\n        } //setSelectedDepartment(departments.filter(x => x._id == _profile.))\n\n      }\n    }\n  }, []);\n\n  const handleAlertClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setopenSuccessAlert(false);\n    setopenErrorAlert(false);\n  };\n\n  const rerenderLectureTable = () => {\n    setrerenderTableFlag(true);\n  };\n\n  const [checked, setChecked] = useState([]);\n  const [left, setLeft] = useState([0, 1, 2, 3]);\n  const [right, setRight] = useState([4, 5, 6, 7]);\n  const leftChecked = intersection(checked, left);\n  const rightChecked = intersection(checked, right);\n\n  const handleToggle = value => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  const numberOfChecked = items => intersection(checked, items).length;\n\n  const handleToggleAll = items => () => {\n    if (numberOfChecked(items) === items.length) {\n      setChecked(not(checked, items));\n    } else {\n      setChecked(union(checked, items));\n    }\n  };\n\n  const handleCheckedRight = () => {\n    setRight(right.concat(leftChecked));\n    setLeft(not(left, leftChecked));\n    setChecked(not(checked, leftChecked));\n  };\n\n  const handleCheckedLeft = () => {\n    setLeft(left.concat(rightChecked));\n    setRight(not(right, rightChecked));\n    setChecked(not(checked, rightChecked));\n  };\n\n  const handleClickSave = () => {};\n\n  const customList = (title, items) => /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      sx: {\n        px: 2,\n        py: 1\n      },\n      avatar: /*#__PURE__*/_jsxDEV(Checkbox, {\n        onClick: handleToggleAll(items),\n        checked: numberOfChecked(items) === items.length && items.length !== 0,\n        indeterminate: numberOfChecked(items) !== items.length && numberOfChecked(items) !== 0,\n        disabled: items.length === 0,\n        inputProps: {\n          'aria-label': 'all items selected'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this),\n      title: title,\n      subheader: `${numberOfChecked(items)}/${items.length} selected`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      sx: {\n        height: 330,\n        bgcolor: 'background.paper',\n        overflow: 'auto'\n      },\n      dense: true,\n      component: \"div\",\n      role: \"list\",\n      children: [items.map(value => {\n        const labelId = `transfer-list-all-item-${value}-label`;\n        return /*#__PURE__*/_jsxDEV(ListItem, {\n          role: \"listitem\",\n          button: true,\n          onClick: handleToggle(value),\n          children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n            children: /*#__PURE__*/_jsxDEV(Checkbox, {\n              checked: checked.indexOf(value) !== -1,\n              tabIndex: -1,\n              disableRipple: true,\n              inputProps: {\n                'aria-labelledby': labelId\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            id: labelId,\n            primary: `List item ${value + 1}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this)]\n        }, value, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(ListItem, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Snackbar, {\n      open: openSuccessAlert,\n      autoHideDuration: 5000,\n      onClose: handleAlertClose,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleAlertClose,\n        variant: \"filled\",\n        severity: \"success\",\n        sx: {\n          width: '100%'\n        },\n        children: messageSuccess\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: openErrorAlert,\n      autoHideDuration: 5000,\n      onClose: handleAlertClose,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleAlertClose,\n        variant: \"filled\",\n        severity: \"success\",\n        sx: {\n          width: '100%'\n        },\n        children: messageSuccess\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        m: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        title: \"Lecture Selection\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          maxWidth: \"lg\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            direction: \"row\",\n            justifyContent: \"center\",\n            alignItems: \"stretch\",\n            spacing: 3,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n                onChange: (event, newValue) => {\n                  setSelectedDepartment(newValue);\n                },\n                value: selectedDepartment,\n                disablePortal: true,\n                style: {\n                  width: '94%'\n                },\n                id: \"drpDepartments\",\n                options: departments,\n                getOptionLabel: departments => departments.departmentName,\n                renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n                  style: {\n                    width: '100%'\n                  },\n                  ...params,\n                  label: \"Department\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 54\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              sx: {\n                textAlign: \"right\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"button\",\n                onClick: () => handleClickSave(),\n                sx: {\n                  margin: 1\n                },\n                variant: \"contained\",\n                color: \"secondary\",\n                children: \" Reset \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 2,\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 5.6,\n                  children: customList('Lecture Choices', left)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: /*#__PURE__*/_jsxDEV(Grid, {\n                    container: true,\n                    direction: \"column\",\n                    alignItems: \"center\",\n                    children: [/*#__PURE__*/_jsxDEV(Button, {\n                      sx: {\n                        my: 0.5\n                      },\n                      variant: \"outlined\",\n                      size: \"small\",\n                      onClick: handleCheckedRight,\n                      disabled: leftChecked.length === 0,\n                      \"aria-label\": \"move selected right\",\n                      children: \">\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 205,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      sx: {\n                        my: 0.5\n                      },\n                      variant: \"outlined\",\n                      size: \"small\",\n                      onClick: handleCheckedLeft,\n                      disabled: rightChecked.length === 0,\n                      \"aria-label\": \"move selected left\",\n                      children: \"<\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 215,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 204,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 5.5,\n                  children: customList('Chosen Lectures', right)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Lecture, \"rmOScFVGW3/LItbAOMcmw0jX0fg=\");\n\n_c = Lecture;\nexport default Lecture;\n\nvar _c;\n\n$RefreshReg$(_c, \"Lecture\");","map":{"version":3,"sources":["E:/Projects/Rebartek/CMS.WEBUI/src/content/pages/Components/Lecture/index.tsx"],"names":["Grid","Container","Autocomplete","TextField","Snackbar","Alert","ListItem","Checkbox","ListItemIcon","ListItemText","List","Card","Divider","CardHeader","Button","CardContent","useEffect","useRef","useState","lectureService","ProfileService","not","a","b","filter","value","indexOf","intersection","union","Lecture","openSuccessAlert","setopenSuccessAlert","openErrorAlert","setopenErrorAlert","messageSuccess","setMessageSuccess","messageErorr","setMessageError","selectedLectures","setSelectedLectures","departments","setDepartments","selectedDepartment","setSelectedDepartment","rerenderTableFlag","setrerenderTableFlag","userFormFunc","getAllDepartments","then","x","_profile","getProfile","RoleID","handleAlertClose","event","reason","rerenderLectureTable","checked","setChecked","left","setLeft","right","setRight","leftChecked","rightChecked","handleToggle","currentIndex","newChecked","push","splice","numberOfChecked","items","length","handleToggleAll","handleCheckedRight","concat","handleCheckedLeft","handleClickSave","customList","title","px","py","height","bgcolor","overflow","map","labelId","width","m","newValue","departmentName","params","textAlign","margin","my"],"mappings":"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","sourcesContent":["import { Grid, Container, Autocomplete, TextField, Snackbar, Alert, ListItem, Checkbox, ListItemIcon, ListItemText, List, Card, Divider, CardHeader, Button, CardContent } from '@mui/material';\r\nimport { MouseEventHandler, useEffect, useRef, useState } from 'react';\r\nimport LectureTable from './LectureTable';\r\nimport { DepartmentModel, LectureModel } from '../../../../types/master.type';\r\nimport { lectureService } from '../../../../services/lecture.service';\r\nimport { studenteService } from '../../../../services/student.service';\r\nimport { ProfileService } from '../../../../services/profile.service';\r\n\r\nfunction not(a: readonly number[], b: readonly number[]) {\r\n    return a.filter((value) => b.indexOf(value) === -1);\r\n  }\r\n  \r\n  function intersection(a: readonly number[], b: readonly number[]) {\r\n    return a.filter((value) => b.indexOf(value) !== -1);\r\n  }\r\n  \r\n  function union(a: readonly number[], b: readonly number[]) {\r\n    return [...a, ...not(b, a)];\r\n  }\r\n\r\nconst Lecture = () => {\r\n\r\n\r\n    \r\n    const [openSuccessAlert, setopenSuccessAlert] = useState<boolean>(false);\r\n    const [openErrorAlert, setopenErrorAlert] = useState<boolean>(false);\r\n    const [messageSuccess, setMessageSuccess] = useState<string>(\"\");\r\n    const [messageErorr, setMessageError] = useState<string>(\"\");\r\n\r\n    const [selectedLectures, setSelectedLectures] = useState<LectureModel[]>([]);\r\n    const [departments, setDepartments] = useState<DepartmentModel[]>([]);\r\n    const [selectedDepartment, setSelectedDepartment] = useState<DepartmentModel>();\r\n    const [rerenderTableFlag, setrerenderTableFlag] = useState<boolean>(false);\r\n    const userFormFunc = useRef<any>(null)\r\n   \r\n    useEffect(() => {\r\n        lectureService.getAllDepartments().then(x => setDepartments(x));\r\n        let _profile = ProfileService.getProfile();\r\n        if(_profile){\r\n            if(_profile.RoleID != 1){\r\n                if(_profile.RoleID == 2){\r\n                    \r\n                }\r\n                else if(_profile.RoleID == 3){\r\n                    //let _student = studenteService.getStudentById(_profile.UserID);\r\n                }\r\n                //setSelectedDepartment(departments.filter(x => x._id == _profile.))\r\n            }\r\n        }\r\n    },[]);\r\n    const handleAlertClose = (event?: React.SyntheticEvent | Event, reason?: string) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setopenSuccessAlert(false);\r\n        setopenErrorAlert(false);\r\n    };\r\n    const rerenderLectureTable = () => {\r\n        setrerenderTableFlag(true);\r\n    }\r\n\r\n    const [checked, setChecked] = useState<readonly number[]>([]);\r\n  const [left, setLeft] = useState<readonly number[]>([0, 1, 2, 3]);\r\n  const [right, setRight] = useState<readonly number[]>([4, 5, 6, 7]);\r\n\r\n  const leftChecked = intersection(checked, left);\r\n  const rightChecked = intersection(checked, right);\r\n\r\n  const handleToggle = (value: number) => () => {\r\n    const currentIndex = checked.indexOf(value);\r\n    const newChecked = [...checked];\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n\r\n    setChecked(newChecked);\r\n  };\r\n\r\n  const numberOfChecked = (items: readonly number[]) =>\r\n    intersection(checked, items).length;\r\n\r\n  const handleToggleAll = (items: readonly number[]) => () => {\r\n    if (numberOfChecked(items) === items.length) {\r\n      setChecked(not(checked, items));\r\n    } else {\r\n      setChecked(union(checked, items));\r\n    }\r\n  };\r\n\r\n  const handleCheckedRight = () => {\r\n    setRight(right.concat(leftChecked));\r\n    setLeft(not(left, leftChecked));\r\n    setChecked(not(checked, leftChecked));\r\n  };\r\n\r\n  const handleCheckedLeft = () => {\r\n    setLeft(left.concat(rightChecked));\r\n    setRight(not(right, rightChecked));\r\n    setChecked(not(checked, rightChecked));\r\n  };\r\n\r\n  const handleClickSave = () => {\r\n  \r\n  };\r\n\r\n  const customList = (title: React.ReactNode, items: readonly number[]) => (\r\n    <Card>\r\n      <CardHeader\r\n        sx={{ px: 2, py: 1 }}\r\n        avatar={\r\n          <Checkbox\r\n            onClick={handleToggleAll(items)}\r\n            checked={numberOfChecked(items) === items.length && items.length !== 0}\r\n            indeterminate={\r\n              numberOfChecked(items) !== items.length && numberOfChecked(items) !== 0\r\n            }\r\n            disabled={items.length === 0}\r\n            inputProps={{\r\n              'aria-label': 'all items selected',\r\n            }}\r\n          />\r\n        }\r\n        title={title}\r\n        subheader={`${numberOfChecked(items)}/${items.length} selected`}\r\n      />\r\n      <Divider />\r\n      <List\r\n        sx={{\r\n         \r\n          height: 330,\r\n          bgcolor: 'background.paper',\r\n          overflow: 'auto',\r\n        }}\r\n        dense\r\n        component=\"div\"\r\n        role=\"list\"\r\n      >\r\n        {items.map((value: number) => {\r\n          const labelId = `transfer-list-all-item-${value}-label`;\r\n\r\n          return (\r\n            <ListItem\r\n              key={value}\r\n              role=\"listitem\"\r\n              button\r\n              onClick={handleToggle(value)}\r\n            >\r\n              <ListItemIcon>\r\n                <Checkbox\r\n                  checked={checked.indexOf(value) !== -1}\r\n                  tabIndex={-1}\r\n                  disableRipple\r\n                  inputProps={{\r\n                    'aria-labelledby': labelId,\r\n                  }}\r\n                />\r\n              </ListItemIcon>\r\n              <ListItemText id={labelId} primary={`List item ${value + 1}`} />\r\n            </ListItem>\r\n          );\r\n        })}\r\n        <ListItem />\r\n      </List>\r\n    </Card>\r\n  );\r\n    return (\r\n        <>\r\n         <Snackbar open={openSuccessAlert} autoHideDuration={5000} onClose={handleAlertClose}>\r\n                <Alert onClose={handleAlertClose} variant=\"filled\" severity=\"success\" sx={{ width: '100%' }}>\r\n                    {messageSuccess}\r\n                </Alert>\r\n            </Snackbar>\r\n\r\n            <Snackbar open={openErrorAlert} autoHideDuration={5000} onClose={handleAlertClose}>\r\n                <Alert onClose={handleAlertClose} variant=\"filled\" severity=\"success\" sx={{ width: '100%' }}>\r\n                    {messageSuccess}\r\n                </Alert>\r\n            </Snackbar>\r\n            <Card sx={{m:3}}>\r\n            <CardHeader title=\"Lecture Selection\" />\r\n                <CardContent>\r\n                <Container maxWidth=\"lg\">\r\n                <Grid container direction=\"row\" justifyContent=\"center\" alignItems=\"stretch\" spacing={3}>\r\n                    <Grid item xs={6}>\r\n                        <Autocomplete\r\n                            onChange={(event, newValue) => {\r\n                                setSelectedDepartment(newValue!);\r\n                            }}\r\n                            value={selectedDepartment} disablePortal style={{ width: '94%' }}\r\n                            id=\"drpDepartments\" options={departments} getOptionLabel={departments => departments.departmentName}\r\n                            renderInput={(params) => <TextField style={{ width: '100%' }} {...params} label=\"Department\" />}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={6} sx={{textAlign:\"right\"}}>\r\n                        <Button type=\"button\" onClick={() => handleClickSave()} sx={{ margin: 1 }} variant=\"contained\" color=\"secondary\"> Reset </Button>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                    <Grid container spacing={2} justifyContent=\"center\" alignItems=\"center\">\r\n                        <Grid item xs={5.6}>{customList('Lecture Choices', left)}</Grid>\r\n                            <Grid item>\r\n                            <Grid container direction=\"column\" alignItems=\"center\">\r\n                            <Button\r\n                                sx={{ my: 0.5 }}\r\n                                variant=\"outlined\"\r\n                                size=\"small\"\r\n                                onClick={handleCheckedRight}\r\n                                disabled={leftChecked.length === 0}\r\n                                aria-label=\"move selected right\"\r\n                            >\r\n                                &gt;\r\n                            </Button>\r\n                            <Button\r\n                                sx={{ my: 0.5 }}\r\n                                variant=\"outlined\"\r\n                                size=\"small\"\r\n                                onClick={handleCheckedLeft}\r\n                                disabled={rightChecked.length === 0}\r\n                                aria-label=\"move selected left\"\r\n                            >\r\n                                &lt;\r\n                            </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item  xs={5.5}>{customList('Chosen Lectures', right)}</Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n                </CardContent>\r\n            </Card>\r\n           \r\n        </>\r\n    );\r\n}\r\n\r\nexport default Lecture;\r\n"]},"metadata":{},"sourceType":"module"}