{"ast":null,"code":"var _jsxFileName = \"E:\\\\Projects\\\\LFMS\\\\LFMS.WebUI\\\\src\\\\content\\\\pages\\\\Components\\\\RoleAccess\\\\RoleAccessTable.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { alpha } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport Paper from '@mui/material/Paper';\nimport Checkbox from '@mui/material/Checkbox';\nimport IconButton from '@mui/material/IconButton';\nimport Tooltip from '@mui/material/Tooltip';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Switch from '@mui/material/Switch';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { Get } from \"../../../../services/common.service\";\nimport { Autocomplete, Button, Card, CardContent, CardHeader, Divider, Grid, TextField } from '@mui/material';\nimport { useForm } from 'react-hook-form';\nimport { dropdowns } from '../../../../services/dropdowns.service';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc' ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\n} // This method is created for cross-browser compatibility, if you don't\n// need to support IE11, you can use Array.prototype.sort() directly\n\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n\n    if (order !== 0) {\n      return order;\n    }\n\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nfunction EnhancedTableHead(props) {\n  const {\n    headCells,\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort\n  } = props;\n\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return /*#__PURE__*/_jsxDEV(TableHead, {\n    children: /*#__PURE__*/_jsxDEV(TableRow, {\n      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n        padding: \"checkbox\",\n        children: \"Interface\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        padding: \"checkbox\",\n        children: /*#__PURE__*/_jsxDEV(Checkbox, {\n          color: \"primary\",\n          indeterminate: numSelected > 0 && numSelected < rowCount,\n          checked: rowCount > 0 && numSelected === rowCount,\n          onChange: onSelectAllClick,\n          inputProps: {\n            'aria-label': 'select all Add'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        padding: \"checkbox\",\n        children: /*#__PURE__*/_jsxDEV(Checkbox, {\n          color: \"primary\",\n          indeterminate: numSelected > 0 && numSelected < rowCount,\n          checked: rowCount > 0 && numSelected === rowCount,\n          onChange: onSelectAllClick,\n          inputProps: {\n            'aria-label': 'select all desserts'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        padding: \"checkbox\",\n        children: /*#__PURE__*/_jsxDEV(Checkbox, {\n          color: \"primary\",\n          indeterminate: numSelected > 0 && numSelected < rowCount,\n          checked: rowCount > 0 && numSelected === rowCount,\n          onChange: onSelectAllClick,\n          inputProps: {\n            'aria-label': 'select all desserts'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        padding: \"checkbox\",\n        children: /*#__PURE__*/_jsxDEV(Checkbox, {\n          color: \"primary\",\n          indeterminate: numSelected > 0 && numSelected < rowCount,\n          checked: rowCount > 0 && numSelected === rowCount,\n          onChange: onSelectAllClick,\n          inputProps: {\n            'aria-label': 'select all desserts'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        padding: \"checkbox\",\n        children: /*#__PURE__*/_jsxDEV(Checkbox, {\n          color: \"primary\",\n          indeterminate: numSelected > 0 && numSelected < rowCount,\n          checked: rowCount > 0 && numSelected === rowCount,\n          onChange: onSelectAllClick,\n          inputProps: {\n            'aria-label': 'select all desserts'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n}\n\n_c = EnhancedTableHead;\n\nconst EnhancedTableToolbar = props => {\n  const {\n    numSelected\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Toolbar, {\n    sx: {\n      pl: {\n        sm: 2\n      },\n      pr: {\n        xs: 1,\n        sm: 1\n      },\n      ...(numSelected > 0 && {\n        bgcolor: theme => alpha(theme.palette.primary.main, theme.palette.action.activatedOpacity)\n      })\n    },\n    children: [numSelected > 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n      sx: {\n        flex: '1 1 100%'\n      },\n      color: \"inherit\",\n      variant: \"subtitle1\",\n      component: \"div\",\n      children: [numSelected, \" selected\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n      sx: {\n        flex: '1 1 100%'\n      },\n      variant: \"h6\",\n      id: \"tableTitle\",\n      component: \"div\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 17\n    }, this), numSelected > 0 ? /*#__PURE__*/_jsxDEV(Tooltip, {\n      title: \"Delete\",\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 18\n    }, this) //<Tooltip title=\"Filter list\">\n    //    <IconButton>\n    //        <FilterListIcon />\n    //    </IconButton>\n    //</Tooltip>\n    ]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = EnhancedTableToolbar;\n\nconst RoleAccessTable = _ref => {\n  _s();\n\n  let {\n    columns\n  } = _ref;\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('');\n  const [selectedAdd, setSelectedAdd] = React.useState([]);\n  const [selectedEdit, setSelectedEdit] = React.useState([]);\n  const [selectedDelete, setSelectedDelete] = React.useState([]);\n  const [selectedView, setSelectedView] = React.useState([]);\n  const [selectedReport, setSelectedReport] = React.useState([]);\n  const [selectedAllAdd, setSelectedAllAdd] = React.useState(false);\n  const [selectedAllEdit, setSelectedAllEdit] = React.useState(false);\n  const [selectedAllDelete, setSelectedAllDelete] = React.useState(false);\n  const [selectedAllView, setSelectedAllView] = React.useState(false);\n  const [selectedAllReport, setSelectedAllReport] = React.useState(false);\n  const [showRoleAccessTable, setShowRoleAccessTable] = React.useState(false);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const [rows, setRows] = React.useState([]);\n  const [rowCount, setRowCount] = React.useState(0);\n  const [roles, setRoles] = React.useState([]);\n  const [selectedRole, setSelectedRole] = React.useState({\n    RoleName: ''\n  });\n  const [totalRecords, setTotalRecords] = React.useState(0);\n  const [filter, setFilter] = React.useState();\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: {\n      errors\n    }\n  } = useForm({});\n  React.useEffect(() => {\n    dropdowns.getAllRoles().then(x => {\n      setRoles(x); //getFilteredData();\n    });\n  }, []);\n  React.useEffect(() => {\n    getFilteredData();\n  }, [selectedRole]);\n\n  const getFilteredData = () => {\n    //let _filter = undefined;\n    //if (isSearchAble == true) {\n    //    _filter = filter;\n    //}\n    //let _requestParamters: DataTableRequest = {\n    //    filter: {},\n    //    length: rowsPerPage,\n    //    start: page * rowsPerPage,\n    //    order: { orderBy: orderBy, orderDirection: order }\n    //};\n    if (selectedRole) {\n      if (selectedRole.RoleID) {\n        setShowRoleAccessTable(true);\n        Get('Security/GetRoleAccess?roleID=' + selectedRole.RoleID).then(response => {\n          if (response.status == 200) {\n            setRows(response.data.roleAccess);\n            setTotalRecords(response.data.recordsTotal);\n          }\n        }, error => {\n          const resMessage = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n        });\n      } else {\n        setShowRoleAccessTable(false);\n      }\n    } else {\n      setShowRoleAccessTable(false);\n    }\n  };\n\n  const resetSearchForm = () => {\n    const formFields = {};\n    columns.map(x => {\n      if (x.numeric) {\n        formFields[x.id] = 0;\n      } else {\n        formFields[x.id] = '';\n      }\n    });\n    reset(formFields);\n    setFilter(formFields);\n  };\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n    getFilteredData();\n  };\n\n  const handleSelectAllByEvent = event => {\n    if (event.target.checked && event.target.id == 'chkAdd') {\n      const newSelectedAdds = rows.map(n => n['Add']);\n      setSelectedAdd(newSelectedAdds);\n      return;\n    } else if (event.target.checked && event.target.id == 'chkEdit') {\n      const newSelectedEdits = rows.map(n => n['Edit']);\n      setSelectedAdd(newSelectedEdits);\n      return;\n    } else if (event.target.checked && event.target.id == 'chkDelete') {\n      const newSelectedDeletes = rows.map(n => n['Delete']);\n      setSelectedAdd(newSelectedDeletes);\n      return;\n    } else if (event.target.checked && event.target.id == 'chkView') {\n      const newSelectedViews = rows.map(n => n['View']);\n      setSelectedAdd(newSelectedViews);\n      return;\n    } else if (event.target.checked && event.target.id == 'chkReport') {\n      const newSelectedReports = rows.map(n => n['Report']);\n      setSelectedAdd(newSelectedReports);\n      return;\n    }\n  };\n\n  const handleClick = (event, name) => {//const selectedIndex = selected.indexOf(name);\n    //let newSelected: readonly string[] = [];\n    //if (selectedIndex === -1) {\n    //    newSelected = newSelected.concat(selected, name);\n    //} else if (selectedIndex === 0) {\n    //    newSelected = newSelected.concat(selected.slice(1));\n    //} else if (selectedIndex === selected.length - 1) {\n    //    newSelected = newSelected.concat(selected.slice(0, -1));\n    //} else if (selectedIndex > 0) {\n    //    newSelected = newSelected.concat(\n    //        selected.slice(0, selectedIndex),\n    //        selected.slice(selectedIndex + 1),\n    //    );\n    //}\n    //setSelected(newSelected);\n  }; //const handleChangePage = (event: unknown, newPage: number) => {\n  //    setPage(newPage);\n  //    //getFilteredData();\n  //};\n  //const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n  //    setRowsPerPage(parseInt(event.target.value, 10));\n  //    setPage(0);\n  //    //getFilteredData();\n  //};\n\n\n  const handleChangeDense = event => {\n    setDense(event.target.checked);\n  };\n\n  const onSubmit = data => {\n    if (data != undefined) {\n      columns.map((column, index) => {\n        if (column.numeric == true) {\n          if (data[column.id] == undefined || data[column.id] == null || data[column.id] == '') {\n            data[column.id] = 0;\n          } else data[column.id] = parseInt(data[column.id]);\n        }\n      });\n    }\n\n    setFilter(data); //getFilteredData();\n  };\n\n  const handleCheckboxClick = (interfaceID, eventName) => {\n    for (var i = 0; i < rows.length; i++) {\n      if (rows[i].InterfaceID == interfaceID) {\n        if (eventName == 'AllowAdd') {\n          rows[i].AllowAdd = !rows[i].AllowAdd;\n        } else if (eventName == 'AllowEdit') {\n          rows[i].AllowEdit = !rows[i].AllowEdit;\n        } else if (eventName == 'AllowView') {\n          rows[i].AllowView = !rows[i].AllowView;\n        } else if (eventName == 'AllowDelete') {\n          rows[i].AllowDelete = !rows[i].AllowDelete;\n        } else if (eventName == 'AllowReport') {\n          rows[i].AllowReport = !rows[i].AllowReport;\n        }\n      }\n    }\n\n    setRows(rows);\n  };\n\n  const handleSave = () => {\n    if (selectedRole) {\n      if (selectedRole.RoleID) {\n        getFilteredData();\n      } else {\n        alert(\"Please select a role!\");\n      }\n    } else {\n      alert(\"Please select a role!\");\n    }\n  }; //const isSelected = (name: any) => selected.indexOf(name) !== -1;\n  //const editHandlerr = (name: any) => {\n  //    editHandler(name);\n  //};\n  // Avoid a layout jump when reaching the last page with empty rows.\n\n\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        title: \"Role Access Management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"row\",\n          justifyContent: \"center\",\n          alignItems: \"stretch\",\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n              onChange: (event, newValue) => {\n                setSelectedRole(newValue);\n              },\n              value: selectedRole,\n              disablePortal: true,\n              id: \"drpRole\",\n              options: roles,\n              getOptionLabel: role => role.RoleName,\n              renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                label: \"Role\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 443,\n                columnNumber: 58\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 439,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              sx: {\n                margin: 1\n              },\n              variant: \"contained\",\n              color: \"primary\",\n              onClick: handleSave,\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        width: '100%',\n        mb: 2\n      },\n      hidden: showRoleAccessTable == false,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: /*#__PURE__*/_jsxDEV(TableContainer, {\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              sx: {\n                minWidth: 750\n              },\n              \"aria-labelledby\": \"tableTitle\",\n              size: dense ? 'small' : 'medium',\n              children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                children: /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    padding: \"checkbox\",\n                    children: \"Interface\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 465,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    padding: \"checkbox\",\n                    children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                      id: \"chkAdd\",\n                      color: \"primary\",\n                      indeterminate: selectedAdd.length > 0 && selectedAdd.length < rowCount,\n                      checked: rowCount > 0 && selectedAdd.length === rowCount,\n                      onChange: handleSelectAllByEvent,\n                      inputProps: {\n                        'aria-label': 'select all Add'\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 469,\n                      columnNumber: 45\n                    }, this), \"Allow Add\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 468,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    padding: \"checkbox\",\n                    children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                      id: \"chkEdit\",\n                      color: \"primary\",\n                      indeterminate: selectedEdit.length > 0 && selectedEdit.length < rowCount,\n                      checked: rowCount > 0 && selectedEdit.length === rowCount,\n                      onChange: handleSelectAllByEvent,\n                      inputProps: {\n                        'aria-label': 'select all Edit'\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 479,\n                      columnNumber: 45\n                    }, this), \"Allow Edit\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 478,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    padding: \"checkbox\",\n                    children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                      id: \"chkDelete\",\n                      color: \"primary\",\n                      indeterminate: selectedDelete.length > 0 && selectedDelete.length < rowCount,\n                      checked: rowCount > 0 && selectedDelete.length === rowCount,\n                      onChange: handleSelectAllByEvent,\n                      inputProps: {\n                        'aria-label': 'select all Delete'\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 489,\n                      columnNumber: 45\n                    }, this), \"Allow View\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 488,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    padding: \"checkbox\",\n                    children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                      id: \"chkView\",\n                      color: \"primary\",\n                      indeterminate: selectedView.length > 0 && selectedView.length < rowCount,\n                      checked: rowCount > 0 && selectedView.length === rowCount,\n                      onChange: handleSelectAllByEvent,\n                      inputProps: {\n                        'aria-label': 'select all View'\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 499,\n                      columnNumber: 45\n                    }, this), \"Allow Delete\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 498,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    padding: \"checkbox\",\n                    children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                      id: \"chkReport\",\n                      color: \"primary\",\n                      indeterminate: selectedReport.length > 0 && selectedReport.length < rowCount,\n                      checked: rowCount > 0 && selectedReport.length === rowCount,\n                      onChange: handleSelectAllByEvent,\n                      inputProps: {\n                        'aria-label': 'select all Report'\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 509,\n                      columnNumber: 45\n                    }, this), \"Allow Report\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 508,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 464,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 463,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                children: [//stableSort(rows, getComparator(order, orderBy))\n                //.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                rows.map((row, index) => {\n                  //const isItemSelected = isSelected(row[columns[0].id]);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n                  return (\n                    /*#__PURE__*/\n\n                    /* <TableRow hover onClick={(event) => handleClick(event, row[columns[0].id])} role=\"checkbox\" aria-checked={isItemSelected}  tabIndex={-1} key={row[0]} selected={isItemSelected}> */\n                    _jsxDEV(TableRow, {\n                      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                        padding: \"checkbox\",\n                        children: row.InterfaceName\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 534,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        padding: \"checkbox\",\n                        children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                          color: \"primary\",\n                          inputProps: {\n                            'aria-labelledby': labelId\n                          },\n                          onChange: () => handleCheckboxClick(row.InterfaceID, 'AllowAdd')\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 538,\n                          columnNumber: 57\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 537,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        padding: \"checkbox\",\n                        children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                          color: \"primary\",\n                          inputProps: {\n                            'aria-labelledby': labelId\n                          },\n                          onChange: () => handleCheckboxClick(row.InterfaceID, 'AllowEdit')\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 543,\n                          columnNumber: 57\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 542,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        padding: \"checkbox\",\n                        children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                          color: \"primary\",\n                          inputProps: {\n                            'aria-labelledby': labelId\n                          },\n                          onChange: () => handleCheckboxClick(row.InterfaceID, 'AllowDelete')\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 548,\n                          columnNumber: 57\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 547,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        padding: \"checkbox\",\n                        children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                          color: \"primary\",\n                          inputProps: {\n                            'aria-labelledby': labelId\n                          },\n                          onChange: () => handleCheckboxClick(row.InterfaceID, 'AllowView')\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 553,\n                          columnNumber: 57\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 552,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        padding: \"checkbox\",\n                        children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                          color: \"primary\",\n                          inputProps: {\n                            'aria-labelledby': labelId\n                          },\n                          onChange: () => handleCheckboxClick(row.InterfaceID, 'AllowReport')\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 558,\n                          columnNumber: 57\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 557,\n                        columnNumber: 53\n                      }, this)]\n                    }, row.InterfaceID, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 533,\n                      columnNumber: 49\n                    }, this)\n                  );\n                }), emptyRows > 0 && /*#__PURE__*/_jsxDEV(TableRow, {\n                  style: {\n                    height: (dense ? 33 : 53) * emptyRows\n                  },\n                  children: /*#__PURE__*/_jsxDEV(TableCell, {\n                    colSpan: 6\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 571,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 566,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 520,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 458,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(Switch, {\n        checked: dense,\n        onChange: handleChangeDense\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 592,\n        columnNumber: 26\n      }, this),\n      label: \"Dense padding\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 591,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 433,\n    columnNumber: 9\n  }, this);\n}; //DataTable.propTypes = {\n//    columns: PropTypes.array.isRequired\n//};\n//DataTable.defaultProps = {\n//    columns: []\n//};\n\n\n_s(RoleAccessTable, \"48nPyqnJt5j1342tVyuPZHV46Kw=\", false, function () {\n  return [useForm];\n});\n\n_c3 = RoleAccessTable;\nexport default RoleAccessTable;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"EnhancedTableHead\");\n$RefreshReg$(_c2, \"EnhancedTableToolbar\");\n$RefreshReg$(_c3, \"RoleAccessTable\");","map":{"version":3,"sources":["E:/Projects/LFMS/LFMS.WebUI/src/content/pages/Components/RoleAccess/RoleAccessTable.tsx"],"names":["React","alpha","Box","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Toolbar","Typography","Paper","Checkbox","IconButton","Tooltip","FormControlLabel","Switch","DeleteIcon","Get","Autocomplete","Button","Card","CardContent","CardHeader","Divider","Grid","TextField","useForm","dropdowns","descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","map","el","index","sort","EnhancedTableHead","props","headCells","onSelectAllClick","numSelected","rowCount","onRequestSort","createSortHandler","property","event","EnhancedTableToolbar","pl","sm","pr","xs","bgcolor","theme","palette","primary","main","action","activatedOpacity","flex","RoleAccessTable","columns","setOrder","useState","setOrderBy","selectedAdd","setSelectedAdd","selectedEdit","setSelectedEdit","selectedDelete","setSelectedDelete","selectedView","setSelectedView","selectedReport","setSelectedReport","selectedAllAdd","setSelectedAllAdd","selectedAllEdit","setSelectedAllEdit","selectedAllDelete","setSelectedAllDelete","selectedAllView","setSelectedAllView","selectedAllReport","setSelectedAllReport","showRoleAccessTable","setShowRoleAccessTable","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","rows","setRows","setRowCount","roles","setRoles","selectedRole","setSelectedRole","RoleName","totalRecords","setTotalRecords","filter","setFilter","register","handleSubmit","reset","formState","errors","useEffect","getAllRoles","then","x","getFilteredData","RoleID","response","status","data","roleAccess","recordsTotal","error","resMessage","message","toString","resetSearchForm","formFields","numeric","id","handleRequestSort","isAsc","handleSelectAllByEvent","target","checked","newSelectedAdds","n","newSelectedEdits","newSelectedDeletes","newSelectedViews","newSelectedReports","handleClick","name","handleChangeDense","onSubmit","undefined","column","parseInt","handleCheckboxClick","interfaceID","eventName","i","length","InterfaceID","AllowAdd","AllowEdit","AllowView","AllowDelete","AllowReport","handleSave","alert","emptyRows","Math","max","width","newValue","role","params","margin","mb","minWidth","row","labelId","InterfaceName","height"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { alpha } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableSortLabel from '@mui/material/TableSortLabel';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Paper from '@mui/material/Paper';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Switch from '@mui/material/Switch';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport { Column, DataTableRequest, DataTableResponse } from '../../../../models/table.type';\r\nimport { Post, Get } from \"../../../../services/common.service\";\r\nimport { InterfaceModel, LocationModel, RoleModel } from \"../../../../types/security.type\";\r\nimport { Autocomplete, Avatar, Button, Card, CardContent, CardHeader, Container, Divider, Grid, Hidden, makeStyles, Stack, TextField } from '@mui/material';\r\nimport { useForm } from 'react-hook-form';\r\nimport { dropdowns } from '../../../../services/dropdowns.service';\r\n\r\nfunction descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n        return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\ntype Order = 'asc' | 'desc';\r\n\r\nfunction getComparator<Key extends keyof any>(\r\n    order: Order,\r\n    orderBy: Key,\r\n): (\r\n        a: { [key in Key]: number | string },\r\n        b: { [key in Key]: number | string },\r\n    ) => number {\r\n    return order === 'desc'\r\n        ? (a, b) => descendingComparator(a, b, orderBy)\r\n        : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\n// This method is created for cross-browser compatibility, if you don't\r\n// need to support IE11, you can use Array.prototype.sort() directly\r\nfunction stableSort<T>(array: readonly T[], comparator: (a: T, b: T) => number) {\r\n    const stabilizedThis = array.map((el, index) => [el, index] as [T, number]);\r\n    stabilizedThis.sort((a, b) => {\r\n        const order = comparator(a[0], b[0]);\r\n        if (order !== 0) {\r\n            return order;\r\n        }\r\n        return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\ninterface EnhancedTableProps {\r\n    headCells: Column[];\r\n    numSelected: number;\r\n    onRequestSort: (event: React.MouseEvent<unknown>, property: string) => void;\r\n    onSelectAllClick: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n    order: Order;\r\n    orderBy: string;\r\n    rowCount: number;\r\n}\r\n\r\nfunction EnhancedTableHead(props: EnhancedTableProps) {\r\n    const { headCells, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } =\r\n        props;\r\n    const createSortHandler =\r\n        (property: string) => (event: React.MouseEvent<unknown>) => {\r\n            onRequestSort(event, property);\r\n        };\r\n\r\n    return (\r\n        <TableHead>\r\n            <TableRow>\r\n                <TableCell padding=\"checkbox\">\r\n                    Interface\r\n                </TableCell>\r\n                <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                        color=\"primary\" indeterminate={numSelected > 0 && numSelected < rowCount}\r\n                        checked={rowCount > 0 && numSelected === rowCount}\r\n                        onChange={onSelectAllClick}\r\n                        inputProps={{\r\n                            'aria-label': 'select all Add',\r\n                        }}\r\n                    />\r\n                </TableCell>\r\n                <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                        color=\"primary\"\r\n                        indeterminate={numSelected > 0 && numSelected < rowCount}\r\n                        checked={rowCount > 0 && numSelected === rowCount}\r\n                        onChange={onSelectAllClick}\r\n                        inputProps={{\r\n                            'aria-label': 'select all desserts',\r\n                        }}\r\n                    />\r\n                </TableCell>\r\n                <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                        color=\"primary\"\r\n                        indeterminate={numSelected > 0 && numSelected < rowCount}\r\n                        checked={rowCount > 0 && numSelected === rowCount}\r\n                        onChange={onSelectAllClick}\r\n                        inputProps={{\r\n                            'aria-label': 'select all desserts',\r\n                        }}\r\n                    />\r\n                </TableCell>\r\n                <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                        color=\"primary\"\r\n                        indeterminate={numSelected > 0 && numSelected < rowCount}\r\n                        checked={rowCount > 0 && numSelected === rowCount}\r\n                        onChange={onSelectAllClick}\r\n                        inputProps={{\r\n                            'aria-label': 'select all desserts',\r\n                        }}\r\n                    />\r\n                </TableCell>\r\n                <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                        color=\"primary\"\r\n                        indeterminate={numSelected > 0 && numSelected < rowCount}\r\n                        checked={rowCount > 0 && numSelected === rowCount}\r\n                        onChange={onSelectAllClick}\r\n                        inputProps={{\r\n                            'aria-label': 'select all desserts',\r\n                        }}\r\n                    />\r\n                </TableCell>\r\n            </TableRow>\r\n        </TableHead>\r\n    );\r\n}\r\n\r\ninterface EnhancedTableToolbarProps {\r\n    numSelected: number;\r\n\r\n}\r\n\r\nconst EnhancedTableToolbar = (props: EnhancedTableToolbarProps) => {\r\n    const { numSelected } = props;\r\n\r\n    return (\r\n        <Toolbar\r\n            sx={{\r\n                pl: { sm: 2 },\r\n                pr: { xs: 1, sm: 1 },\r\n                ...(numSelected > 0 && {\r\n                    bgcolor: (theme) =>\r\n                        alpha(theme.palette.primary.main, theme.palette.action.activatedOpacity),\r\n                }),\r\n            }}\r\n        >\r\n            {numSelected > 0 ? (\r\n                <Typography\r\n                    sx={{ flex: '1 1 100%' }}\r\n                    color=\"inherit\"\r\n                    variant=\"subtitle1\"\r\n                    component=\"div\"\r\n                >\r\n                    {numSelected} selected\r\n                </Typography>\r\n            ) : (\r\n                <Typography\r\n                    sx={{ flex: '1 1 100%' }}\r\n                    variant=\"h6\"\r\n                    id=\"tableTitle\"\r\n                    component=\"div\"\r\n                >\r\n                    {/*Nutrition*/}\r\n                </Typography>\r\n            )}\r\n            {numSelected > 0 ? (\r\n                <Tooltip title=\"Delete\">\r\n                    <IconButton>\r\n                        <DeleteIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n            ) : (<span></span>\r\n                //<Tooltip title=\"Filter list\">\r\n                //    <IconButton>\r\n                //        <FilterListIcon />\r\n                //    </IconButton>\r\n                //</Tooltip>\r\n            )}\r\n        </Toolbar>\r\n    );\r\n};\r\n\r\nconst RoleAccessTable: React.FC<any> = ({ columns, }) => {\r\n\r\n    const [order, setOrder] = React.useState<Order>('asc');\r\n    const [orderBy, setOrderBy] = React.useState<string>('');\r\n    const [selectedAdd, setSelectedAdd] = React.useState<readonly string[]>([]);\r\n    const [selectedEdit, setSelectedEdit] = React.useState<readonly string[]>([]);\r\n    const [selectedDelete, setSelectedDelete] = React.useState<readonly string[]>([]);\r\n    const [selectedView, setSelectedView] = React.useState<readonly string[]>([]);\r\n    const [selectedReport, setSelectedReport] = React.useState<readonly string[]>([]);\r\n    const [selectedAllAdd, setSelectedAllAdd] = React.useState<boolean>(false);\r\n    const [selectedAllEdit, setSelectedAllEdit] = React.useState<boolean>(false);\r\n    const [selectedAllDelete, setSelectedAllDelete] = React.useState<boolean>(false);\r\n    const [selectedAllView, setSelectedAllView] = React.useState<boolean>(false);\r\n    const [selectedAllReport, setSelectedAllReport] = React.useState<boolean>(false);\r\n    const [showRoleAccessTable, setShowRoleAccessTable] = React.useState<boolean>(false);\r\n    \r\n    const [page, setPage] = React.useState(0);\r\n    const [dense, setDense] = React.useState(false);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n    const [rows, setRows] = React.useState<InterfaceModel[]>([]);\r\n    const [rowCount, setRowCount] = React.useState<number>(0);\r\n    const [roles, setRoles] = React.useState<RoleModel[]>([]);\r\n    const [selectedRole, setSelectedRole] = React.useState<RoleModel>({RoleName: ''});\r\n    const [totalRecords, setTotalRecords] = React.useState<number>(0);\r\n    const [filter, setFilter] = React.useState<any>();\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        reset,\r\n        formState: { errors }\r\n    } = useForm<any>({\r\n    });\r\n    React.useEffect(() => {\r\n        dropdowns.getAllRoles().then(x => {\r\n            setRoles(x);\r\n            //getFilteredData();\r\n        })\r\n    }, []);\r\n    React.useEffect(() => {\r\n            getFilteredData();\r\n    }, [selectedRole]);\r\n    const getFilteredData = () => {\r\n        //let _filter = undefined;\r\n        //if (isSearchAble == true) {\r\n        //    _filter = filter;\r\n        //}\r\n        //let _requestParamters: DataTableRequest = {\r\n        //    filter: {},\r\n        //    length: rowsPerPage,\r\n        //    start: page * rowsPerPage,\r\n        //    order: { orderBy: orderBy, orderDirection: order }\r\n        //};\r\n        if (selectedRole) {\r\n            if (selectedRole.RoleID) {\r\n                setShowRoleAccessTable(true);\r\n                Get('Security/GetRoleAccess?roleID=' + selectedRole!.RoleID).then((response: any) => {\r\n                    if (response.status == 200) {\r\n                        setRows(response.data.roleAccess);\r\n                        setTotalRecords(response.data.recordsTotal);\r\n                    }\r\n                },\r\n                    (error: any) => {\r\n                        const resMessage =\r\n                            (error.response &&\r\n                                error.response.data &&\r\n                                error.response.data.message) ||\r\n                            error.message ||\r\n                            error.toString();\r\n                    }\r\n                );\r\n            }\r\n            else {\r\n                setShowRoleAccessTable(false);\r\n            }\r\n        }\r\n        else {\r\n            setShowRoleAccessTable(false);\r\n        }\r\n    };\r\n    const resetSearchForm = () => {\r\n        const formFields = {};\r\n        columns.map(x => {\r\n            if (x.numeric) {\r\n                formFields[x.id] = 0;\r\n            }\r\n            else {\r\n                formFields[x.id] = '';\r\n            }\r\n        });\r\n        reset(formFields);\r\n        setFilter(formFields);\r\n    }\r\n    const handleRequestSort = (\r\n        event: React.MouseEvent<unknown>,\r\n        property: string,\r\n    ) => {\r\n        const isAsc = orderBy === property && order === 'asc';\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(property);\r\n        getFilteredData();\r\n    };\r\n\r\n    const handleSelectAllByEvent = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        if (event.target.checked && event.target.id == 'chkAdd') {\r\n            const newSelectedAdds = rows.map((n) => n['Add']);\r\n            setSelectedAdd(newSelectedAdds);\r\n            return;\r\n        }\r\n        else if (event.target.checked && event.target.id == 'chkEdit') {\r\n            const newSelectedEdits = rows.map((n) => n['Edit']);\r\n            setSelectedAdd(newSelectedEdits);\r\n            return;\r\n        }\r\n        else if (event.target.checked && event.target.id == 'chkDelete') {\r\n            const newSelectedDeletes = rows.map((n) => n['Delete']);\r\n            setSelectedAdd(newSelectedDeletes);\r\n            return;\r\n        }\r\n        else if (event.target.checked && event.target.id == 'chkView') {\r\n            const newSelectedViews = rows.map((n) => n['View']);\r\n            setSelectedAdd(newSelectedViews);\r\n            return;\r\n        }\r\n        else if (event.target.checked && event.target.id == 'chkReport') {\r\n            const newSelectedReports = rows.map((n) => n['Report']);\r\n            setSelectedAdd(newSelectedReports);\r\n            return;\r\n        }\r\n        \r\n    };\r\n\r\n    const handleClick = (event: React.MouseEvent<unknown>, name: any) => {\r\n        //const selectedIndex = selected.indexOf(name);\r\n        //let newSelected: readonly string[] = [];\r\n\r\n        //if (selectedIndex === -1) {\r\n        //    newSelected = newSelected.concat(selected, name);\r\n        //} else if (selectedIndex === 0) {\r\n        //    newSelected = newSelected.concat(selected.slice(1));\r\n        //} else if (selectedIndex === selected.length - 1) {\r\n        //    newSelected = newSelected.concat(selected.slice(0, -1));\r\n        //} else if (selectedIndex > 0) {\r\n        //    newSelected = newSelected.concat(\r\n        //        selected.slice(0, selectedIndex),\r\n        //        selected.slice(selectedIndex + 1),\r\n        //    );\r\n        //}\r\n\r\n        //setSelected(newSelected);\r\n    };\r\n\r\n    //const handleChangePage = (event: unknown, newPage: number) => {\r\n    //    setPage(newPage);\r\n    //    //getFilteredData();\r\n    //};\r\n\r\n    //const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    //    setRowsPerPage(parseInt(event.target.value, 10));\r\n    //    setPage(0);\r\n    //    //getFilteredData();\r\n    //};\r\n\r\n    const handleChangeDense = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setDense(event.target.checked);\r\n    };\r\n\r\n    const onSubmit = (data: any) => {\r\n        if (data != undefined) {\r\n            columns.map((column, index) => {\r\n                if (column.numeric == true) {\r\n                    if (data[column.id] == undefined || data[column.id] == null || data[column.id] == '') {\r\n                        data[column.id] = 0;\r\n                    }\r\n                    else\r\n                        data[column.id] = parseInt(data[column.id]);\r\n                }\r\n            });\r\n        }\r\n        setFilter(data);\r\n        //getFilteredData();\r\n    };\r\n\r\n    const handleCheckboxClick = (interfaceID: number | undefined, eventName: string) => {\r\n        for (var i = 0; i < rows.length; i++) {\r\n            if (rows[i].InterfaceID == interfaceID) {\r\n                if (eventName == 'AllowAdd') {\r\n                    rows[i].AllowAdd = !rows[i].AllowAdd;\r\n                }\r\n                else if (eventName == 'AllowEdit') {\r\n                    rows[i].AllowEdit = !rows[i].AllowEdit;\r\n                }\r\n                else if (eventName == 'AllowView') {\r\n                    rows[i].AllowView = !rows[i].AllowView;\r\n                }\r\n                else if (eventName == 'AllowDelete') {\r\n                    rows[i].AllowDelete = !rows[i].AllowDelete;\r\n                }\r\n                else if (eventName == 'AllowReport') {\r\n                    rows[i].AllowReport = !rows[i].AllowReport;\r\n                }\r\n            }\r\n        }\r\n        setRows(rows);\r\n    }\r\n\r\n    const handleSave = () => {\r\n        if (selectedRole) {\r\n            if (selectedRole.RoleID) {\r\n                getFilteredData();\r\n            }\r\n            else {\r\n                alert(\"Please select a role!\");\r\n            }\r\n        }\r\n        else {\r\n            alert(\"Please select a role!\");\r\n        }\r\n    }\r\n\r\n    //const isSelected = (name: any) => selected.indexOf(name) !== -1;\r\n\r\n    //const editHandlerr = (name: any) => {\r\n    //    editHandler(name);\r\n    //};\r\n    // Avoid a layout jump when reaching the last page with empty rows.\r\n    const emptyRows =\r\n        page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\r\n\r\n    return (\r\n        <Box sx={{ width: '100%' }}>\r\n            <Card>\r\n                <CardHeader title=\"Role Access Management\" />\r\n                <CardContent>\r\n                    <Grid container direction=\"row\" justifyContent=\"center\" alignItems=\"stretch\" spacing={3}>\r\n                        <Grid item xs={6}>\r\n                            <Autocomplete onChange={(event, newValue) => {\r\n                                    setSelectedRole(newValue!);\r\n                            }}\r\n                            value={selectedRole} disablePortal id=\"drpRole\" options={roles} getOptionLabel={role => role.RoleName}\r\n                                renderInput={(params) => <TextField  {...params} label=\"Role\" />}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <Button sx={{ margin: 1 }} variant=\"contained\" color=\"primary\" onClick={handleSave}>Save</Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </CardContent>\r\n            </Card>\r\n           \r\n            <Divider />\r\n            <Paper sx={{ width: '100%', mb: 2 }} hidden={showRoleAccessTable == false}>\r\n                <Card>\r\n                    <CardContent>\r\n                        <TableContainer>\r\n                            <Table\r\n                                sx={{ minWidth: 750 }}\r\n                                aria-labelledby=\"tableTitle\"\r\n                                size={dense ? 'small' : 'medium'}\r\n                            >\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell padding=\"checkbox\">\r\n                                            Interface\r\n                                        </TableCell>\r\n                                        <TableCell padding=\"checkbox\">\r\n                                            <Checkbox id=\"chkAdd\"\r\n                                                color=\"primary\" indeterminate={selectedAdd.length > 0 && selectedAdd.length < rowCount}\r\n                                                checked={rowCount > 0 && selectedAdd.length === rowCount} onChange={handleSelectAllByEvent}\r\n                                                inputProps={{\r\n                                                    'aria-label': 'select all Add',\r\n                                                }}\r\n                                            />\r\n                                            Allow Add\r\n                                        </TableCell>\r\n                                        <TableCell padding=\"checkbox\">\r\n                                            <Checkbox id=\"chkEdit\"\r\n                                                color=\"primary\" indeterminate={selectedEdit.length > 0 && selectedEdit.length < rowCount}\r\n                                                checked={rowCount > 0 && selectedEdit.length === rowCount} onChange={handleSelectAllByEvent}\r\n                                                inputProps={{\r\n                                                    'aria-label': 'select all Edit',\r\n                                                }}\r\n                                            />\r\n                                            Allow Edit\r\n                                        </TableCell>\r\n                                        <TableCell padding=\"checkbox\">\r\n                                            <Checkbox id=\"chkDelete\"\r\n                                                color=\"primary\" indeterminate={selectedDelete.length > 0 && selectedDelete.length < rowCount}\r\n                                                checked={rowCount > 0 && selectedDelete.length === rowCount} onChange={handleSelectAllByEvent}\r\n                                                inputProps={{\r\n                                                    'aria-label': 'select all Delete',\r\n                                                }}\r\n                                            />\r\n                                            Allow View\r\n                                        </TableCell>\r\n                                        <TableCell padding=\"checkbox\">\r\n                                            <Checkbox id=\"chkView\"\r\n                                                color=\"primary\" indeterminate={selectedView.length > 0 && selectedView.length < rowCount}\r\n                                                checked={rowCount > 0 && selectedView.length === rowCount} onChange={handleSelectAllByEvent}\r\n                                                inputProps={{\r\n                                                    'aria-label': 'select all View',\r\n                                                }}\r\n                                            />\r\n                                            Allow Delete\r\n                                        </TableCell>\r\n                                        <TableCell padding=\"checkbox\">\r\n                                            <Checkbox id=\"chkReport\"\r\n                                                color=\"primary\" indeterminate={selectedReport.length > 0 && selectedReport.length < rowCount}\r\n                                                checked={rowCount > 0 && selectedReport.length === rowCount} onChange={handleSelectAllByEvent}\r\n                                                inputProps={{\r\n                                                    'aria-label': 'select all Report',\r\n                                                }}\r\n                                            />\r\n                                            Allow Report\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {/* if you don't need to support IE11, you can replace the `stableSort` call with:\r\n              rows.slice().sort(getComparator(order, orderBy)) */}\r\n                                    {\r\n                                        //stableSort(rows, getComparator(order, orderBy))\r\n                                        //.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                        rows.map((row, index) => {\r\n                                            //const isItemSelected = isSelected(row[columns[0].id]);\r\n                                            const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                                            return (\r\n                                                /* <TableRow hover onClick={(event) => handleClick(event, row[columns[0].id])} role=\"checkbox\" aria-checked={isItemSelected}  tabIndex={-1} key={row[0]} selected={isItemSelected}> */\r\n\r\n                                                <TableRow key={row.InterfaceID}>\r\n                                                    <TableCell padding=\"checkbox\">\r\n                                                        {row.InterfaceName}\r\n                                                    </TableCell>\r\n                                                    <TableCell padding=\"checkbox\">\r\n                                                        <Checkbox color=\"primary\"  inputProps={{\r\n                                                            'aria-labelledby': labelId,\r\n                                                        }} onChange={() => handleCheckboxClick(row.InterfaceID, 'AllowAdd')} />\r\n                                                    </TableCell>\r\n                                                    <TableCell padding=\"checkbox\">\r\n                                                        <Checkbox color=\"primary\" inputProps={{\r\n                                                            'aria-labelledby': labelId,\r\n                                                        }} onChange={() => handleCheckboxClick(row.InterfaceID, 'AllowEdit')} />\r\n                                                    </TableCell>\r\n                                                    <TableCell padding=\"checkbox\">\r\n                                                        <Checkbox color=\"primary\" inputProps={{\r\n                                                            'aria-labelledby': labelId,\r\n                                                        }} onChange={() => handleCheckboxClick(row.InterfaceID, 'AllowDelete')} />\r\n                                                    </TableCell>\r\n                                                    <TableCell padding=\"checkbox\">\r\n                                                        <Checkbox color=\"primary\" inputProps={{\r\n                                                            'aria-labelledby': labelId,\r\n                                                        }} onChange={() => handleCheckboxClick(row.InterfaceID, 'AllowView')} />\r\n                                                    </TableCell>\r\n                                                    <TableCell padding=\"checkbox\">\r\n                                                        <Checkbox color=\"primary\" inputProps={{\r\n                                                            'aria-labelledby': labelId,\r\n                                                        }} onChange={() => handleCheckboxClick(row.InterfaceID, 'AllowReport')} />\r\n                                                    </TableCell>\r\n                                                </TableRow>\r\n                                            );\r\n                                        })}\r\n                                    {emptyRows > 0 && (\r\n                                        <TableRow\r\n                                            style={{\r\n                                                height: (dense ? 33 : 53) * emptyRows,\r\n                                            }}\r\n                                        >\r\n                                            <TableCell colSpan={6} />\r\n                                        </TableRow>\r\n                                    )}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                        {/*<TablePagination*/}\r\n                        {/*    rowsPerPageOptions={[5, 10, 25, 50]}*/}\r\n                        {/*    component=\"div\"*/}\r\n                        {/*    count={totalRecords}*/}\r\n                        {/*    rowsPerPage={rowsPerPage}*/}\r\n                        {/*    page={page}*/}\r\n                        {/*    onPageChange={handleChangePage}*/}\r\n                        {/*    onRowsPerPageChange={handleChangeRowsPerPage}*/}\r\n                        {/*/>*/}\r\n                        </CardContent>\r\n                </Card>\r\n\r\n               \r\n            </Paper>\r\n            <FormControlLabel\r\n                control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n                label=\"Dense padding\"\r\n            />\r\n        </Box>\r\n    );\r\n}\r\n//DataTable.propTypes = {\r\n//    columns: PropTypes.array.isRequired\r\n//};\r\n\r\n//DataTable.defaultProps = {\r\n//    columns: []\r\n//};\r\n\r\nexport default RoleAccessTable;"]},"metadata":{},"sourceType":"module"}