{"ast":null,"code":"var _jsxFileName = \"E:\\\\Projects\\\\LFMS\\\\LFMS.WebUI\\\\src\\\\components\\\\Login.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\"; //import { Formik, Field, Form, ErrorMessage } from \"formik\";\n\nimport * as Yup from \"yup\";\nimport { login } from \"../services/auth.service\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n//type Props = RouteComponentProps<RouterProps>;\nconst Login = () => {\n  _s();\n\n  var _errors$fullname, _errors$username, _errors$email, _errors$password, _errors$confirmPasswo, _errors$acceptTerms;\n\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const initialValues = {\n    username: \"\",\n    password: \"\"\n  };\n  const validationSchema = Yup.object().shape({\n    fullname: Yup.string().required('Fullname is required'),\n    username: Yup.string().required('Username is required').min(6, 'Username must be at least 6 characters').max(20, 'Username must not exceed 20 characters'),\n    email: Yup.string().required('Email is required').email('Email is invalid'),\n    password: Yup.string().required('Password is required').min(6, 'Password must be at least 6 characters').max(40, 'Password must not exceed 40 characters'),\n    confirmPassword: Yup.string().required('Confirm Password is required').oneOf([Yup.ref('password'), null], 'Confirm Password does not match'),\n    acceptTerms: Yup.bool().oneOf([true], 'Accept Terms is required')\n  });\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(validationSchema)\n  });\n\n  const onSubmit = data => {\n    console.log(JSON.stringify(data, null, 2));\n  };\n\n  const handleLogin = formValue => {\n    const {\n      username,\n      password\n    } = formValue;\n    setMessage(\"\");\n    setLoading(true);\n    login(username, password).then(() => {\n      // history.push(\"/profile\");\n      window.location.reload();\n    }, error => {\n      const resMessage = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n      setLoading(false);\n      setMessage(resMessage);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register-form\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Full Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          ...register('fullname'),\n          className: `form-control ${errors.fullname ? 'is-invalid' : ''}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"invalid-feedback\",\n          children: (_errors$fullname = errors.fullname) === null || _errors$fullname === void 0 ? void 0 : _errors$fullname.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          ...register('username'),\n          className: `form-control ${errors.username ? 'is-invalid' : ''}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"invalid-feedback\",\n          children: (_errors$username = errors.username) === null || _errors$username === void 0 ? void 0 : _errors$username.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          ...register('email'),\n          className: `form-control ${errors.email ? 'is-invalid' : ''}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"invalid-feedback\",\n          children: (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          ...register('password'),\n          className: `form-control ${errors.password ? 'is-invalid' : ''}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"invalid-feedback\",\n          children: (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          ...register('confirmPassword'),\n          className: `form-control ${errors.confirmPassword ? 'is-invalid' : ''}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"invalid-feedback\",\n          children: (_errors$confirmPasswo = errors.confirmPassword) === null || _errors$confirmPasswo === void 0 ? void 0 : _errors$confirmPasswo.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group form-check\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          ...register('acceptTerms'),\n          className: `form-check-input ${errors.acceptTerms ? 'is-invalid' : ''}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"acceptTerms\",\n          className: \"form-check-label\",\n          children: \"I have read and agree to the Terms\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"invalid-feedback\",\n          children: (_errors$acceptTerms = errors.acceptTerms) === null || _errors$acceptTerms === void 0 ? void 0 : _errors$acceptTerms.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => reset(),\n          className: \"btn btn-warning float-right\",\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"7WrwAlJQWCzaBEtEBDzU+m+rLJM=\", false, function () {\n  return [useForm];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["E:/Projects/LFMS/LFMS.WebUI/src/components/Login.tsx"],"names":["React","useState","Yup","login","yupResolver","useForm","Login","loading","setLoading","message","setMessage","initialValues","username","password","validationSchema","object","shape","fullname","string","required","min","max","email","confirmPassword","oneOf","ref","acceptTerms","bool","register","handleSubmit","reset","formState","errors","resolver","onSubmit","data","console","log","JSON","stringify","handleLogin","formValue","then","window","location","reload","error","resMessage","response","toString"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\n//import { Formik, Field, Form, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { login } from \"../services/auth.service\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { useForm } from \"react-hook-form\";\r\ninterface RouterProps {\r\n    history: string;\r\n}\r\n//type Props = RouteComponentProps<RouterProps>;\r\nconst Login: React.FC = () => {\r\n    const [loading, setLoading] = useState<boolean>(false);\r\n    const [message, setMessage] = useState<string>(\"\");\r\n    const initialValues: {\r\n        username: string;\r\n        password: string;\r\n    } = {\r\n        username: \"\",\r\n        password: \"\",\r\n    };\r\n    type UserSubmitForm = {\r\n        fullname: string;\r\n        username: string;\r\n        email: string;\r\n        password: string;\r\n        confirmPassword: string;\r\n        acceptTerms: boolean;\r\n    };\r\n    const validationSchema = Yup.object().shape({\r\n        fullname: Yup.string().required('Fullname is required'),\r\n        username: Yup.string()\r\n            .required('Username is required')\r\n            .min(6, 'Username must be at least 6 characters')\r\n            .max(20, 'Username must not exceed 20 characters'),\r\n        email: Yup.string()\r\n            .required('Email is required')\r\n            .email('Email is invalid'),\r\n        password: Yup.string()\r\n            .required('Password is required')\r\n            .min(6, 'Password must be at least 6 characters')\r\n            .max(40, 'Password must not exceed 40 characters'),\r\n        confirmPassword: Yup.string()\r\n            .required('Confirm Password is required')\r\n            .oneOf([Yup.ref('password'), null], 'Confirm Password does not match'),\r\n        acceptTerms: Yup.bool().oneOf([true], 'Accept Terms is required')\r\n    });\r\n    \r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        reset,\r\n        formState: { errors }\r\n    } = useForm<UserSubmitForm>({\r\n        resolver: yupResolver(validationSchema)\r\n    });\r\n    const onSubmit = (data: UserSubmitForm) => {\r\n        console.log(JSON.stringify(data, null, 2));\r\n    };\r\n    const handleLogin = (formValue: { username: string; password: string }) => {\r\n        const { username, password } = formValue;\r\n        setMessage(\"\");\r\n        setLoading(true);\r\n        login(username, password).then(\r\n            () => {\r\n               // history.push(\"/profile\");\r\n                window.location.reload();\r\n            },\r\n            (error: any) => {\r\n                const resMessage =\r\n                    (error.response &&\r\n                        error.response.data &&\r\n                        error.response.data.message) ||\r\n                    error.message ||\r\n                    error.toString();\r\n                setLoading(false);\r\n                setMessage(resMessage);\r\n            }\r\n        );\r\n    };\r\n    return (\r\n        <div className=\"register-form\">\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <div className=\"form-group\">\r\n          <label>Full Name</label>\r\n          <input\r\n            type=\"text\"\r\n            {...register('fullname')}\r\n            className={`form-control ${errors.fullname ? 'is-invalid' : ''}`}\r\n          />\r\n          <div className=\"invalid-feedback\">{errors.fullname?.message}</div>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Username</label>\r\n          <input\r\n            type=\"text\"\r\n            {...register('username')}\r\n            className={`form-control ${errors.username ? 'is-invalid' : ''}`}\r\n          />\r\n          <div className=\"invalid-feedback\">{errors.username?.message}</div>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Email</label>\r\n          <input\r\n            type=\"text\"\r\n            {...register('email')}\r\n            className={`form-control ${errors.email ? 'is-invalid' : ''}`}\r\n          />\r\n          <div className=\"invalid-feedback\">{errors.email?.message}</div>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Password</label>\r\n          <input\r\n            type=\"password\"\r\n            {...register('password')}\r\n            className={`form-control ${errors.password ? 'is-invalid' : ''}`}\r\n          />\r\n          <div className=\"invalid-feedback\">{errors.password?.message}</div>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Confirm Password</label>\r\n          <input\r\n            type=\"password\"\r\n            {...register('confirmPassword')}\r\n            className={`form-control ${\r\n              errors.confirmPassword ? 'is-invalid' : ''\r\n            }`}\r\n          />\r\n          <div className=\"invalid-feedback\">\r\n            {errors.confirmPassword?.message}\r\n          </div>\r\n        </div>\r\n        <div className=\"form-group form-check\">\r\n          <input\r\n            type=\"checkbox\"\r\n            {...register('acceptTerms')}\r\n            className={`form-check-input ${\r\n              errors.acceptTerms ? 'is-invalid' : ''\r\n            }`}\r\n          />\r\n          <label htmlFor=\"acceptTerms\" className=\"form-check-label\">\r\n            I have read and agree to the Terms\r\n          </label>\r\n          <div className=\"invalid-feedback\">{errors.acceptTerms?.message}</div>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <button type=\"submit\" className=\"btn btn-primary\">\r\n            Register\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => reset()}\r\n            className=\"btn btn-warning float-right\"\r\n          >\r\n            Reset\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n    );\r\n};\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}