{"ast":null,"code":"var _jsxFileName = \"E:\\\\Projects\\\\LFMS\\\\LFMS.WebUI\\\\src\\\\content\\\\pages\\\\Components\\\\RoleAccess\\\\RoleAccessTable.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { alpha } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport Paper from '@mui/material/Paper';\nimport Checkbox from '@mui/material/Checkbox';\nimport IconButton from '@mui/material/IconButton';\nimport Tooltip from '@mui/material/Tooltip';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Switch from '@mui/material/Switch';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { Post } from \"../../../../services/common.service\";\nimport { Stack } from '@mui/material';\nimport { useForm } from 'react-hook-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc' ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\n} // This method is created for cross-browser compatibility, if you don't\n// need to support IE11, you can use Array.prototype.sort() directly\n\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n\n    if (order !== 0) {\n      return order;\n    }\n\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nfunction EnhancedTableHead(props) {\n  const {\n    headCells,\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort\n  } = props;\n\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return /*#__PURE__*/_jsxDEV(TableHead, {\n    children: /*#__PURE__*/_jsxDEV(TableRow, {\n      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n        padding: \"checkbox\",\n        children: \"Interface\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        padding: \"checkbox\",\n        children: /*#__PURE__*/_jsxDEV(Checkbox, {\n          color: \"primary\",\n          indeterminate: numSelected > 0 && numSelected < rowCount,\n          checked: rowCount > 0 && numSelected === rowCount,\n          onChange: onSelectAllClick,\n          inputProps: {\n            'aria-label': 'select all Add'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        padding: \"checkbox\",\n        children: /*#__PURE__*/_jsxDEV(Checkbox, {\n          color: \"primary\",\n          indeterminate: numSelected > 0 && numSelected < rowCount,\n          checked: rowCount > 0 && numSelected === rowCount,\n          onChange: onSelectAllClick,\n          inputProps: {\n            'aria-label': 'select all desserts'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        padding: \"checkbox\",\n        children: /*#__PURE__*/_jsxDEV(Checkbox, {\n          color: \"primary\",\n          indeterminate: numSelected > 0 && numSelected < rowCount,\n          checked: rowCount > 0 && numSelected === rowCount,\n          onChange: onSelectAllClick,\n          inputProps: {\n            'aria-label': 'select all desserts'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        padding: \"checkbox\",\n        children: /*#__PURE__*/_jsxDEV(Checkbox, {\n          color: \"primary\",\n          indeterminate: numSelected > 0 && numSelected < rowCount,\n          checked: rowCount > 0 && numSelected === rowCount,\n          onChange: onSelectAllClick,\n          inputProps: {\n            'aria-label': 'select all desserts'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        padding: \"checkbox\",\n        children: /*#__PURE__*/_jsxDEV(Checkbox, {\n          color: \"primary\",\n          indeterminate: numSelected > 0 && numSelected < rowCount,\n          checked: rowCount > 0 && numSelected === rowCount,\n          onChange: onSelectAllClick,\n          inputProps: {\n            'aria-label': 'select all desserts'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n}\n\n_c = EnhancedTableHead;\n\nconst EnhancedTableToolbar = props => {\n  const {\n    numSelected\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Toolbar, {\n    sx: {\n      pl: {\n        sm: 2\n      },\n      pr: {\n        xs: 1,\n        sm: 1\n      },\n      ...(numSelected > 0 && {\n        bgcolor: theme => alpha(theme.palette.primary.main, theme.palette.action.activatedOpacity)\n      })\n    },\n    children: [numSelected > 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n      sx: {\n        flex: '1 1 100%'\n      },\n      color: \"inherit\",\n      variant: \"subtitle1\",\n      component: \"div\",\n      children: [numSelected, \" selected\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n      sx: {\n        flex: '1 1 100%'\n      },\n      variant: \"h6\",\n      id: \"tableTitle\",\n      component: \"div\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 17\n    }, this), numSelected > 0 ? /*#__PURE__*/_jsxDEV(Tooltip, {\n      title: \"Delete\",\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 18\n    }, this) //<Tooltip title=\"Filter list\">\n    //    <IconButton>\n    //        <FilterListIcon />\n    //    </IconButton>\n    //</Tooltip>\n    ]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = EnhancedTableToolbar;\n\nconst RoleAccessTable = _ref => {\n  _s();\n\n  let {\n    columns\n  } = _ref;\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState(columns[0].id);\n  const [selectedAdd, setSelectedAdd] = React.useState([]);\n  const [selectedEdit, setSelectedEdit] = React.useState([]);\n  const [selectedDelete, setSelectedDelete] = React.useState([]);\n  const [selectedView, setSelectedView] = React.useState([]);\n  const [selectedReport, setSelectedReport] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const [rows, setRows] = React.useState([]);\n  const [rowCount, setRowCount] = React.useState(0);\n  const [totalRecords, setTotalRecords] = React.useState(0);\n  const [filter, setFilter] = React.useState();\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: {\n      errors\n    }\n  } = useForm({}); //React.useEffect(() => getFilteredData(), []);\n\n  React.useEffect(() => {\n    getFilteredData();\n  }, [filter, page, rowsPerPage]);\n\n  const getFilteredData = () => {\n    let _filter = undefined;\n\n    if (isSearchAble == true) {\n      _filter = filter;\n    }\n\n    let _requestParamters = {\n      filter: _filter,\n      length: rowsPerPage,\n      start: page * rowsPerPage,\n      order: {\n        orderBy: orderBy,\n        orderDirection: order\n      }\n    };\n    Post(url, _requestParamters).then(response => {\n      if (response.status == 200) {\n        setRows(response.data.data);\n        setTotalRecords(response.data.recordsTotal);\n      }\n    }, error => {\n      const resMessage = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    });\n  };\n\n  const resetSearchForm = () => {\n    const formFields = {};\n    columns.map(x => {\n      if (x.numeric) {\n        formFields[x.id] = 0;\n      } else {\n        formFields[x.id] = '';\n      }\n    });\n    reset(formFields);\n    setFilter(formFields);\n  };\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n    getFilteredData();\n  };\n\n  const handleSelectAllByEvent = event => {\n    if (event.target.checked && event.target.id == 'chkAdd') {\n      const newSelectedAdds = rows.map(n => n['Add']);\n      setSelectedAdd(newSelectedAdds);\n      return;\n    } else if (event.target.checked && event.target.id == 'chkEdit') {\n      const newSelectedEdits = rows.map(n => n['Edit']);\n      setSelectedAdd(newSelectedEdits);\n      return;\n    } else if (event.target.checked && event.target.id == 'chkDelete') {\n      const newSelectedDeletes = rows.map(n => n['Delete']);\n      setSelectedAdd(newSelectedDeletes);\n      return;\n    } else if (event.target.checked && event.target.id == 'chkView') {\n      const newSelectedViews = rows.map(n => n['View']);\n      setSelectedAdd(newSelectedViews);\n      return;\n    } else if (event.target.checked && event.target.id == 'chkReport') {\n      const newSelectedReports = rows.map(n => n['Report']);\n      setSelectedAdd(newSelectedReports);\n      return;\n    }\n\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n    }\n\n    setSelected(newSelected);\n  }; //const handleChangePage = (event: unknown, newPage: number) => {\n  //    setPage(newPage);\n  //    //getFilteredData();\n  //};\n  //const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n  //    setRowsPerPage(parseInt(event.target.value, 10));\n  //    setPage(0);\n  //    //getFilteredData();\n  //};\n\n\n  const handleChangeDense = event => {\n    setDense(event.target.checked);\n  };\n\n  const onSubmit = data => {\n    if (data != undefined) {\n      columns.map((column, index) => {\n        if (column.numeric == true) {\n          if (data[column.id] == undefined || data[column.id] == null || data[column.id] == '') {\n            data[column.id] = 0;\n          } else data[column.id] = parseInt(data[column.id]);\n        }\n      });\n    }\n\n    setFilter(data); //getFilteredData();\n  }; //const isSelected = (name: any) => selected.indexOf(name) !== -1;\n  //const editHandlerr = (name: any) => {\n  //    editHandler(name);\n  //};\n  // Avoid a layout jump when reaching the last page with empty rows.\n\n\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        width: '100%',\n        mb: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(TableContainer, {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          sx: {\n            minWidth: 750\n          },\n          \"aria-labelledby\": \"tableTitle\",\n          size: dense ? 'small' : 'medium',\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                padding: \"checkbox\",\n                children: \"Interface\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 382,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                padding: \"checkbox\",\n                children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                  id: \"chkAdd\",\n                  color: \"primary\",\n                  indeterminate: selectedAdd.length > 0 && selectedAdd.length < rowCount,\n                  checked: rowCount > 0 && selectedAdd.length === rowCount,\n                  onChange: handleSelectAllByEvent,\n                  inputProps: {\n                    'aria-label': 'select all Add'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 386,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 385,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                padding: \"checkbox\",\n                children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                  id: \"chkAdd\",\n                  color: \"primary\",\n                  indeterminate: selectedEdit.length > 0 && selectedEdit.length < rowCount,\n                  checked: rowCount > 0 && selectedEdit.length === rowCount,\n                  onChange: handleSelectAllByEvent,\n                  inputProps: {\n                    'aria-label': 'select all Edit'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 395,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 394,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                padding: \"checkbox\",\n                children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                  id: \"chkAdd\",\n                  color: \"primary\",\n                  indeterminate: selectedDelete.length > 0 && selectedDelete.length < rowCount,\n                  checked: rowCount > 0 && selectedDelete.length === rowCount,\n                  onChange: handleSelectAllByEvent,\n                  inputProps: {\n                    'aria-label': 'select all Delete'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 404,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 403,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                padding: \"checkbox\",\n                children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                  id: \"chkAdd\",\n                  color: \"primary\",\n                  indeterminate: selectedView.length > 0 && selectedView.length < rowCount,\n                  checked: rowCount > 0 && selectedView.length === rowCount,\n                  onChange: handleSelectAllByEvent,\n                  inputProps: {\n                    'aria-label': 'select all View'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 413,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 412,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                padding: \"checkbox\",\n                children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                  id: \"chkAdd\",\n                  color: \"primary\",\n                  indeterminate: selectedReport.length > 0 && selectedReport.length < rowCount,\n                  checked: rowCount > 0 && selectedReport.length === rowCount,\n                  onChange: handleSelectAllByEvent,\n                  inputProps: {\n                    'aria-label': 'select all Report'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 422,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 421,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: [//stableSort(rows, getComparator(order, orderBy))\n            //.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n            rows.map((row, index) => {\n              //const isItemSelected = isSelected(row[columns[0].id]);\n              const labelId = `enhanced-table-checkbox-${index}`;\n              return (\n                /*#__PURE__*/\n\n                /* <TableRow hover onClick={(event) => handleClick(event, row[columns[0].id])} role=\"checkbox\" aria-checked={isItemSelected}  tabIndex={-1} key={row[0]} selected={isItemSelected}> */\n                _jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    padding: \"checkbox\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 446,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    padding: \"checkbox\",\n                    children: /*#__PURE__*/_jsxDEV(Stack, {\n                      direction: \"row\",\n                      children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                        color: \"primary\",\n                        checked: isItemSelected,\n                        inputProps: {\n                          'aria-labelledby': labelId\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 451,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 450,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 449,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 445,\n                  columnNumber: 41\n                }, this)\n              );\n            }), emptyRows > 0 && /*#__PURE__*/_jsxDEV(TableRow, {\n              style: {\n                height: (dense ? 33 : 53) * emptyRows\n              },\n              children: /*#__PURE__*/_jsxDEV(TableCell, {\n                colSpan: 6\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 466,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 461,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(Switch, {\n        checked: dense,\n        onChange: handleChangeDense\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 26\n      }, this),\n      label: \"Dense padding\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 370,\n    columnNumber: 9\n  }, this);\n}; //DataTable.propTypes = {\n//    columns: PropTypes.array.isRequired\n//};\n//DataTable.defaultProps = {\n//    columns: []\n//};\n\n\n_s(RoleAccessTable, \"diqt2ZQEWtKstn+4BwmCiJSEXok=\", false, function () {\n  return [useForm];\n});\n\n_c3 = RoleAccessTable;\nexport default RoleAccessTable;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"EnhancedTableHead\");\n$RefreshReg$(_c2, \"EnhancedTableToolbar\");\n$RefreshReg$(_c3, \"RoleAccessTable\");","map":{"version":3,"sources":["E:/Projects/LFMS/LFMS.WebUI/src/content/pages/Components/RoleAccess/RoleAccessTable.tsx"],"names":["React","alpha","Box","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Toolbar","Typography","Paper","Checkbox","IconButton","Tooltip","FormControlLabel","Switch","DeleteIcon","Post","Stack","useForm","descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","map","el","index","sort","EnhancedTableHead","props","headCells","onSelectAllClick","numSelected","rowCount","onRequestSort","createSortHandler","property","event","EnhancedTableToolbar","pl","sm","pr","xs","bgcolor","theme","palette","primary","main","action","activatedOpacity","flex","RoleAccessTable","columns","setOrder","useState","setOrderBy","id","selectedAdd","setSelectedAdd","selectedEdit","setSelectedEdit","selectedDelete","setSelectedDelete","selectedView","setSelectedView","selectedReport","setSelectedReport","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","rows","setRows","setRowCount","totalRecords","setTotalRecords","filter","setFilter","register","handleSubmit","reset","formState","errors","useEffect","getFilteredData","_filter","undefined","isSearchAble","_requestParamters","length","start","orderDirection","url","then","response","status","data","recordsTotal","error","resMessage","message","toString","resetSearchForm","formFields","x","numeric","handleRequestSort","isAsc","handleSelectAllByEvent","target","checked","newSelectedAdds","n","newSelectedEdits","newSelectedDeletes","newSelectedViews","newSelectedReports","setSelected","handleClick","name","selectedIndex","selected","indexOf","newSelected","concat","slice","handleChangeDense","onSubmit","column","parseInt","emptyRows","Math","max","width","mb","minWidth","row","labelId","isItemSelected","height"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { alpha } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableSortLabel from '@mui/material/TableSortLabel';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Paper from '@mui/material/Paper';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Switch from '@mui/material/Switch';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport { Column, DataTableRequest, DataTableResponse } from '../../../../models/table.type';\r\nimport { Post, Get } from \"../../../../services/common.service\";\r\nimport { Avatar, Button, Container, Divider, Grid, Hidden, makeStyles, Stack, TextField } from '@mui/material';\r\nimport { useForm } from 'react-hook-form';\r\n\r\nfunction descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n        return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\ntype Order = 'asc' | 'desc';\r\n\r\nfunction getComparator<Key extends keyof any>(\r\n    order: Order,\r\n    orderBy: Key,\r\n): (\r\n        a: { [key in Key]: number | string },\r\n        b: { [key in Key]: number | string },\r\n    ) => number {\r\n    return order === 'desc'\r\n        ? (a, b) => descendingComparator(a, b, orderBy)\r\n        : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\n// This method is created for cross-browser compatibility, if you don't\r\n// need to support IE11, you can use Array.prototype.sort() directly\r\nfunction stableSort<T>(array: readonly T[], comparator: (a: T, b: T) => number) {\r\n    const stabilizedThis = array.map((el, index) => [el, index] as [T, number]);\r\n    stabilizedThis.sort((a, b) => {\r\n        const order = comparator(a[0], b[0]);\r\n        if (order !== 0) {\r\n            return order;\r\n        }\r\n        return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\ninterface EnhancedTableProps {\r\n    headCells: Column[];\r\n    numSelected: number;\r\n    onRequestSort: (event: React.MouseEvent<unknown>, property: string) => void;\r\n    onSelectAllClick: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n    order: Order;\r\n    orderBy: string;\r\n    rowCount: number;\r\n}\r\n\r\nfunction EnhancedTableHead(props: EnhancedTableProps) {\r\n    const { headCells, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } =\r\n        props;\r\n    const createSortHandler =\r\n        (property: string) => (event: React.MouseEvent<unknown>) => {\r\n            onRequestSort(event, property);\r\n        };\r\n\r\n    return (\r\n        <TableHead>\r\n            <TableRow>\r\n                <TableCell padding=\"checkbox\">\r\n                    Interface\r\n                </TableCell>\r\n                <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                        color=\"primary\" indeterminate={numSelected > 0 && numSelected < rowCount}\r\n                        checked={rowCount > 0 && numSelected === rowCount}\r\n                        onChange={onSelectAllClick}\r\n                        inputProps={{\r\n                            'aria-label': 'select all Add',\r\n                        }}\r\n                    />\r\n                </TableCell>\r\n                <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                        color=\"primary\"\r\n                        indeterminate={numSelected > 0 && numSelected < rowCount}\r\n                        checked={rowCount > 0 && numSelected === rowCount}\r\n                        onChange={onSelectAllClick}\r\n                        inputProps={{\r\n                            'aria-label': 'select all desserts',\r\n                        }}\r\n                    />\r\n                </TableCell>\r\n                <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                        color=\"primary\"\r\n                        indeterminate={numSelected > 0 && numSelected < rowCount}\r\n                        checked={rowCount > 0 && numSelected === rowCount}\r\n                        onChange={onSelectAllClick}\r\n                        inputProps={{\r\n                            'aria-label': 'select all desserts',\r\n                        }}\r\n                    />\r\n                </TableCell>\r\n                <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                        color=\"primary\"\r\n                        indeterminate={numSelected > 0 && numSelected < rowCount}\r\n                        checked={rowCount > 0 && numSelected === rowCount}\r\n                        onChange={onSelectAllClick}\r\n                        inputProps={{\r\n                            'aria-label': 'select all desserts',\r\n                        }}\r\n                    />\r\n                </TableCell>\r\n                <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                        color=\"primary\"\r\n                        indeterminate={numSelected > 0 && numSelected < rowCount}\r\n                        checked={rowCount > 0 && numSelected === rowCount}\r\n                        onChange={onSelectAllClick}\r\n                        inputProps={{\r\n                            'aria-label': 'select all desserts',\r\n                        }}\r\n                    />\r\n                </TableCell>\r\n            </TableRow>\r\n        </TableHead>\r\n    );\r\n}\r\n\r\ninterface EnhancedTableToolbarProps {\r\n    numSelected: number;\r\n\r\n}\r\n\r\nconst EnhancedTableToolbar = (props: EnhancedTableToolbarProps) => {\r\n    const { numSelected } = props;\r\n\r\n    return (\r\n        <Toolbar\r\n            sx={{\r\n                pl: { sm: 2 },\r\n                pr: { xs: 1, sm: 1 },\r\n                ...(numSelected > 0 && {\r\n                    bgcolor: (theme) =>\r\n                        alpha(theme.palette.primary.main, theme.palette.action.activatedOpacity),\r\n                }),\r\n            }}\r\n        >\r\n            {numSelected > 0 ? (\r\n                <Typography\r\n                    sx={{ flex: '1 1 100%' }}\r\n                    color=\"inherit\"\r\n                    variant=\"subtitle1\"\r\n                    component=\"div\"\r\n                >\r\n                    {numSelected} selected\r\n                </Typography>\r\n            ) : (\r\n                <Typography\r\n                    sx={{ flex: '1 1 100%' }}\r\n                    variant=\"h6\"\r\n                    id=\"tableTitle\"\r\n                    component=\"div\"\r\n                >\r\n                    {/*Nutrition*/}\r\n                </Typography>\r\n            )}\r\n            {numSelected > 0 ? (\r\n                <Tooltip title=\"Delete\">\r\n                    <IconButton>\r\n                        <DeleteIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n            ) : (<span></span>\r\n                //<Tooltip title=\"Filter list\">\r\n                //    <IconButton>\r\n                //        <FilterListIcon />\r\n                //    </IconButton>\r\n                //</Tooltip>\r\n            )}\r\n        </Toolbar>\r\n    );\r\n};\r\n\r\nconst RoleAccessTable: React.FC<any> = ({ columns, }) => {\r\n\r\n    const [order, setOrder] = React.useState<Order>('asc');\r\n    const [orderBy, setOrderBy] = React.useState<string>(columns[0].id);\r\n    const [selectedAdd, setSelectedAdd] = React.useState<readonly string[]>([]);\r\n    const [selectedEdit, setSelectedEdit] = React.useState<readonly string[]>([]);\r\n    const [selectedDelete, setSelectedDelete] = React.useState<readonly string[]>([]);\r\n    const [selectedView, setSelectedView] = React.useState<readonly string[]>([]);\r\n    const [selectedReport, setSelectedReport] = React.useState<readonly string[]>([]);\r\n    const [page, setPage] = React.useState(0);\r\n    const [dense, setDense] = React.useState(false);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n    const [rows, setRows] = React.useState<any[]>([]);\r\n    const [rowCount, setRowCount] = React.useState<number>(0);\r\n    const [totalRecords, setTotalRecords] = React.useState<number>(0);\r\n    const [filter, setFilter] = React.useState<any>();\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        reset,\r\n        formState: { errors }\r\n    } = useForm<any>({\r\n    });\r\n    //React.useEffect(() => getFilteredData(), []);\r\n    React.useEffect(() => {\r\n        getFilteredData()\r\n    }, [filter, page, rowsPerPage]);\r\n    const getFilteredData = () => {\r\n        let _filter = undefined;\r\n        if (isSearchAble == true) {\r\n            _filter = filter;\r\n        }\r\n        let _requestParamters: DataTableRequest = {\r\n            filter: _filter,\r\n            length: rowsPerPage,\r\n            start: page * rowsPerPage,\r\n            order: { orderBy: orderBy, orderDirection: order }\r\n        };\r\n        Post(url, _requestParamters).then(\r\n            (response: any) => {\r\n                if (response.status == 200) {\r\n                    setRows(response.data.data);\r\n                    setTotalRecords(response.data.recordsTotal);\r\n                }\r\n            },\r\n            (error: any) => {\r\n                const resMessage =\r\n                    (error.response &&\r\n                        error.response.data &&\r\n                        error.response.data.message) ||\r\n                    error.message ||\r\n                    error.toString();\r\n            }\r\n        );\r\n    };\r\n    const resetSearchForm = () => {\r\n        const formFields = {};\r\n        columns.map(x => {\r\n            if (x.numeric) {\r\n                formFields[x.id] = 0;\r\n            }\r\n            else {\r\n                formFields[x.id] = '';\r\n            }\r\n        });\r\n        reset(formFields);\r\n        setFilter(formFields);\r\n    }\r\n    const handleRequestSort = (\r\n        event: React.MouseEvent<unknown>,\r\n        property: string,\r\n    ) => {\r\n        const isAsc = orderBy === property && order === 'asc';\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(property);\r\n        getFilteredData();\r\n    };\r\n\r\n    const handleSelectAllByEvent = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        if (event.target.checked && event.target.id == 'chkAdd') {\r\n            const newSelectedAdds = rows.map((n) => n['Add']);\r\n            setSelectedAdd(newSelectedAdds);\r\n            return;\r\n        }\r\n        else if (event.target.checked && event.target.id == 'chkEdit') {\r\n            const newSelectedEdits = rows.map((n) => n['Edit']);\r\n            setSelectedAdd(newSelectedEdits);\r\n            return;\r\n        }\r\n        else if (event.target.checked && event.target.id == 'chkDelete') {\r\n            const newSelectedDeletes = rows.map((n) => n['Delete']);\r\n            setSelectedAdd(newSelectedDeletes);\r\n            return;\r\n        }\r\n        else if (event.target.checked && event.target.id == 'chkView') {\r\n            const newSelectedViews = rows.map((n) => n['View']);\r\n            setSelectedAdd(newSelectedViews);\r\n            return;\r\n        }\r\n        else if (event.target.checked && event.target.id == 'chkReport') {\r\n            const newSelectedReports = rows.map((n) => n['Report']);\r\n            setSelectedAdd(newSelectedReports);\r\n            return;\r\n        }\r\n        setSelected([]);\r\n    };\r\n\r\n    const handleClick = (event: React.MouseEvent<unknown>, name: any) => {\r\n        const selectedIndex = selected.indexOf(name);\r\n        let newSelected: readonly string[] = [];\r\n\r\n        if (selectedIndex === -1) {\r\n            newSelected = newSelected.concat(selected, name);\r\n        } else if (selectedIndex === 0) {\r\n            newSelected = newSelected.concat(selected.slice(1));\r\n        } else if (selectedIndex === selected.length - 1) {\r\n            newSelected = newSelected.concat(selected.slice(0, -1));\r\n        } else if (selectedIndex > 0) {\r\n            newSelected = newSelected.concat(\r\n                selected.slice(0, selectedIndex),\r\n                selected.slice(selectedIndex + 1),\r\n            );\r\n        }\r\n\r\n        setSelected(newSelected);\r\n    };\r\n\r\n    //const handleChangePage = (event: unknown, newPage: number) => {\r\n    //    setPage(newPage);\r\n    //    //getFilteredData();\r\n    //};\r\n\r\n    //const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    //    setRowsPerPage(parseInt(event.target.value, 10));\r\n    //    setPage(0);\r\n    //    //getFilteredData();\r\n    //};\r\n\r\n    const handleChangeDense = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setDense(event.target.checked);\r\n    };\r\n\r\n    const onSubmit = (data: any) => {\r\n        if (data != undefined) {\r\n            columns.map((column, index) => {\r\n                if (column.numeric == true) {\r\n                    if (data[column.id] == undefined || data[column.id] == null || data[column.id] == '') {\r\n                        data[column.id] = 0;\r\n                    }\r\n                    else\r\n                        data[column.id] = parseInt(data[column.id]);\r\n                }\r\n            });\r\n        }\r\n        setFilter(data);\r\n        //getFilteredData();\r\n    };\r\n\r\n    //const isSelected = (name: any) => selected.indexOf(name) !== -1;\r\n\r\n    //const editHandlerr = (name: any) => {\r\n    //    editHandler(name);\r\n    //};\r\n    // Avoid a layout jump when reaching the last page with empty rows.\r\n    const emptyRows =\r\n        page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\r\n\r\n    return (\r\n        <Box sx={{ width: '100%' }}>\r\n            \r\n            <Paper sx={{ width: '100%', mb: 2 }}>\r\n              \r\n                <TableContainer>\r\n                    <Table\r\n                        sx={{ minWidth: 750 }}\r\n                        aria-labelledby=\"tableTitle\"\r\n                        size={dense ? 'small' : 'medium'}\r\n                    >\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell padding=\"checkbox\">\r\n                                    Interface\r\n                                </TableCell>\r\n                                <TableCell padding=\"checkbox\">\r\n                                    <Checkbox id=\"chkAdd\"\r\n                                        color=\"primary\" indeterminate={selectedAdd.length > 0 && selectedAdd.length < rowCount}\r\n                                        checked={rowCount > 0 && selectedAdd.length === rowCount} onChange={handleSelectAllByEvent}\r\n                                        inputProps={{\r\n                                            'aria-label': 'select all Add',\r\n                                        }}\r\n                                    />\r\n                                </TableCell>\r\n                                <TableCell padding=\"checkbox\">\r\n                                    <Checkbox id=\"chkAdd\"\r\n                                        color=\"primary\" indeterminate={selectedEdit.length > 0 && selectedEdit.length < rowCount}\r\n                                        checked={rowCount > 0 && selectedEdit.length === rowCount} onChange={handleSelectAllByEvent}\r\n                                        inputProps={{\r\n                                            'aria-label': 'select all Edit',\r\n                                        }}\r\n                                    />\r\n                                </TableCell>\r\n                                <TableCell padding=\"checkbox\">\r\n                                    <Checkbox id=\"chkAdd\"\r\n                                        color=\"primary\" indeterminate={selectedDelete.length > 0 && selectedDelete.length < rowCount}\r\n                                        checked={rowCount > 0 && selectedDelete.length === rowCount} onChange={handleSelectAllByEvent}\r\n                                        inputProps={{\r\n                                            'aria-label': 'select all Delete',\r\n                                        }}\r\n                                    />\r\n                                </TableCell>\r\n                                <TableCell padding=\"checkbox\">\r\n                                    <Checkbox id=\"chkAdd\"\r\n                                        color=\"primary\" indeterminate={selectedView.length > 0 && selectedView.length < rowCount}\r\n                                        checked={rowCount > 0 && selectedView.length === rowCount} onChange={handleSelectAllByEvent}\r\n                                        inputProps={{\r\n                                            'aria-label': 'select all View',\r\n                                        }}\r\n                                    />\r\n                                </TableCell>\r\n                                <TableCell padding=\"checkbox\">\r\n                                    <Checkbox id=\"chkAdd\"\r\n                                        color=\"primary\" indeterminate={selectedReport.length > 0 && selectedReport.length < rowCount}\r\n                                        checked={rowCount > 0 && selectedReport.length === rowCount} onChange={handleSelectAllByEvent}\r\n                                        inputProps={{\r\n                                            'aria-label': 'select all Report',\r\n                                        }}\r\n                                    />\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {/* if you don't need to support IE11, you can replace the `stableSort` call with:\r\n              rows.slice().sort(getComparator(order, orderBy)) */}\r\n                            {\r\n                                //stableSort(rows, getComparator(order, orderBy))\r\n                                //.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                rows.map((row, index) => {\r\n                                    //const isItemSelected = isSelected(row[columns[0].id]);\r\n                                    const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                                    return (\r\n                                        /* <TableRow hover onClick={(event) => handleClick(event, row[columns[0].id])} role=\"checkbox\" aria-checked={isItemSelected}  tabIndex={-1} key={row[0]} selected={isItemSelected}> */\r\n\r\n                                        <TableRow>\r\n                                            <TableCell padding=\"checkbox\">\r\n                                             \r\n                                            </TableCell>\r\n                                            <TableCell padding=\"checkbox\">\r\n                                                <Stack direction=\"row\">\r\n                                                    <Checkbox  color=\"primary\" checked={isItemSelected} inputProps={{\r\n                                                            'aria-labelledby': labelId,\r\n                                                        }} />\r\n                                                    \r\n                                                </Stack>\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    );\r\n                                })}\r\n                            {emptyRows > 0 && (\r\n                                <TableRow\r\n                                    style={{\r\n                                        height: (dense ? 33 : 53) * emptyRows,\r\n                                    }}\r\n                                >\r\n                                    <TableCell colSpan={6} />\r\n                                </TableRow>\r\n                            )}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                {/*<TablePagination*/}\r\n                {/*    rowsPerPageOptions={[5, 10, 25, 50]}*/}\r\n                {/*    component=\"div\"*/}\r\n                {/*    count={totalRecords}*/}\r\n                {/*    rowsPerPage={rowsPerPage}*/}\r\n                {/*    page={page}*/}\r\n                {/*    onPageChange={handleChangePage}*/}\r\n                {/*    onRowsPerPageChange={handleChangeRowsPerPage}*/}\r\n                {/*/>*/}\r\n            </Paper>\r\n            <FormControlLabel\r\n                control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n                label=\"Dense padding\"\r\n            />\r\n        </Box>\r\n    );\r\n}\r\n//DataTable.propTypes = {\r\n//    columns: PropTypes.array.isRequired\r\n//};\r\n\r\n//DataTable.defaultProps = {\r\n//    columns: []\r\n//};\r\n\r\nexport default RoleAccessTable;"]},"metadata":{},"sourceType":"module"}