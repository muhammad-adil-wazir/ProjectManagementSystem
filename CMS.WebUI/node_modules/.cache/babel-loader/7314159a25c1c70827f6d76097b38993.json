{"ast":null,"code":"export const ProfileService = {\n  setProfile: profile => {\n    if (profile != undefined) {\n      localStorage.setItem('UserID', profile.UserID.toString());\n      localStorage.setItem('UserName', profile.UserName);\n      localStorage.setItem('RoleID', profile.RoleID.toString());\n      localStorage.setItem('RoleName', profile.RoleName);\n      localStorage.setItem('Token', profile.Token.toString());\n      localStorage.setItem('Expiration', profile.Expiration.toString());\n      localStorage.setItem('ConfigID', profile.ConfigID.toString());\n    }\n  },\n  resetProfile: () => {\n    localStorage.removeItem('UserID');\n    localStorage.removeItem('UserName');\n    localStorage.removeItem('RoleID');\n    localStorage.removeItem('RoleName');\n    localStorage.removeItem('Token');\n    localStorage.removeItem('Expiration');\n    localStorage.removeItem('ConfigID');\n  },\n  getProfile: () => {\n    if (localStorage.getItem('Token')) {\n      let profile = {\n        UserID: parseInt(localStorage.getItem('UserID')),\n        UserName: localStorage.getItem('UserName'),\n        RoleID: parseInt(localStorage.getItem('RoleID')),\n        RoleName: localStorage.getItem('RoleName'),\n        Token: localStorage.getItem('Token'),\n        Expiration: new Date(localStorage.getItem('Expiration')),\n        ConfigID: parseInt(localStorage.getItem('ConfigID'))\n      };\n      return profile;\n    } else {\n      return undefined;\n    }\n  },\n  isAuthencticated: () => {\n    return localStorage.getItem('Token') != null;\n  }\n};","map":{"version":3,"sources":["E:/Projects/LFMS/LFMS.WebUI/src/services/profile.service.ts"],"names":["ProfileService","setProfile","profile","undefined","localStorage","setItem","UserID","toString","UserName","RoleID","RoleName","Token","Expiration","ConfigID","resetProfile","removeItem","getProfile","getItem","parseInt","Date","isAuthencticated"],"mappings":"AAEA,OAAO,MAAOA,cAAc,GAAG;AAEtBC,EAAAA,UAAU,EAAIC,OAAD,IAAsB;AAChC,QAAIA,OAAO,IAAIC,SAAf,EAA0B;AACtBC,MAAAA,YAAY,CAACC,OAAb,CAAqB,QAArB,EAA+BH,OAAO,CAACI,MAAR,CAAeC,QAAf,EAA/B;AACAH,MAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCH,OAAO,CAACM,QAAzC;AACAJ,MAAAA,YAAY,CAACC,OAAb,CAAqB,QAArB,EAA+BH,OAAO,CAACO,MAAR,CAAeF,QAAf,EAA/B;AACAH,MAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCH,OAAO,CAACQ,QAAzC;AACAN,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BH,OAAO,CAACS,KAAR,CAAcJ,QAAd,EAA9B;AACAH,MAAAA,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmCH,OAAO,CAACU,UAAR,CAAmBL,QAAnB,EAAnC;AACAH,MAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCH,OAAO,CAACW,QAAR,CAAiBN,QAAjB,EAAjC;AACH;AACJ,GAZsB;AAavBO,EAAAA,YAAY,EAAE,MAAM;AAChBV,IAAAA,YAAY,CAACW,UAAb,CAAwB,QAAxB;AACAX,IAAAA,YAAY,CAACW,UAAb,CAAwB,UAAxB;AACAX,IAAAA,YAAY,CAACW,UAAb,CAAwB,QAAxB;AACAX,IAAAA,YAAY,CAACW,UAAb,CAAwB,UAAxB;AACAX,IAAAA,YAAY,CAACW,UAAb,CAAwB,OAAxB;AACAX,IAAAA,YAAY,CAACW,UAAb,CAAwB,YAAxB;AACAX,IAAAA,YAAY,CAACW,UAAb,CAAwB,UAAxB;AACH,GArBsB;AAsB3BC,EAAAA,UAAU,EAAE,MAAM;AACd,QAAIZ,YAAY,CAACa,OAAb,CAAqB,OAArB,CAAJ,EAAmC;AAC/B,UAAIf,OAAgB,GAAG;AACnBI,QAAAA,MAAM,EAAEY,QAAQ,CAACd,YAAY,CAACa,OAAb,CAAqB,QAArB,CAAD,CADG;AAEnBT,QAAAA,QAAQ,EAAEJ,YAAY,CAACa,OAAb,CAAqB,UAArB,CAFS;AAGnBR,QAAAA,MAAM,EAAES,QAAQ,CAACd,YAAY,CAACa,OAAb,CAAqB,QAArB,CAAD,CAHG;AAInBP,QAAAA,QAAQ,EAAEN,YAAY,CAACa,OAAb,CAAqB,UAArB,CAJS;AAKnBN,QAAAA,KAAK,EAAEP,YAAY,CAACa,OAAb,CAAqB,OAArB,CALY;AAMnBL,QAAAA,UAAU,EAAE,IAAIO,IAAJ,CAASf,YAAY,CAACa,OAAb,CAAqB,YAArB,CAAT,CANO;AAOnBJ,QAAAA,QAAQ,EAAEK,QAAQ,CAACd,YAAY,CAACa,OAAb,CAAqB,UAArB,CAAD;AAPC,OAAvB;AASA,aAAOf,OAAP;AACH,KAXD,MAYK;AACD,aAAOC,SAAP;AACH;AACA,GAtCsB;AAuCvBiB,EAAAA,gBAAgB,EAAG,MAAM;AACrB,WAAOhB,YAAY,CAACa,OAAb,CAAqB,OAArB,KAAiC,IAAxC;AACH;AAzCsB,CAAxB","sourcesContent":["import { Profile } from '../types/profile.type';\r\n\r\nexport const  ProfileService = {\r\n    \r\n         setProfile : (profile: Profile) => {\r\n            if (profile != undefined) {\r\n                localStorage.setItem('UserID', profile.UserID.toString());\r\n                localStorage.setItem('UserName', profile.UserName);\r\n                localStorage.setItem('RoleID', profile.RoleID.toString());\r\n                localStorage.setItem('RoleName', profile.RoleName);\r\n                localStorage.setItem('Token', profile.Token.toString());\r\n                localStorage.setItem('Expiration', profile.Expiration.toString());\r\n                localStorage.setItem('ConfigID', profile.ConfigID.toString());\r\n            }\r\n        },\r\n        resetProfile: () => {\r\n            localStorage.removeItem('UserID');\r\n            localStorage.removeItem('UserName');\r\n            localStorage.removeItem('RoleID');\r\n            localStorage.removeItem('RoleName');\r\n            localStorage.removeItem('Token');\r\n            localStorage.removeItem('Expiration');\r\n            localStorage.removeItem('ConfigID');\r\n        },\r\n    getProfile: () => {\r\n        if (localStorage.getItem('Token')) {\r\n            let profile: Profile = {\r\n                UserID: parseInt(localStorage.getItem('UserID')!),\r\n                UserName: localStorage.getItem('UserName')!,\r\n                RoleID: parseInt(localStorage.getItem('RoleID')!),\r\n                RoleName: localStorage.getItem('RoleName')!,\r\n                Token: localStorage.getItem('Token')!,\r\n                Expiration: new Date(localStorage.getItem('Expiration')!),\r\n                ConfigID: parseInt(localStorage.getItem('ConfigID')!),\r\n            };\r\n            return profile;\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n        },\r\n        isAuthencticated : () => {\r\n            return localStorage.getItem('Token') != null;\r\n        }\r\n}"]},"metadata":{},"sourceType":"module"}