{"ast":null,"code":"var _jsxFileName = \"E:\\\\Projects\\\\LFMS\\\\LFMS.WebUI\\\\src\\\\content\\\\pages\\\\Components\\\\DirectorType\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport { Grid, Container } from '@mui/material';\nimport { useRef, useState } from 'react';\nimport { DirectorTypeForm } from './DirectorTypeForm';\nimport DirectorTypeTable from './DirectorTypeTable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction DirectorType() {\n  _s();\n\n  const initualData = {\n    DirectorTypeName: \"\",\n    Remarks: \"\"\n  };\n  const [directorTypeData, setDirectorTypeData] = useState(initualData);\n  const [rerenderTableFlag, setrerenderTableFlag] = useState(false);\n  const directorTypeFormFunc = useRef(null);\n\n  const editHandler = (event, directorType) => {\n    event.stopPropagation();\n    setDirectorTypeData(directorType);\n\n    if (directorTypeFormFunc.current != null) {\n      var _directorTypeFormFunc;\n\n      (_directorTypeFormFunc = directorTypeFormFunc.current) === null || _directorTypeFormFunc === void 0 ? void 0 : _directorTypeFormFunc.call(directorTypeFormFunc);\n    }\n  };\n\n  const clearDirectorTypeData = () => {\n    setDirectorTypeData(initualData);\n  };\n\n  const rerenderTable = () => {\n    setrerenderTableFlag(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"lg\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        justifyContent: \"center\",\n        alignItems: \"stretch\",\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(DirectorTypeForm, {\n            clearForm: clearDirectorTypeData,\n            rerenderTable: rerenderTable,\n            directorTypeFormFunc: directorTypeFormFunc,\n            directorTypeData: directorTypeData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(DirectorTypeTable, {\n            editHandler: editHandler,\n            rerenderTableFlag: rerenderTableFlag\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(DirectorType, \"PUZk/T8KhfR7h1BApFLEFvJCUDI=\");\n\n_c = DirectorType;\nexport default DirectorType;\n\nvar _c;\n\n$RefreshReg$(_c, \"DirectorType\");","map":{"version":3,"sources":["E:/Projects/LFMS/LFMS.WebUI/src/content/pages/Components/DirectorType/index.tsx"],"names":["Grid","Container","useRef","useState","DirectorTypeForm","DirectorTypeTable","DirectorType","initualData","DirectorTypeName","Remarks","directorTypeData","setDirectorTypeData","rerenderTableFlag","setrerenderTableFlag","directorTypeFormFunc","editHandler","event","directorType","stopPropagation","current","clearDirectorTypeData","rerenderTable"],"mappings":";;;AAAA,SAASA,IAAT,EAAeC,SAAf,QAAgC,eAAhC;AACA,SAA4BC,MAA5B,EAAoCC,QAApC,QAAoD,OAApD;AAEA,SAASC,gBAAT,QAAiC,oBAAjC;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;;;;AAGA,SAASC,YAAT,GAAwB;AAAA;;AACpB,QAAMC,WAAW,GAAG;AAChBC,IAAAA,gBAAgB,EAAE,EADF;AAEhBC,IAAAA,OAAO,EAAE;AAFO,GAApB;AAIA,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CR,QAAQ,CAAoBI,WAApB,CAAxD;AACA,QAAM,CAACK,iBAAD,EAAoBC,oBAApB,IAA4CV,QAAQ,CAAU,KAAV,CAA1D;AACA,QAAMW,oBAAoB,GAAGZ,MAAM,CAAM,IAAN,CAAnC;;AACA,QAAMa,WAAgB,GAAG,CAACC,KAAD,EAAaC,YAAb,KAAmC;AACxDD,IAAAA,KAAK,CAACE,eAAN;AAEAP,IAAAA,mBAAmB,CAACM,YAAD,CAAnB;;AACA,QAAIH,oBAAoB,CAACK,OAArB,IAAgC,IAApC,EAA0C;AAAA;;AACtC,+BAAAL,oBAAoB,CAACK,OAArB,qFAAAL,oBAAoB;AACvB;AACJ,GAPD;;AAQA,QAAMM,qBAAqB,GAAG,MAAM;AAChCT,IAAAA,mBAAmB,CAACJ,WAAD,CAAnB;AACH,GAFD;;AAGA,QAAMc,aAAa,GAAG,MAAM;AACxBR,IAAAA,oBAAoB,CAAC,IAAD,CAApB;AACH,GAFD;;AAGA,sBACI;AAAA,2BAEI,QAAC,SAAD;AAAW,MAAA,QAAQ,EAAC,IAApB;AAAA,6BACI,QAAC,IAAD;AACI,QAAA,SAAS,MADb;AAEI,QAAA,SAAS,EAAC,KAFd;AAGI,QAAA,cAAc,EAAC,QAHnB;AAII,QAAA,UAAU,EAAC,SAJf;AAKI,QAAA,OAAO,EAAE,CALb;AAAA,gCAOI,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAA,iCACI,QAAC,gBAAD;AAAkB,YAAA,SAAS,EAAEO,qBAA7B;AAAoD,YAAA,aAAa,EAAEC,aAAnE;AAAkF,YAAA,oBAAoB,EAAEP,oBAAxG;AAA8H,YAAA,gBAAgB,EAAEJ;AAAhJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAPJ,eAUI,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAA,iCACI,QAAC,iBAAD;AAAmB,YAAA,WAAW,EAAEK,WAAhC;AAA6C,YAAA,iBAAiB,EAAEH;AAAhE;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAFJ,mBADJ;AAqBH;;GA3CQN,Y;;KAAAA,Y;AA6CT,eAAeA,YAAf","sourcesContent":["import { Grid, Container } from '@mui/material';\r\nimport { MouseEventHandler, useRef, useState } from 'react';\r\nimport Director from '../Director';\r\nimport { DirectorTypeForm } from './DirectorTypeForm';\r\nimport DirectorTypeTable from './DirectorTypeTable';\r\nimport { DirectorTypeModel } from '../../../../types/master.type';\r\n\r\nfunction DirectorType() {\r\n    const initualData = {\r\n        DirectorTypeName: \"\",\r\n        Remarks: \"\",\r\n    }\r\n    const [directorTypeData, setDirectorTypeData] = useState<DirectorTypeModel>(initualData);\r\n    const [rerenderTableFlag, setrerenderTableFlag] = useState<boolean>(false);\r\n    const directorTypeFormFunc = useRef<any>(null)\r\n    const editHandler: any = (event: any, directorType: any) => {\r\n        event.stopPropagation();\r\n\r\n        setDirectorTypeData(directorType);\r\n        if (directorTypeFormFunc.current != null) {\r\n            directorTypeFormFunc.current?.();\r\n        }\r\n    }\r\n    const clearDirectorTypeData = () => {\r\n        setDirectorTypeData(initualData);\r\n    }\r\n    const rerenderTable = () => {\r\n        setrerenderTableFlag(true);\r\n    }\r\n    return (\r\n        <>\r\n\r\n            <Container maxWidth=\"lg\">\r\n                <Grid\r\n                    container\r\n                    direction=\"row\"\r\n                    justifyContent=\"center\"\r\n                    alignItems=\"stretch\"\r\n                    spacing={3}\r\n                >\r\n                    <Grid item xs={12}>\r\n                        <DirectorTypeForm clearForm={clearDirectorTypeData} rerenderTable={rerenderTable} directorTypeFormFunc={directorTypeFormFunc} directorTypeData={directorTypeData}  />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <DirectorTypeTable editHandler={editHandler} rerenderTableFlag={rerenderTableFlag} />\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default DirectorType;\r\n"]},"metadata":{},"sourceType":"module"}