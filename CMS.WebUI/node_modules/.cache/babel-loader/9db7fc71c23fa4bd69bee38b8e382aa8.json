{"ast":null,"code":"var _jsxFileName = \"E:\\\\Projects\\\\LFMS\\\\LFMS.WebUI\\\\src\\\\content\\\\dashboards\\\\Crypto\\\\AccountBalanceChart.tsx\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { Doughnut } from 'react-chartjs-2';\nimport { useTheme } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AccountBalanceChart = _ref => {\n  _s();\n\n  var _dataProp$datasets;\n\n  let {\n    data: dataProp,\n    ...rest\n  } = _ref;\n  const theme = useTheme();\n  const data = {\n    datasets: (_dataProp$datasets = dataProp.datasets) === null || _dataProp$datasets === void 0 ? void 0 : _dataProp$datasets.map(dataset => ({ ...dataset,\n      borderWidth: 10,\n      borderColor: theme.colors.alpha.white[100],\n      hoverBorderColor: theme.colors.alpha.white[30]\n    })),\n    labels: dataProp.labels\n  };\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    animation: false,\n    cutoutPercentage: 60,\n    legend: {\n      display: false\n    },\n    layout: {\n      padding: 0\n    },\n    tooltips: {\n      enabled: true,\n      caretSize: 6,\n      displayColors: false,\n      mode: 'label',\n      intersect: true,\n      yPadding: 8,\n      xPadding: 16,\n      borderWidth: 2,\n      bodySpacing: 10,\n      borderColor: theme.colors.alpha.black[30],\n      backgroundColor: theme.palette.common.white,\n      titleFontColor: theme.palette.common.black,\n      bodyFontColor: theme.palette.common.black,\n      footerFontColor: theme.palette.common.black,\n      callbacks: {\n        label(tooltipItem, _data) {\n          const label = _data.labels[tooltipItem.index];\n          const value = _data.datasets[0].data[tooltipItem.index];\n          return `${label}: ${value}%`;\n        }\n\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Doughnut, {\n    data: data,\n    options: options,\n    ...rest\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 10\n  }, this);\n};\n\n_s(AccountBalanceChart, \"VrMvFCCB9Haniz3VCRPNUiCauHs=\", false, function () {\n  return [useTheme];\n});\n\n_c = AccountBalanceChart;\nAccountBalanceChart.propTypes = {\n  data: PropTypes.object.isRequired\n};\nexport default AccountBalanceChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountBalanceChart\");","map":{"version":3,"sources":["E:/Projects/LFMS/LFMS.WebUI/src/content/dashboards/Crypto/AccountBalanceChart.tsx"],"names":["PropTypes","Doughnut","useTheme","AccountBalanceChart","data","dataProp","rest","theme","datasets","map","dataset","borderWidth","borderColor","colors","alpha","white","hoverBorderColor","labels","options","responsive","maintainAspectRatio","animation","cutoutPercentage","legend","display","layout","padding","tooltips","enabled","caretSize","displayColors","mode","intersect","yPadding","xPadding","bodySpacing","black","backgroundColor","palette","common","titleFontColor","bodyFontColor","footerFontColor","callbacks","label","tooltipItem","_data","index","value","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import { FC } from 'react';\nimport PropTypes from 'prop-types';\nimport { Doughnut } from 'react-chartjs-2';\nimport { useTheme } from '@mui/material';\n\ninterface ChartProps {\n  data: any;\n}\n\nconst AccountBalanceChart: FC<ChartProps> = ({ data: dataProp, ...rest }) => {\n  const theme = useTheme();\n\n  const data = {\n    datasets: dataProp.datasets?.map((dataset:any) => ({\n      ...dataset,\n      borderWidth: 10,\n      borderColor: theme.colors.alpha.white[100],\n      hoverBorderColor: theme.colors.alpha.white[30]\n    })),\n    labels: dataProp.labels\n  };\n\n  const options : any = {\n    responsive: true,\n    maintainAspectRatio: false,\n    animation: false,\n    cutoutPercentage: 60,\n    legend: {\n      display: false\n    },\n    layout: {\n      padding: 0\n    },\n    tooltips: {\n      enabled: true,\n      caretSize: 6,\n      displayColors: false,\n      mode: 'label',\n      intersect: true,\n      yPadding: 8,\n      xPadding: 16,\n      borderWidth: 2,\n      bodySpacing: 10,\n      borderColor: theme.colors.alpha.black[30],\n      backgroundColor: theme.palette.common.white,\n      titleFontColor: theme.palette.common.black,\n      bodyFontColor: theme.palette.common.black,\n      footerFontColor: theme.palette.common.black,\n      callbacks: {\n        label(tooltipItem, _data) {\n          const label = _data.labels[tooltipItem.index];\n          const value = _data.datasets[0].data[tooltipItem.index];\n\n          return `${label}: ${value}%`;\n        }\n      }\n    }\n  };\n\n  return <Doughnut data={data} options={options} {...rest} />;\n};\n\nAccountBalanceChart.propTypes = {\n  data: PropTypes.object.isRequired\n};\n\nexport default AccountBalanceChart;\n"]},"metadata":{},"sourceType":"module"}