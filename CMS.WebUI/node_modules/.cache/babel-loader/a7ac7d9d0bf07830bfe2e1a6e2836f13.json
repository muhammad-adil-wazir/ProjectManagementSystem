{"ast":null,"code":"var _jsxFileName = \"E:\\\\Projects\\\\LFMS\\\\LFMS.WebUI\\\\src\\\\content\\\\pages\\\\Components\\\\RoleAccess\\\\RoleAccessTable.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { alpha } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport Paper from '@mui/material/Paper';\nimport Checkbox from '@mui/material/Checkbox';\nimport IconButton from '@mui/material/IconButton';\nimport Tooltip from '@mui/material/Tooltip';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Switch from '@mui/material/Switch';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { Post } from \"../../../../services/common.service\";\nimport { Autocomplete, Button, Card, CardContent, CardHeader, Divider, Grid, TextField } from '@mui/material';\nimport { useForm } from 'react-hook-form';\nimport { dropdowns } from '../../../../services/dropdowns.service';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc' ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\n} // This method is created for cross-browser compatibility, if you don't\n// need to support IE11, you can use Array.prototype.sort() directly\n\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n\n    if (order !== 0) {\n      return order;\n    }\n\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nfunction EnhancedTableHead(props) {\n  const {\n    headCells,\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort\n  } = props;\n\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return /*#__PURE__*/_jsxDEV(TableHead, {\n    children: /*#__PURE__*/_jsxDEV(TableRow, {\n      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n        padding: \"checkbox\",\n        children: \"Interface\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        padding: \"checkbox\",\n        children: /*#__PURE__*/_jsxDEV(Checkbox, {\n          color: \"primary\",\n          indeterminate: numSelected > 0 && numSelected < rowCount,\n          checked: rowCount > 0 && numSelected === rowCount,\n          onChange: onSelectAllClick,\n          inputProps: {\n            'aria-label': 'select all Add'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        padding: \"checkbox\",\n        children: /*#__PURE__*/_jsxDEV(Checkbox, {\n          color: \"primary\",\n          indeterminate: numSelected > 0 && numSelected < rowCount,\n          checked: rowCount > 0 && numSelected === rowCount,\n          onChange: onSelectAllClick,\n          inputProps: {\n            'aria-label': 'select all desserts'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        padding: \"checkbox\",\n        children: /*#__PURE__*/_jsxDEV(Checkbox, {\n          color: \"primary\",\n          indeterminate: numSelected > 0 && numSelected < rowCount,\n          checked: rowCount > 0 && numSelected === rowCount,\n          onChange: onSelectAllClick,\n          inputProps: {\n            'aria-label': 'select all desserts'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        padding: \"checkbox\",\n        children: /*#__PURE__*/_jsxDEV(Checkbox, {\n          color: \"primary\",\n          indeterminate: numSelected > 0 && numSelected < rowCount,\n          checked: rowCount > 0 && numSelected === rowCount,\n          onChange: onSelectAllClick,\n          inputProps: {\n            'aria-label': 'select all desserts'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        padding: \"checkbox\",\n        children: /*#__PURE__*/_jsxDEV(Checkbox, {\n          color: \"primary\",\n          indeterminate: numSelected > 0 && numSelected < rowCount,\n          checked: rowCount > 0 && numSelected === rowCount,\n          onChange: onSelectAllClick,\n          inputProps: {\n            'aria-label': 'select all desserts'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n}\n\n_c = EnhancedTableHead;\n\nconst EnhancedTableToolbar = props => {\n  const {\n    numSelected\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Toolbar, {\n    sx: {\n      pl: {\n        sm: 2\n      },\n      pr: {\n        xs: 1,\n        sm: 1\n      },\n      ...(numSelected > 0 && {\n        bgcolor: theme => alpha(theme.palette.primary.main, theme.palette.action.activatedOpacity)\n      })\n    },\n    children: [numSelected > 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n      sx: {\n        flex: '1 1 100%'\n      },\n      color: \"inherit\",\n      variant: \"subtitle1\",\n      component: \"div\",\n      children: [numSelected, \" selected\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n      sx: {\n        flex: '1 1 100%'\n      },\n      variant: \"h6\",\n      id: \"tableTitle\",\n      component: \"div\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 17\n    }, this), numSelected > 0 ? /*#__PURE__*/_jsxDEV(Tooltip, {\n      title: \"Delete\",\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 18\n    }, this) //<Tooltip title=\"Filter list\">\n    //    <IconButton>\n    //        <FilterListIcon />\n    //    </IconButton>\n    //</Tooltip>\n    ]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = EnhancedTableToolbar;\n\nconst RoleAccessTable = _ref => {\n  _s();\n\n  let {\n    columns\n  } = _ref;\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('');\n  const [selectedAdd, setSelectedAdd] = React.useState([]);\n  const [selectedEdit, setSelectedEdit] = React.useState([]);\n  const [selectedDelete, setSelectedDelete] = React.useState([]);\n  const [selectedView, setSelectedView] = React.useState([]);\n  const [selectedReport, setSelectedReport] = React.useState([]);\n  const [selectedAllAdd, setSelectedAllAdd] = React.useState(false);\n  const [selectedAllEdit, setSelectedAllEdit] = React.useState(false);\n  const [selectedAllDelete, setSelectedAllDelete] = React.useState(false);\n  const [selectedAllView, setSelectedAllView] = React.useState(false);\n  const [selectedAllReport, setSelectedAllReport] = React.useState(false);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const [rows, setRows] = React.useState([]);\n  const [rowCount, setRowCount] = React.useState(0);\n  const [roles, setRoles] = React.useState([]);\n  const [selectedRole, setSelectedRole] = React.useState();\n  const [totalRecords, setTotalRecords] = React.useState(0);\n  const [filter, setFilter] = React.useState();\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: {\n      errors\n    }\n  } = useForm({});\n  React.useEffect(() => {\n    dropdowns.getAllRoles().then(x => {\n      setRoles(x);\n      setSelectedRole({\n        RoleID: x[0].RoleID,\n        RoleName: x[0].RoleName\n      });\n      let aa = selectedRole;\n      let aaa = {\n        RoleID: x[0].RoleID,\n        RoleName: x[0].RoleName\n      }; //getFilteredData();\n    });\n  }, []);\n  React.useEffect(() => {\n    getFilteredData();\n  }, [selectedRole]);\n\n  const getFilteredData = () => {\n    //let _filter = undefined;\n    //if (isSearchAble == true) {\n    //    _filter = filter;\n    //}\n    //let _requestParamters: DataTableRequest = {\n    //    filter: {},\n    //    length: rowsPerPage,\n    //    start: page * rowsPerPage,\n    //    order: { orderBy: orderBy, orderDirection: order }\n    //};\n    Post('Security/GetRoleAccess', {\n      RoleID: selectedRole === null || selectedRole === void 0 ? void 0 : selectedRole.RoleID\n    }).then(response => {\n      if (response.status == 200) {\n        setRows(response.data.data);\n        setTotalRecords(response.data.recordsTotal);\n      }\n    }, error => {\n      const resMessage = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    });\n  };\n\n  const resetSearchForm = () => {\n    const formFields = {};\n    columns.map(x => {\n      if (x.numeric) {\n        formFields[x.id] = 0;\n      } else {\n        formFields[x.id] = '';\n      }\n    });\n    reset(formFields);\n    setFilter(formFields);\n  };\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n    getFilteredData();\n  };\n\n  const handleSelectAllByEvent = event => {\n    if (event.target.checked && event.target.id == 'chkAdd') {\n      const newSelectedAdds = rows.map(n => n['Add']);\n      setSelectedAdd(newSelectedAdds);\n      return;\n    } else if (event.target.checked && event.target.id == 'chkEdit') {\n      const newSelectedEdits = rows.map(n => n['Edit']);\n      setSelectedAdd(newSelectedEdits);\n      return;\n    } else if (event.target.checked && event.target.id == 'chkDelete') {\n      const newSelectedDeletes = rows.map(n => n['Delete']);\n      setSelectedAdd(newSelectedDeletes);\n      return;\n    } else if (event.target.checked && event.target.id == 'chkView') {\n      const newSelectedViews = rows.map(n => n['View']);\n      setSelectedAdd(newSelectedViews);\n      return;\n    } else if (event.target.checked && event.target.id == 'chkReport') {\n      const newSelectedReports = rows.map(n => n['Report']);\n      setSelectedAdd(newSelectedReports);\n      return;\n    }\n  };\n\n  const handleClick = (event, name) => {//const selectedIndex = selected.indexOf(name);\n    //let newSelected: readonly string[] = [];\n    //if (selectedIndex === -1) {\n    //    newSelected = newSelected.concat(selected, name);\n    //} else if (selectedIndex === 0) {\n    //    newSelected = newSelected.concat(selected.slice(1));\n    //} else if (selectedIndex === selected.length - 1) {\n    //    newSelected = newSelected.concat(selected.slice(0, -1));\n    //} else if (selectedIndex > 0) {\n    //    newSelected = newSelected.concat(\n    //        selected.slice(0, selectedIndex),\n    //        selected.slice(selectedIndex + 1),\n    //    );\n    //}\n    //setSelected(newSelected);\n  }; //const handleChangePage = (event: unknown, newPage: number) => {\n  //    setPage(newPage);\n  //    //getFilteredData();\n  //};\n  //const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n  //    setRowsPerPage(parseInt(event.target.value, 10));\n  //    setPage(0);\n  //    //getFilteredData();\n  //};\n\n\n  const handleChangeDense = event => {\n    setDense(event.target.checked);\n  };\n\n  const onSubmit = data => {\n    if (data != undefined) {\n      columns.map((column, index) => {\n        if (column.numeric == true) {\n          if (data[column.id] == undefined || data[column.id] == null || data[column.id] == '') {\n            data[column.id] = 0;\n          } else data[column.id] = parseInt(data[column.id]);\n        }\n      });\n    }\n\n    setFilter(data); //getFilteredData();\n  };\n\n  const handleSave = () => {\n    if (selectedRole) {\n      getFilteredData();\n    } else {\n      alert(\"Please select a role!\");\n    }\n  }; //const isSelected = (name: any) => selected.indexOf(name) !== -1;\n  //const editHandlerr = (name: any) => {\n  //    editHandler(name);\n  //};\n  // Avoid a layout jump when reaching the last page with empty rows.\n\n\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        title: \"Role Access Management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"row\",\n          justifyContent: \"center\",\n          alignItems: \"stretch\",\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n              onChange: (event, newValue) => {\n                setSelectedRole(newValue);\n              },\n              defaultValue: roles[0],\n              value: selectedRole,\n              disablePortal: true,\n              id: \"drpRole\",\n              options: roles,\n              getOptionLabel: role => role.RoleName,\n              renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                label: \"Role\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 406,\n                columnNumber: 58\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              sx: {\n                margin: 1\n              },\n              variant: \"contained\",\n              color: \"primary\",\n              onClick: handleSave,\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        width: '100%',\n        mb: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(TableContainer, {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          sx: {\n            minWidth: 750\n          },\n          \"aria-labelledby\": \"tableTitle\",\n          size: dense ? 'small' : 'medium',\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                padding: \"checkbox\",\n                children: \"Interface\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 427,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                padding: \"checkbox\",\n                children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                  id: \"chkAdd\",\n                  color: \"primary\",\n                  indeterminate: selectedAdd.length > 0 && selectedAdd.length < rowCount,\n                  checked: rowCount > 0 && selectedAdd.length === rowCount,\n                  onChange: handleSelectAllByEvent,\n                  inputProps: {\n                    'aria-label': 'select all Add'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 431,\n                  columnNumber: 37\n                }, this), \"Allow Add\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 430,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                padding: \"checkbox\",\n                children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                  id: \"chkEdit\",\n                  color: \"primary\",\n                  indeterminate: selectedEdit.length > 0 && selectedEdit.length < rowCount,\n                  checked: rowCount > 0 && selectedEdit.length === rowCount,\n                  onChange: handleSelectAllByEvent,\n                  inputProps: {\n                    'aria-label': 'select all Edit'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 441,\n                  columnNumber: 37\n                }, this), \"Allow Edit\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 440,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                padding: \"checkbox\",\n                children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                  id: \"chkDelete\",\n                  color: \"primary\",\n                  indeterminate: selectedDelete.length > 0 && selectedDelete.length < rowCount,\n                  checked: rowCount > 0 && selectedDelete.length === rowCount,\n                  onChange: handleSelectAllByEvent,\n                  inputProps: {\n                    'aria-label': 'select all Delete'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 451,\n                  columnNumber: 37\n                }, this), \"Allow View\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 450,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                padding: \"checkbox\",\n                children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                  id: \"chkView\",\n                  color: \"primary\",\n                  indeterminate: selectedView.length > 0 && selectedView.length < rowCount,\n                  checked: rowCount > 0 && selectedView.length === rowCount,\n                  onChange: handleSelectAllByEvent,\n                  inputProps: {\n                    'aria-label': 'select all View'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 461,\n                  columnNumber: 37\n                }, this), \"Allow Delete\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 460,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                padding: \"checkbox\",\n                children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                  id: \"chkReport\",\n                  color: \"primary\",\n                  indeterminate: selectedReport.length > 0 && selectedReport.length < rowCount,\n                  checked: rowCount > 0 && selectedReport.length === rowCount,\n                  onChange: handleSelectAllByEvent,\n                  inputProps: {\n                    'aria-label': 'select all Report'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 471,\n                  columnNumber: 37\n                }, this), \"Allow Report\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 470,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: [//stableSort(rows, getComparator(order, orderBy))\n            //.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n            rows.map((row, index) => {\n              //const isItemSelected = isSelected(row[columns[0].id]);\n              const labelId = `enhanced-table-checkbox-${index}`;\n              return (\n                /*#__PURE__*/\n\n                /* <TableRow hover onClick={(event) => handleClick(event, row[columns[0].id])} role=\"checkbox\" aria-checked={isItemSelected}  tabIndex={-1} key={row[0]} selected={isItemSelected}> */\n                _jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    padding: \"checkbox\",\n                    children: row.InterfaceName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 496,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    padding: \"checkbox\",\n                    children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                      color: \"primary\",\n                      checked: row.AllowAdd,\n                      inputProps: {\n                        'aria-labelledby': labelId\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 500,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 499,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    padding: \"checkbox\",\n                    children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                      color: \"primary\",\n                      checked: row.AllowEdit,\n                      inputProps: {\n                        'aria-labelledby': labelId\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 504,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 503,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    padding: \"checkbox\",\n                    children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                      color: \"primary\",\n                      checked: row.AllowDelete,\n                      inputProps: {\n                        'aria-labelledby': labelId\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 509,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 508,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    padding: \"checkbox\",\n                    children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                      color: \"primary\",\n                      checked: row.AllowView,\n                      inputProps: {\n                        'aria-labelledby': labelId\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 514,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 513,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    padding: \"checkbox\",\n                    children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                      color: \"primary\",\n                      checked: row.AllowReport,\n                      inputProps: {\n                        'aria-labelledby': labelId\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 519,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 518,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 495,\n                  columnNumber: 41\n                }, this)\n              );\n            }), emptyRows > 0 && /*#__PURE__*/_jsxDEV(TableRow, {\n              style: {\n                height: (dense ? 33 : 53) * emptyRows\n              },\n              children: /*#__PURE__*/_jsxDEV(TableCell, {\n                colSpan: 6\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 532,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 527,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(Switch, {\n        checked: dense,\n        onChange: handleChangeDense\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 549,\n        columnNumber: 26\n      }, this),\n      label: \"Dense padding\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 548,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 395,\n    columnNumber: 9\n  }, this);\n}; //DataTable.propTypes = {\n//    columns: PropTypes.array.isRequired\n//};\n//DataTable.defaultProps = {\n//    columns: []\n//};\n\n\n_s(RoleAccessTable, \"Nc6FA4u16irbVZeT1AXXcfRpCTc=\", false, function () {\n  return [useForm];\n});\n\n_c3 = RoleAccessTable;\nexport default RoleAccessTable;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"EnhancedTableHead\");\n$RefreshReg$(_c2, \"EnhancedTableToolbar\");\n$RefreshReg$(_c3, \"RoleAccessTable\");","map":{"version":3,"sources":["E:/Projects/LFMS/LFMS.WebUI/src/content/pages/Components/RoleAccess/RoleAccessTable.tsx"],"names":["React","alpha","Box","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Toolbar","Typography","Paper","Checkbox","IconButton","Tooltip","FormControlLabel","Switch","DeleteIcon","Post","Autocomplete","Button","Card","CardContent","CardHeader","Divider","Grid","TextField","useForm","dropdowns","descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","map","el","index","sort","EnhancedTableHead","props","headCells","onSelectAllClick","numSelected","rowCount","onRequestSort","createSortHandler","property","event","EnhancedTableToolbar","pl","sm","pr","xs","bgcolor","theme","palette","primary","main","action","activatedOpacity","flex","RoleAccessTable","columns","setOrder","useState","setOrderBy","selectedAdd","setSelectedAdd","selectedEdit","setSelectedEdit","selectedDelete","setSelectedDelete","selectedView","setSelectedView","selectedReport","setSelectedReport","selectedAllAdd","setSelectedAllAdd","selectedAllEdit","setSelectedAllEdit","selectedAllDelete","setSelectedAllDelete","selectedAllView","setSelectedAllView","selectedAllReport","setSelectedAllReport","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","rows","setRows","setRowCount","roles","setRoles","selectedRole","setSelectedRole","totalRecords","setTotalRecords","filter","setFilter","register","handleSubmit","reset","formState","errors","useEffect","getAllRoles","then","x","RoleID","RoleName","aa","aaa","getFilteredData","response","status","data","recordsTotal","error","resMessage","message","toString","resetSearchForm","formFields","numeric","id","handleRequestSort","isAsc","handleSelectAllByEvent","target","checked","newSelectedAdds","n","newSelectedEdits","newSelectedDeletes","newSelectedViews","newSelectedReports","handleClick","name","handleChangeDense","onSubmit","undefined","column","parseInt","handleSave","alert","emptyRows","Math","max","length","width","newValue","role","params","margin","mb","minWidth","row","labelId","InterfaceName","AllowAdd","AllowEdit","AllowDelete","AllowView","AllowReport","height"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { alpha } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableSortLabel from '@mui/material/TableSortLabel';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Paper from '@mui/material/Paper';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Switch from '@mui/material/Switch';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport { Column, DataTableRequest, DataTableResponse } from '../../../../models/table.type';\r\nimport { Post, Get } from \"../../../../services/common.service\";\r\nimport { InterfaceModel, LocationModel, RoleModel } from \"../../../../types/security.type\";\r\nimport { Autocomplete, Avatar, Button, Card, CardContent, CardHeader, Container, Divider, Grid, Hidden, makeStyles, Stack, TextField } from '@mui/material';\r\nimport { useForm } from 'react-hook-form';\r\nimport { dropdowns } from '../../../../services/dropdowns.service';\r\n\r\nfunction descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n        return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\ntype Order = 'asc' | 'desc';\r\n\r\nfunction getComparator<Key extends keyof any>(\r\n    order: Order,\r\n    orderBy: Key,\r\n): (\r\n        a: { [key in Key]: number | string },\r\n        b: { [key in Key]: number | string },\r\n    ) => number {\r\n    return order === 'desc'\r\n        ? (a, b) => descendingComparator(a, b, orderBy)\r\n        : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\n// This method is created for cross-browser compatibility, if you don't\r\n// need to support IE11, you can use Array.prototype.sort() directly\r\nfunction stableSort<T>(array: readonly T[], comparator: (a: T, b: T) => number) {\r\n    const stabilizedThis = array.map((el, index) => [el, index] as [T, number]);\r\n    stabilizedThis.sort((a, b) => {\r\n        const order = comparator(a[0], b[0]);\r\n        if (order !== 0) {\r\n            return order;\r\n        }\r\n        return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\ninterface EnhancedTableProps {\r\n    headCells: Column[];\r\n    numSelected: number;\r\n    onRequestSort: (event: React.MouseEvent<unknown>, property: string) => void;\r\n    onSelectAllClick: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n    order: Order;\r\n    orderBy: string;\r\n    rowCount: number;\r\n}\r\n\r\nfunction EnhancedTableHead(props: EnhancedTableProps) {\r\n    const { headCells, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } =\r\n        props;\r\n    const createSortHandler =\r\n        (property: string) => (event: React.MouseEvent<unknown>) => {\r\n            onRequestSort(event, property);\r\n        };\r\n\r\n    return (\r\n        <TableHead>\r\n            <TableRow>\r\n                <TableCell padding=\"checkbox\">\r\n                    Interface\r\n                </TableCell>\r\n                <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                        color=\"primary\" indeterminate={numSelected > 0 && numSelected < rowCount}\r\n                        checked={rowCount > 0 && numSelected === rowCount}\r\n                        onChange={onSelectAllClick}\r\n                        inputProps={{\r\n                            'aria-label': 'select all Add',\r\n                        }}\r\n                    />\r\n                </TableCell>\r\n                <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                        color=\"primary\"\r\n                        indeterminate={numSelected > 0 && numSelected < rowCount}\r\n                        checked={rowCount > 0 && numSelected === rowCount}\r\n                        onChange={onSelectAllClick}\r\n                        inputProps={{\r\n                            'aria-label': 'select all desserts',\r\n                        }}\r\n                    />\r\n                </TableCell>\r\n                <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                        color=\"primary\"\r\n                        indeterminate={numSelected > 0 && numSelected < rowCount}\r\n                        checked={rowCount > 0 && numSelected === rowCount}\r\n                        onChange={onSelectAllClick}\r\n                        inputProps={{\r\n                            'aria-label': 'select all desserts',\r\n                        }}\r\n                    />\r\n                </TableCell>\r\n                <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                        color=\"primary\"\r\n                        indeterminate={numSelected > 0 && numSelected < rowCount}\r\n                        checked={rowCount > 0 && numSelected === rowCount}\r\n                        onChange={onSelectAllClick}\r\n                        inputProps={{\r\n                            'aria-label': 'select all desserts',\r\n                        }}\r\n                    />\r\n                </TableCell>\r\n                <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                        color=\"primary\"\r\n                        indeterminate={numSelected > 0 && numSelected < rowCount}\r\n                        checked={rowCount > 0 && numSelected === rowCount}\r\n                        onChange={onSelectAllClick}\r\n                        inputProps={{\r\n                            'aria-label': 'select all desserts',\r\n                        }}\r\n                    />\r\n                </TableCell>\r\n            </TableRow>\r\n        </TableHead>\r\n    );\r\n}\r\n\r\ninterface EnhancedTableToolbarProps {\r\n    numSelected: number;\r\n\r\n}\r\n\r\nconst EnhancedTableToolbar = (props: EnhancedTableToolbarProps) => {\r\n    const { numSelected } = props;\r\n\r\n    return (\r\n        <Toolbar\r\n            sx={{\r\n                pl: { sm: 2 },\r\n                pr: { xs: 1, sm: 1 },\r\n                ...(numSelected > 0 && {\r\n                    bgcolor: (theme) =>\r\n                        alpha(theme.palette.primary.main, theme.palette.action.activatedOpacity),\r\n                }),\r\n            }}\r\n        >\r\n            {numSelected > 0 ? (\r\n                <Typography\r\n                    sx={{ flex: '1 1 100%' }}\r\n                    color=\"inherit\"\r\n                    variant=\"subtitle1\"\r\n                    component=\"div\"\r\n                >\r\n                    {numSelected} selected\r\n                </Typography>\r\n            ) : (\r\n                <Typography\r\n                    sx={{ flex: '1 1 100%' }}\r\n                    variant=\"h6\"\r\n                    id=\"tableTitle\"\r\n                    component=\"div\"\r\n                >\r\n                    {/*Nutrition*/}\r\n                </Typography>\r\n            )}\r\n            {numSelected > 0 ? (\r\n                <Tooltip title=\"Delete\">\r\n                    <IconButton>\r\n                        <DeleteIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n            ) : (<span></span>\r\n                //<Tooltip title=\"Filter list\">\r\n                //    <IconButton>\r\n                //        <FilterListIcon />\r\n                //    </IconButton>\r\n                //</Tooltip>\r\n            )}\r\n        </Toolbar>\r\n    );\r\n};\r\n\r\nconst RoleAccessTable: React.FC<any> = ({ columns, }) => {\r\n\r\n    const [order, setOrder] = React.useState<Order>('asc');\r\n    const [orderBy, setOrderBy] = React.useState<string>('');\r\n    const [selectedAdd, setSelectedAdd] = React.useState<readonly string[]>([]);\r\n    const [selectedEdit, setSelectedEdit] = React.useState<readonly string[]>([]);\r\n    const [selectedDelete, setSelectedDelete] = React.useState<readonly string[]>([]);\r\n    const [selectedView, setSelectedView] = React.useState<readonly string[]>([]);\r\n    const [selectedReport, setSelectedReport] = React.useState<readonly string[]>([]);\r\n    const [selectedAllAdd, setSelectedAllAdd] = React.useState<boolean>(false);\r\n    const [selectedAllEdit, setSelectedAllEdit] = React.useState<boolean>(false);\r\n    const [selectedAllDelete, setSelectedAllDelete] = React.useState<boolean>(false);\r\n    const [selectedAllView, setSelectedAllView] = React.useState<boolean>(false);\r\n    const [selectedAllReport, setSelectedAllReport] = React.useState<boolean>(false);\r\n    const [page, setPage] = React.useState(0);\r\n    const [dense, setDense] = React.useState(false);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n    const [rows, setRows] = React.useState<InterfaceModel[]>([]);\r\n    const [rowCount, setRowCount] = React.useState<number>(0);\r\n    const [roles, setRoles] = React.useState<RoleModel[]>([]);\r\n    const [selectedRole, setSelectedRole] = React.useState<RoleModel>();\r\n    const [totalRecords, setTotalRecords] = React.useState<number>(0);\r\n    const [filter, setFilter] = React.useState<any>();\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        reset,\r\n        formState: { errors }\r\n    } = useForm<any>({\r\n    });\r\n    React.useEffect(() => {\r\n        dropdowns.getAllRoles().then(x => {\r\n            setRoles(x);\r\n            setSelectedRole({ RoleID: x[0].RoleID, RoleName: x[0].RoleName });\r\n            let aa = selectedRole;\r\n            let aaa = { RoleID: x[0].RoleID, RoleName: x[0].RoleName };\r\n            //getFilteredData();\r\n        })\r\n    }, []);\r\n    React.useEffect(() => {\r\n        getFilteredData()\r\n    }, [selectedRole]);\r\n    const getFilteredData = () => {\r\n        //let _filter = undefined;\r\n        //if (isSearchAble == true) {\r\n        //    _filter = filter;\r\n        //}\r\n        //let _requestParamters: DataTableRequest = {\r\n        //    filter: {},\r\n        //    length: rowsPerPage,\r\n        //    start: page * rowsPerPage,\r\n        //    order: { orderBy: orderBy, orderDirection: order }\r\n        //};\r\n        Post('Security/GetRoleAccess', { RoleID: selectedRole?.RoleID }).then((response: any) => {\r\n            if (response.status == 200) {\r\n                setRows(response.data.data);\r\n                setTotalRecords(response.data.recordsTotal);\r\n            }\r\n        },\r\n            (error: any) => {\r\n                const resMessage =\r\n                    (error.response &&\r\n                        error.response.data &&\r\n                        error.response.data.message) ||\r\n                    error.message ||\r\n                    error.toString();\r\n            }\r\n        );\r\n    };\r\n    const resetSearchForm = () => {\r\n        const formFields = {};\r\n        columns.map(x => {\r\n            if (x.numeric) {\r\n                formFields[x.id] = 0;\r\n            }\r\n            else {\r\n                formFields[x.id] = '';\r\n            }\r\n        });\r\n        reset(formFields);\r\n        setFilter(formFields);\r\n    }\r\n    const handleRequestSort = (\r\n        event: React.MouseEvent<unknown>,\r\n        property: string,\r\n    ) => {\r\n        const isAsc = orderBy === property && order === 'asc';\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(property);\r\n        getFilteredData();\r\n    };\r\n\r\n    const handleSelectAllByEvent = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        if (event.target.checked && event.target.id == 'chkAdd') {\r\n            const newSelectedAdds = rows.map((n) => n['Add']);\r\n            setSelectedAdd(newSelectedAdds);\r\n            return;\r\n        }\r\n        else if (event.target.checked && event.target.id == 'chkEdit') {\r\n            const newSelectedEdits = rows.map((n) => n['Edit']);\r\n            setSelectedAdd(newSelectedEdits);\r\n            return;\r\n        }\r\n        else if (event.target.checked && event.target.id == 'chkDelete') {\r\n            const newSelectedDeletes = rows.map((n) => n['Delete']);\r\n            setSelectedAdd(newSelectedDeletes);\r\n            return;\r\n        }\r\n        else if (event.target.checked && event.target.id == 'chkView') {\r\n            const newSelectedViews = rows.map((n) => n['View']);\r\n            setSelectedAdd(newSelectedViews);\r\n            return;\r\n        }\r\n        else if (event.target.checked && event.target.id == 'chkReport') {\r\n            const newSelectedReports = rows.map((n) => n['Report']);\r\n            setSelectedAdd(newSelectedReports);\r\n            return;\r\n        }\r\n        \r\n    };\r\n\r\n    const handleClick = (event: React.MouseEvent<unknown>, name: any) => {\r\n        //const selectedIndex = selected.indexOf(name);\r\n        //let newSelected: readonly string[] = [];\r\n\r\n        //if (selectedIndex === -1) {\r\n        //    newSelected = newSelected.concat(selected, name);\r\n        //} else if (selectedIndex === 0) {\r\n        //    newSelected = newSelected.concat(selected.slice(1));\r\n        //} else if (selectedIndex === selected.length - 1) {\r\n        //    newSelected = newSelected.concat(selected.slice(0, -1));\r\n        //} else if (selectedIndex > 0) {\r\n        //    newSelected = newSelected.concat(\r\n        //        selected.slice(0, selectedIndex),\r\n        //        selected.slice(selectedIndex + 1),\r\n        //    );\r\n        //}\r\n\r\n        //setSelected(newSelected);\r\n    };\r\n\r\n    //const handleChangePage = (event: unknown, newPage: number) => {\r\n    //    setPage(newPage);\r\n    //    //getFilteredData();\r\n    //};\r\n\r\n    //const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    //    setRowsPerPage(parseInt(event.target.value, 10));\r\n    //    setPage(0);\r\n    //    //getFilteredData();\r\n    //};\r\n\r\n    const handleChangeDense = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setDense(event.target.checked);\r\n    };\r\n\r\n    const onSubmit = (data: any) => {\r\n        if (data != undefined) {\r\n            columns.map((column, index) => {\r\n                if (column.numeric == true) {\r\n                    if (data[column.id] == undefined || data[column.id] == null || data[column.id] == '') {\r\n                        data[column.id] = 0;\r\n                    }\r\n                    else\r\n                        data[column.id] = parseInt(data[column.id]);\r\n                }\r\n            });\r\n        }\r\n        setFilter(data);\r\n        //getFilteredData();\r\n    };\r\n\r\n    const handleSave = () => {\r\n        if (selectedRole) {\r\n            getFilteredData();\r\n        }\r\n        else {\r\n            alert(\"Please select a role!\");\r\n        }\r\n    }\r\n\r\n    //const isSelected = (name: any) => selected.indexOf(name) !== -1;\r\n\r\n    //const editHandlerr = (name: any) => {\r\n    //    editHandler(name);\r\n    //};\r\n    // Avoid a layout jump when reaching the last page with empty rows.\r\n    const emptyRows =\r\n        page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\r\n\r\n    return (\r\n        <Box sx={{ width: '100%' }}>\r\n            <Card>\r\n                <CardHeader title=\"Role Access Management\" />\r\n                <CardContent>\r\n                    <Grid container direction=\"row\" justifyContent=\"center\" alignItems=\"stretch\" spacing={3}>\r\n                        <Grid item xs={6}>\r\n                            <Autocomplete onChange={(event, newValue) => {\r\n                                    setSelectedRole(newValue!);\r\n                            }}\r\n                                defaultValue={roles[0]}\r\n                                value={selectedRole} disablePortal id=\"drpRole\" options={roles}  getOptionLabel={role => role.RoleName}\r\n                                renderInput={(params) => <TextField  {...params} label=\"Role\" />}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <Button sx={{ margin: 1 }} variant=\"contained\" color=\"primary\" onClick={handleSave}>Save</Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </CardContent>\r\n            </Card>\r\n           \r\n            <Divider />\r\n            <Paper sx={{ width: '100%', mb: 2 }}>\r\n                \r\n                <TableContainer>\r\n                    <Table\r\n                        sx={{ minWidth: 750 }}\r\n                        aria-labelledby=\"tableTitle\"\r\n                        size={dense ? 'small' : 'medium'}\r\n                    >\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell padding=\"checkbox\">\r\n                                    Interface\r\n                                </TableCell>\r\n                                <TableCell padding=\"checkbox\">\r\n                                    <Checkbox id=\"chkAdd\"\r\n                                        color=\"primary\" indeterminate={selectedAdd.length > 0 && selectedAdd.length < rowCount}\r\n                                        checked={rowCount > 0 && selectedAdd.length === rowCount} onChange={handleSelectAllByEvent}\r\n                                        inputProps={{\r\n                                            'aria-label': 'select all Add',\r\n                                        }}\r\n                                    />\r\n                                    Allow Add\r\n                                </TableCell>\r\n                                <TableCell padding=\"checkbox\">\r\n                                    <Checkbox id=\"chkEdit\"\r\n                                        color=\"primary\" indeterminate={selectedEdit.length > 0 && selectedEdit.length < rowCount}\r\n                                        checked={rowCount > 0 && selectedEdit.length === rowCount} onChange={handleSelectAllByEvent}\r\n                                        inputProps={{\r\n                                            'aria-label': 'select all Edit',\r\n                                        }}\r\n                                    />\r\n                                    Allow Edit\r\n                                </TableCell>\r\n                                <TableCell padding=\"checkbox\">\r\n                                    <Checkbox id=\"chkDelete\"\r\n                                        color=\"primary\" indeterminate={selectedDelete.length > 0 && selectedDelete.length < rowCount}\r\n                                        checked={rowCount > 0 && selectedDelete.length === rowCount} onChange={handleSelectAllByEvent}\r\n                                        inputProps={{\r\n                                            'aria-label': 'select all Delete',\r\n                                        }}\r\n                                    />\r\n                                    Allow View\r\n                                </TableCell>\r\n                                <TableCell padding=\"checkbox\">\r\n                                    <Checkbox id=\"chkView\"\r\n                                        color=\"primary\" indeterminate={selectedView.length > 0 && selectedView.length < rowCount}\r\n                                        checked={rowCount > 0 && selectedView.length === rowCount} onChange={handleSelectAllByEvent}\r\n                                        inputProps={{\r\n                                            'aria-label': 'select all View',\r\n                                        }}\r\n                                    />\r\n                                    Allow Delete\r\n                                </TableCell>\r\n                                <TableCell padding=\"checkbox\">\r\n                                    <Checkbox id=\"chkReport\"\r\n                                        color=\"primary\" indeterminate={selectedReport.length > 0 && selectedReport.length < rowCount}\r\n                                        checked={rowCount > 0 && selectedReport.length === rowCount} onChange={handleSelectAllByEvent}\r\n                                        inputProps={{\r\n                                            'aria-label': 'select all Report',\r\n                                        }}\r\n                                    />\r\n                                    Allow Report\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {/* if you don't need to support IE11, you can replace the `stableSort` call with:\r\n              rows.slice().sort(getComparator(order, orderBy)) */}\r\n                            {\r\n                                //stableSort(rows, getComparator(order, orderBy))\r\n                                //.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                rows.map((row, index) => {\r\n                                    //const isItemSelected = isSelected(row[columns[0].id]);\r\n                                    const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                                    return (\r\n                                        /* <TableRow hover onClick={(event) => handleClick(event, row[columns[0].id])} role=\"checkbox\" aria-checked={isItemSelected}  tabIndex={-1} key={row[0]} selected={isItemSelected}> */\r\n\r\n                                        <TableRow>\r\n                                            <TableCell padding=\"checkbox\">\r\n                                                {row.InterfaceName}\r\n                                            </TableCell>\r\n                                            <TableCell padding=\"checkbox\">\r\n                                                <Checkbox color=\"primary\" checked={row.AllowAdd} inputProps={{\r\n                                                            'aria-labelledby': labelId, }} />\r\n                                            </TableCell>\r\n                                            <TableCell padding=\"checkbox\">\r\n                                                <Checkbox color=\"primary\" checked={row.AllowEdit} inputProps={{\r\n                                                    'aria-labelledby': labelId,\r\n                                                }} />\r\n                                            </TableCell>\r\n                                            <TableCell padding=\"checkbox\">\r\n                                                <Checkbox color=\"primary\" checked={row.AllowDelete} inputProps={{\r\n                                                    'aria-labelledby': labelId,\r\n                                                }} />\r\n                                            </TableCell>\r\n                                            <TableCell padding=\"checkbox\">\r\n                                                <Checkbox color=\"primary\" checked={row.AllowView} inputProps={{\r\n                                                    'aria-labelledby': labelId,\r\n                                                }} />\r\n                                            </TableCell>\r\n                                            <TableCell padding=\"checkbox\">\r\n                                                <Checkbox color=\"primary\" checked={row.AllowReport} inputProps={{\r\n                                                    'aria-labelledby': labelId,\r\n                                                }} />\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    );\r\n                                })}\r\n                            {emptyRows > 0 && (\r\n                                <TableRow\r\n                                    style={{\r\n                                        height: (dense ? 33 : 53) * emptyRows,\r\n                                    }}\r\n                                >\r\n                                    <TableCell colSpan={6} />\r\n                                </TableRow>\r\n                            )}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                {/*<TablePagination*/}\r\n                {/*    rowsPerPageOptions={[5, 10, 25, 50]}*/}\r\n                {/*    component=\"div\"*/}\r\n                {/*    count={totalRecords}*/}\r\n                {/*    rowsPerPage={rowsPerPage}*/}\r\n                {/*    page={page}*/}\r\n                {/*    onPageChange={handleChangePage}*/}\r\n                {/*    onRowsPerPageChange={handleChangeRowsPerPage}*/}\r\n                {/*/>*/}\r\n            </Paper>\r\n            <FormControlLabel\r\n                control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n                label=\"Dense padding\"\r\n            />\r\n        </Box>\r\n    );\r\n}\r\n//DataTable.propTypes = {\r\n//    columns: PropTypes.array.isRequired\r\n//};\r\n\r\n//DataTable.defaultProps = {\r\n//    columns: []\r\n//};\r\n\r\nexport default RoleAccessTable;"]},"metadata":{},"sourceType":"module"}