{"ast":null,"code":"var _jsxFileName = \"E:\\\\Projects\\\\LFMS\\\\LFMS.WebUI\\\\src\\\\content\\\\pages\\\\Components\\\\Users\\\\UserTable.tsx\";\nimport { Divider, Card } from '@mui/material';\nimport { DataTable } from '../DataTables'; //import BulkActions from './BulkActions';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UsersTable = () => {\n  const headCells = [{\n    id: 'UserName',\n    numeric: false,\n    disablePadding: true,\n    label: 'Dessert (100g serving)'\n  }, {\n    id: 'calories',\n    numeric: true,\n    disablePadding: false,\n    label: 'Calories'\n  }, {\n    id: 'fat',\n    numeric: true,\n    disablePadding: false,\n    label: 'Fat (g)'\n  }, {\n    id: 'carbs',\n    numeric: true,\n    disablePadding: false,\n    label: 'Carbs (g)'\n  }, {\n    id: 'protein',\n    numeric: true,\n    disablePadding: false,\n    label: 'Protein (g)'\n  }];\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DataTable, {\n      cryptoOrders: []\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}; //UsersTable.propTypes = {\n//  cryptoOrders: PropTypes.array.isRequired\n//};\n//UsersTable.defaultProps = {\n//  cryptoOrders: []\n//};\n\n\n_c = UsersTable;\nexport default UsersTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"UsersTable\");","map":{"version":3,"sources":["E:/Projects/LFMS/LFMS.WebUI/src/content/pages/Components/Users/UserTable.tsx"],"names":["Divider","Card","DataTable","UsersTable","headCells","id","numeric","disablePadding","label"],"mappings":";AAIA,SAGEA,OAHF,EAOEC,IAPF,QAuBO,eAvBP;AAgCA,SAASC,SAAT,QAAoC,eAApC,C,CACA;;;;AAEA,MAAMC,UAAc,GAAG,MAAM;AACzB,QAAMC,SAA8B,GAAG,CACvC;AACIC,IAAAA,EAAE,EAAE,UADR;AAEIC,IAAAA,OAAO,EAAE,KAFb;AAGIC,IAAAA,cAAc,EAAE,IAHpB;AAIIC,IAAAA,KAAK,EAAE;AAJX,GADuC,EAOvC;AACIH,IAAAA,EAAE,EAAE,UADR;AAEIC,IAAAA,OAAO,EAAE,IAFb;AAGIC,IAAAA,cAAc,EAAE,KAHpB;AAIIC,IAAAA,KAAK,EAAE;AAJX,GAPuC,EAavC;AACIH,IAAAA,EAAE,EAAE,KADR;AAEIC,IAAAA,OAAO,EAAE,IAFb;AAGIC,IAAAA,cAAc,EAAE,KAHpB;AAIIC,IAAAA,KAAK,EAAE;AAJX,GAbuC,EAmBvC;AACIH,IAAAA,EAAE,EAAE,OADR;AAEIC,IAAAA,OAAO,EAAE,IAFb;AAGIC,IAAAA,cAAc,EAAE,KAHpB;AAIIC,IAAAA,KAAK,EAAE;AAJX,GAnBuC,EAyBvC;AACIH,IAAAA,EAAE,EAAE,SADR;AAEIC,IAAAA,OAAO,EAAE,IAFb;AAGIC,IAAAA,cAAc,EAAE,KAHpB;AAIIC,IAAAA,KAAK,EAAE;AAJX,GAzBuC,CAAvC;AAiCF,sBACE,QAAC,IAAD;AAAA,4BAEE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGM,QAAC,SAAD;AAAW,MAAA,YAAY,EAAE;AAAzB;AAAA;AAAA;AAAA;AAAA,YAHN;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CA1CD,C,CA4CA;AACA;AACA;AAEA;AACA;AACA;;;KAlDML,U;AAoDN,eAAeA,UAAf","sourcesContent":["import { FC, ChangeEvent, useState, ReactNode } from 'react';\r\nimport { format } from 'date-fns';\r\nimport numeral from 'numeral';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n    TableSortLabel, SortDirection,\r\n  Tooltip,\r\n  Divider,\r\n  Box,\r\n  FormControl,\r\n  InputLabel,\r\n  Card,\r\n  Checkbox,\r\n  IconButton,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  TableContainer,\r\n  Select,\r\n  MenuItem,\r\n  Typography,\r\n  useTheme,\r\n  CardHeader,\r\n  SelectChangeEvent\r\n} from '@mui/material';\r\n\r\nimport { DataTableRequest, DataTableResponse, Order } from '../../../../models/table.type';\r\nimport { post } from \"../../../../services/common.service\";\r\nimport { IUser } from '../../../../models/user'\r\nimport Label from '../../../../components/Label';\r\nimport EditTwoToneIcon from '@mui/icons-material/EditTwoTone';\r\nimport DeleteTwoToneIcon from '@mui/icons-material/DeleteTwoTone';\r\nimport { visuallyHidden } from '@mui/utils';\r\nimport { DataTable, HeadCell } from '../DataTables';\r\n//import BulkActions from './BulkActions';\r\n\r\nconst UsersTable: FC = () => {\r\n    const headCells: readonly HeadCell[] = [\r\n    {\r\n        id: 'UserName',\r\n        numeric: false,\r\n        disablePadding: true,\r\n        label: 'Dessert (100g serving)',\r\n    },\r\n    {\r\n        id: 'calories',\r\n        numeric: true,\r\n        disablePadding: false,\r\n        label: 'Calories',\r\n    },\r\n    {\r\n        id: 'fat',\r\n        numeric: true,\r\n        disablePadding: false,\r\n        label: 'Fat (g)',\r\n    },\r\n    {\r\n        id: 'carbs',\r\n        numeric: true,\r\n        disablePadding: false,\r\n        label: 'Carbs (g)',\r\n    },\r\n    {\r\n        id: 'protein',\r\n        numeric: true,\r\n        disablePadding: false,\r\n        label: 'Protein (g)',\r\n    },\r\n];\r\n \r\n  return (\r\n    <Card>\r\n     \r\n      <Divider />\r\n          <DataTable cryptoOrders={[] } />\r\n      </Card>\r\n\r\n  );\r\n};\r\n\r\n//UsersTable.propTypes = {\r\n//  cryptoOrders: PropTypes.array.isRequired\r\n//};\r\n\r\n//UsersTable.defaultProps = {\r\n//  cryptoOrders: []\r\n//};\r\n\r\nexport default UsersTable;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}