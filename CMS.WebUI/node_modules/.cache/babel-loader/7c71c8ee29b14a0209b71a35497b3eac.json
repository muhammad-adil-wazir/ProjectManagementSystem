{"ast":null,"code":"var _jsxFileName = \"E:\\\\Projects\\\\LFMS\\\\LFMS.WebUI\\\\src\\\\content\\\\pages\\\\Components\\\\Director\\\\DirectorForm.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Get, Post, API_BASE_URL, Delete } from \"../../../../services/common.service\";\nimport { object, string, number } from 'zod';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { Button, IconButton, Container, Grid, Card, CardHeader, CardContent, Divider, TextField, Box, Modal, Snackbar, Alert, Autocomplete, Tabs, Tab, AppBar, useTheme, Fab, ListItem, Stack, ListItemAvatar, Avatar, ListItemText, Checkbox } from '@mui/material';\nimport SwipeableViews from 'react-swipeable-views';\nimport { useForm } from 'react-hook-form';\nimport { dropdowns } from '../../../../services/dropdowns.service';\nimport { TabPanel, switchTab } from '../../../../components/TabPanel';\nimport { DatePicker } from '@mui/lab';\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload';\nimport DeleteOutlineTwoToneIcon from '@mui/icons-material/DeleteOutlineTwoTone';\nimport FilePresentTwoToneIcon from '@mui/icons-material/FilePresentTwoTone';\nimport { DirectorTypeForm } from '../../../../content/pages/Components/DirectorType/DirectorTypeForm';\nimport { DesignationForm } from '../../../../content/pages/Components/Designation/DesignationForm';\nimport { IDTypeForm } from '../../../../content/pages/Components/IDType/IDTypeForm';\nimport { NationalityForm } from '../../../../content/pages/Components/Nationality/NationalityForm';\nimport { PlaceOfBirthForm } from '../../../../content/pages/Components/PlaceOfBirth/PlaceOfBirthForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n//import { DatePicker as DatePickers, KeyboardDatePicker } from \"@material-ui/pickers\";\nconst label = {\n  inputProps: {\n    'aria-label': 'Switch demo'\n  }\n};\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 1100,\n  bgcolor: 'background.paper',\n  //border: '2px solid #000',\n  boxShadow: 24\n};\nconst uploadFileRowStyle = {\n  height: '83px',\n  overflowX: 'auto'\n};\nconst uploadFileStyle = {\n  padding: '30px 10px',\n  width: '250px',\n  'justify-content': 'flex-start'\n};\nconst uploadFileListItemStyle = {\n  width: '300px',\n  minWidth: '300px',\n  backgroundColor: 'lightgrey',\n  borderRadius: '15px',\n  height: '60px',\n  boxShadow: 24,\n  cursor: 'pointer'\n};\nexport const DirectorForm = _ref => {\n  _s();\n\n  let {\n    clearForm,\n    directorFormFunc,\n    directorData,\n    rerenderTable\n  } = _ref;\n  const [passportFilesDetail, setPassportFilesDetail] = useState([]);\n  const [passportFiles, setPassportFiles] = useState([]);\n  const [billFilesDetail, setBillFilesDetail] = useState([]);\n  const [billFiles, setBillFiles] = useState([]);\n  const [companyFilesDetail, setCompanyFilesDetail] = useState([]);\n  const [companyFiles, setCompanyFiles] = useState([]);\n  const [otherFilesDetail, setOtherFilesDetail] = useState([]);\n  const [otherFiles, setOtherFiles] = useState([]);\n  const [worldFilesDetail, setWorldFilesDetail] = useState([]);\n  const [worldFiles, setWorldFiles] = useState([]);\n  const [dobDate, setDobDate] = useState(null);\n  const [appointmentDate, setAppointmentDate] = useState(null);\n  const [cessationDate, setCessationDate] = useState(null);\n  const [directorTypes, setDirectorTypes] = useState([]);\n  const [selectedDirectorType, setSelectedDirectorType] = useState();\n  const [designations, setDesignations] = useState([]);\n  const [selectedDesignation, setSelectedDesignation] = useState();\n  const [nationalities, setNationalities] = useState([]);\n  const [selectedNationality, setSelectedNationality] = useState();\n  const [idTypes, setIDTypes] = useState([]);\n  const [selectedIdType, setselectedIdType] = useState({\n    IDTypeName: ''\n  });\n  const [placeOfBirths, setPlaceOfBirths] = useState([]);\n  const [selectedPlaceOfBirth, setSelectedPlaceOfBirth] = useState();\n  const [directorFormData, setDirectorFormData] = useState();\n  const [selectedTabIndex, setSelectedTabIndex] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [open, setOpen] = useState(false);\n  const theme = useTheme();\n  const [openDeleteModal, setOpenDeleteModal] = useState(false);\n  const [openSuccessAlert, setopenSuccessAlert] = useState(false);\n  const [openErrorAlert, setopenErrorAlert] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n\n  const handelOpenDeleteModal = () => {\n    setOpenDeleteModal(true);\n  };\n\n  const handelCloseDeleteModal = () => {\n    setOpenDeleteModal(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true); // reset(companyTypeData);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    reset(directorData);\n    resetForm();\n    clearForm();\n    setSelectedTabIndex(0);\n  };\n\n  const handleAlertClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setopenSuccessAlert(false);\n  };\n\n  const showModal = () => {\n    setOpen(true);\n    reset(directorData);\n  };\n\n  const resetForm = () => {\n    reset(directorData);\n    setPassportFiles([]);\n    setBillFiles([]);\n    setCompanyFiles([]);\n    setOtherFiles([]);\n    setWorldFiles([]);\n    setPassportFilesDetail([]);\n    setBillFilesDetail([]);\n    setCompanyFilesDetail([]);\n    setOtherFilesDetail([]);\n    setWorldFilesDetail([]);\n    clearForm();\n  };\n\n  const changeTab = index => {\n    return {\n      id: `simple-tab-${index}`,\n      'aria-controls': `simple-tabpanel-${index}`\n    };\n  };\n\n  useEffect(() => {\n    directorFormFunc.current = handleOpen;\n    reset(directorData);\n    loadDropdowns();\n  }, []);\n  useEffect(() => {\n    reset(directorData);\n    editForm(directorData);\n  }, [directorData, directorFormFunc]);\n\n  const editForm = data => {\n    data.DirectorType = {\n      DirectorTypeID: directorData.DirectorTypeID,\n      DirectorTypeName: directorData.DirectorTypeName\n    };\n    setselectedIdType({\n      IDTypeID: directorData.IDTypeID,\n      IDTypeName: directorData.IDTypeName\n    });\n    setSelectedNationality({\n      NationalityID: directorData.NationalityID,\n      NationalityName: directorData.NationalityName\n    });\n    setSelectedDesignation({\n      DesignationID: directorData.DesignationID,\n      DesignationName: directorData.DesignationName\n    });\n    setSelectedDirectorType({\n      DirectorTypeID: directorData.DirectorTypeID,\n      DirectorTypeName: directorData.DirectorTypeName\n    });\n    setSelectedPlaceOfBirth({\n      PlaceOfBirthID: directorData.PlaceOfBirthID,\n      PlaceOfBirthName: directorData.PlaceOfBirthName\n    });\n    setAppointmentDate(new Date(data.AppointmentDate));\n    setCessationDate(new Date(data.CessationDate));\n    setDobDate(new Date(data.DOB));\n\n    if (data.DirectorID) {\n      Get('Director/GetDirectorFiles?DirectorID=' + data.DirectorID).then(x => {\n        setPassportFilesDetail(x.data.PassportFiles);\n        setBillFilesDetail(x.data.BillFiles);\n        setCompanyFilesDetail(x.data.CompanyFiles);\n        setOtherFilesDetail(x.data.OtherFiles);\n        setWorldFilesDetail(x.data.WorldFiles);\n      });\n    }\n  };\n\n  const loadDropdowns = () => {\n    dropdowns.getAllDirectorTypes().then(x => setDirectorTypes(x));\n    dropdowns.getAllDesignations().then(x => setDesignations(x));\n    dropdowns.getAllNationalities().then(x => setNationalities(x));\n    dropdowns.getAllPlaceOfBirths().then(x => setPlaceOfBirths(x));\n    dropdowns.getAllIDTypes().then(x => {\n      console.log(x);\n      setIDTypes(x);\n    });\n  };\n\n  const validationSchema = object({\n    DirectorName: string().nonempty('Director Name is required'),\n    CompanyName: string().nonempty('Company Name is required').max(100, 'Company Name must be less than 100 characters'),\n    CompanyNumber: string().nonempty('Company number is required').max(50, 'Company number must be less than 50 characters'),\n    Email: string().nonempty('Email is required').email('invalid email address').max(40, 'Email  must be less than 40 characters'),\n    IDNumber: string().nonempty('ID Number is required').max(20, 'ID Number  must be less than 20 characters'),\n    ContactNumber: string().nonempty('Contact Number is required').max(150, 'Contact Number  must be less than 150 characters'),\n    PermanentAddress: string().nonempty('Permanent Address  is required').max(150, 'Permanent Address  must be less than 150 characters'),\n    ComunicationAddress: string().nonempty('Comunication Address   is required').max(150, 'Comunication Address  must be less than 150 characters'),\n    DirectorType: object({\n      DirectorTypeID: number().optional(),\n      DirectorTypeName: string().optional()\n    })\n  });\n  const {\n    register,\n    formState: {\n      errors,\n      isSubmitSuccessful\n    },\n    reset,\n    handleSubmit,\n    setValue\n  } = useForm({\n    resolver: zodResolver(validationSchema)\n  });\n\n  const onClickBack = () => {\n    setSelectedTabIndex(0);\n    switchTab(0); //switchTab(1);\n    //handleFormSubmit(data);\n    //console.log(JSON.stringify(data, null, 2));\n  };\n\n  const onSubmitHandler = values => {\n    var _PlaceOfBirthID, _DesignationID, _DirectorTypeID, _NationalityID, _IDTypeID;\n\n    values.PlaceOfBirthID = (_PlaceOfBirthID = selectedPlaceOfBirth.PlaceOfBirthID) !== null && _PlaceOfBirthID !== void 0 ? _PlaceOfBirthID : 0;\n    values.DesignationID = (_DesignationID = selectedDesignation.DesignationID) !== null && _DesignationID !== void 0 ? _DesignationID : 0;\n    values.DirectorTypeID = (_DirectorTypeID = selectedDirectorType.DirectorTypeID) !== null && _DirectorTypeID !== void 0 ? _DirectorTypeID : 0;\n    values.NationalityID = (_NationalityID = selectedNationality.NationalityID) !== null && _NationalityID !== void 0 ? _NationalityID : 0;\n    values.IDTypeID = (_IDTypeID = selectedIdType.IDTypeID) !== null && _IDTypeID !== void 0 ? _IDTypeID : 0;\n    values.AppointmentDate = new Date(values.AppointmentDate);\n    console.log(values);\n    setDirectorFormData(values);\n    setSelectedTabIndex(1);\n    switchTab(1);\n  };\n\n  const handleSave = () => {\n    let formData = new FormData();\n    formData.append(\"Director\", JSON.stringify(directorFormData));\n\n    for (var i = 1; i <= passportFiles.length; i++) {\n      formData.append('PassportFiles', passportFiles[i - 1]);\n    }\n\n    for (var i = 1; i <= billFiles.length; i++) {\n      formData.append('BillFiles', billFiles[i - 1]);\n    }\n\n    for (var i = 1; i <= companyFiles.length; i++) {\n      formData.append('CompanyFiles', companyFiles[i - 1]);\n    }\n\n    for (var i = 1; i <= otherFiles.length; i++) {\n      formData.append('OtherFiles', otherFiles[i - 1]);\n    }\n\n    for (var i = 1; i <= worldFiles.length; i++) {\n      formData.append('WorldFiles', worldFiles[i - 1]);\n    } // handleFormSubmit(formData); esra\n\n  };\n\n  const handleFormSubmit = formValue => {\n    var _DirectorID;\n\n    setLoading(true);\n    let _url = 'director/AddDirectorAsync';\n\n    if (directorFormData.DirectorID) {\n      _url = 'director/EditDirectorAsync';\n    }\n\n    let _directorID = (_DirectorID = directorFormData.DirectorID) !== null && _DirectorID !== void 0 ? _DirectorID : -1;\n\n    Get('master/IsNameExists?table=[Director]&column=DirectorName&id=DirectorID&idValue=' + _directorID + '&columnValue=' + directorFormData.DirectorName).then(response => {\n      if (response.data.status == 'success') {\n        Post(_url, formValue).then(response => {\n          // history.push(\"/profile\");\n          if (response.data.status == 'success') {\n            setMessage('Director Successfully Saved!');\n            setopenSuccessAlert(true);\n            handleClose();\n            rerenderTable();\n          }\n        }, error => {\n          const resMessage = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n          setLoading(false);\n          setMessage(resMessage);\n        });\n      } else {\n        alert('Record Already Exists!');\n      }\n    }, error => {\n      const resMessage = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n      setLoading(false);\n    });\n  };\n\n  const handleTabChange = (event, newValue) => {\n    setSelectedTabIndex(newValue);\n  };\n\n  const handleChangeIndex = index => {\n    setSelectedTabIndex(index);\n  };\n\n  const handleChangeFile = event => {\n    if (event.target.id == 'filePassport') {\n      let _passportFiles = passportFiles;\n\n      _passportFiles.push(...event.target.files);\n\n      setPassportFiles(_passportFiles);\n      let _passportFilesDetail = [];\n\n      for (let i = 0; i < _passportFiles.length; i++) {\n        _passportFilesDetail.push({\n          Name: _passportFiles[i].name\n        });\n      }\n\n      setPassportFilesDetail(_passportFilesDetail);\n    } else if (event.target.id == 'fileBills') {\n      let _billFiles = billFiles;\n\n      for (var i = 0; i < event.target.files.length; i++) {\n        _billFiles === null || _billFiles === void 0 ? void 0 : _billFiles.push(event.target.files[i]);\n      }\n\n      setBillFiles(_billFiles);\n      let _billFilesDetail = [];\n\n      for (let i = 0; i < _billFiles.length; i++) {\n        _billFilesDetail.push({\n          Name: _billFiles[i].name\n        });\n      }\n\n      setBillFilesDetail(_billFilesDetail);\n    } else if (event.target.id == 'fileCompanyDocs') {\n      let _companyFiles = companyFiles;\n\n      for (var i = 0; i < event.target.files.length; i++) {\n        _companyFiles === null || _companyFiles === void 0 ? void 0 : _companyFiles.push(event.target.files[i]);\n      }\n\n      setCompanyFiles(_companyFiles);\n      let _companyFilesDetail = [];\n\n      for (let i = 0; i < _companyFiles.length; i++) {\n        _companyFilesDetail.push({\n          Name: _companyFiles[i].name\n        });\n      }\n\n      setCompanyFilesDetail(_companyFilesDetail);\n    } else if (event.target.id == 'fileOtherDocs') {\n      let _otherFiles = otherFiles;\n\n      for (var i = 0; i < event.target.files.length; i++) {\n        _otherFiles === null || _otherFiles === void 0 ? void 0 : _otherFiles.push(event.target.files[i]);\n      }\n\n      setOtherFiles(_otherFiles);\n      let _otherFilesDetail = [];\n\n      for (let i = 0; i < _otherFiles.length; i++) {\n        _otherFilesDetail.push({\n          Name: _otherFiles[i].name\n        });\n      }\n\n      setOtherFilesDetail(_otherFilesDetail);\n    } else if (event.target.id == 'fileWorld') {\n      let _worldFiles = worldFiles;\n\n      for (var i = 0; i < event.target.files.length; i++) {\n        _worldFiles === null || _worldFiles === void 0 ? void 0 : _worldFiles.push(event.target.files[i]);\n      }\n\n      setWorldFiles(_worldFiles);\n      let _worldFilesDetail = [];\n\n      for (let i = 0; i < _worldFiles.length; i++) {\n        _worldFilesDetail.push({\n          Name: _worldFiles[i].name\n        });\n      }\n\n      setWorldFilesDetail(_worldFilesDetail);\n    }\n  };\n\n  const rerenderDirectorTypeTable = () => {\n    dropdowns.getAllDirectorTypes().then(x => setDirectorTypes(x));\n  };\n\n  const rerenderDesignationTable = () => {\n    dropdowns.getAllDesignations().then(x => setDesignations(x));\n  };\n\n  const rerenderIDTypeTable = () => {\n    dropdowns.getAllIDTypes().then(x => setIDTypes(x));\n  };\n\n  const rerenderNationalityTable = () => {\n    dropdowns.getAllNationalities().then(x => setNationalities(x));\n  };\n\n  const rerenderPlaceOfBirthTable = () => {\n    dropdowns.getAllPlaceOfBirths().then(x => setPlaceOfBirths(x));\n  };\n\n  const handleShowFile = file => {\n    if (file.Path != undefined && file.Path != '') {\n      window.open(API_BASE_URL + 'Content/Company/Director/' + file.Name, '_blank', 'noreferrer');\n    }\n  };\n\n  const handleDeleteFile = (event, file, category) => {\n    event.stopPropagation();\n\n    if (file.Path != undefined && file.Path != '') {\n      Delete('Director/DeleteDirectorFile?fileName=' + file.Name + '&category=' + category).then(response => {\n        if (response.data.status == 'success') {\n          setOpenDeleteModal(false);\n          setopenSuccessAlert(true);\n          setSuccessMessage('successfully Deleted');\n          handleClose();\n          rerenderTable();\n        }\n      }, error => {\n        const resMessage = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n        setLoading(false);\n        setopenErrorAlert(true);\n        setErrorMessage(resMessage);\n      });\n    }\n\n    if (category == 'passports') {\n      let _passportFiles = passportFiles.filter(x => x.name != file.Name);\n\n      setPassportFiles(_passportFiles);\n\n      let _passsportFilesDetail = passportFilesDetail.filter(x => x.Name != file.Name);\n\n      setPassportFilesDetail(_passsportFilesDetail);\n    }\n  };\n\n  const onDeleteHandler = () => {\n    Delete('Director/DeleteDirector?Id=' + directorData.DirectorID).then(response => {\n      if (response.data.status == 'success') {\n        setOpenDeleteModal(false);\n        setopenSuccessAlert(true);\n        setSuccessMessage('successfully Deleted');\n        rerenderTable();\n        handleClose();\n      } else {\n        setLoading(false);\n        setopenErrorAlert(true);\n        setErrorMessage(\"error\");\n      }\n    }, error => {\n      const resMessage = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n      setLoading(false);\n      setopenErrorAlert(true);\n      setErrorMessage(resMessage);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Snackbar, {\n      open: openSuccessAlert,\n      autoHideDuration: 5000,\n      onClose: handleAlertClose,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleAlertClose,\n        variant: \"filled\",\n        severity: \"success\",\n        sx: {\n          width: '100%'\n        },\n        children: successMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: openErrorAlert,\n      autoHideDuration: 5000,\n      onClose: handleAlertClose,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleAlertClose,\n        variant: \"filled\",\n        severity: \"error\",\n        sx: {\n          width: '100%'\n        },\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      sx: {\n        mt: 1\n      },\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleOpen,\n      children: \"+ Add Director\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: openDeleteModal,\n      onClose: handelCloseDeleteModal,\n      \"aria-labelledby\": \"modal-modal-title\",\n      \"aria-describedby\": \"modal-modal-description\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        justifyContent: \"center\",\n        alignItems: \"stretch\",\n        spacing: 1,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              title: \"Confirm Delete !\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 473,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 474,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  '& .MuiTextField-root': {\n                    my: 1,\n                    width: '25ch'\n                  }\n                },\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Are you sure to delete this director ?\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 481,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 476,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 475,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"button\",\n              sx: {\n                margin: 1\n              },\n              variant: \"contained\",\n              color: \"primary\",\n              onClick: onDeleteHandler,\n              children: \" Yes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 485,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              sx: {\n                margin: 1\n              },\n              variant: \"contained\",\n              color: \"error\",\n              onClick: handelCloseDeleteModal,\n              children: \" No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 486,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"modal-modal-title\",\n      \"aria-describedby\": \"modal-modal-description\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        noValidate: true,\n        autoComplete: \"off\",\n        onSubmit: handleSubmit(onSubmitHandler),\n        sx: style,\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          maxWidth: \"md\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"register-form\",\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              direction: \"row\",\n              justifyContent: \"center\",\n              alignItems: \"stretch\",\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(Card, {\n                  children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n                    title: \"Enter Director Detail\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 505,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 506,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(AppBar, {\n                    position: \"static\",\n                    children: /*#__PURE__*/_jsxDEV(Tabs, {\n                      value: selectedTabIndex //onChange={handleTabChange}\n                      ,\n                      indicatorColor: \"secondary\",\n                      textColor: \"inherit\",\n                      variant: \"fullWidth\",\n                      \"aria-label\": \"full width tabs example\",\n                      children: [/*#__PURE__*/_jsxDEV(Tab, {\n                        label: \"Details\",\n                        ...switchTab(0)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 516,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n                        label: \"Uploads\",\n                        ...switchTab(1)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 517,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 508,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 507,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n                    children: /*#__PURE__*/_jsxDEV(Box, {\n                      component: \"div\",\n                      sx: {\n                        '& .MuiTextField-root': {\n                          my: 1,\n                          width: '25ch'\n                        }\n                      },\n                      children: /*#__PURE__*/_jsxDEV(SwipeableViews, {\n                        axis: theme.direction === 'rtl' ? 'x-reverse' : 'x',\n                        index: selectedTabIndex,\n                        onChangeIndex: handleChangeIndex,\n                        children: [/*#__PURE__*/_jsxDEV(TabPanel, {\n                          value: selectedTabIndex,\n                          index: 0,\n                          dir: theme.direction,\n                          children: /*#__PURE__*/_jsxDEV(Grid, {\n                            container: true,\n                            direction: \"row\",\n                            justifyContent: \"center\",\n                            alignItems: \"stretch\",\n                            spacing: 1,\n                            children: [/*#__PURE__*/_jsxDEV(Grid, {\n                              item: true,\n                              xs: 3.6,\n                              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                                children: [/*#__PURE__*/_jsxDEV(TextField, {\n                                  style: {\n                                    width: '100%'\n                                  },\n                                  required: true,\n                                  id: \"outlined-required\",\n                                  label: \"Director Name\",\n                                  ...register('DirectorName'),\n                                  fullWidth: true,\n                                  error: !!errors['DirectorName'],\n                                  helperText: errors['DirectorName'] ? errors['DirectorName'].message : ''\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 534,\n                                  columnNumber: 69\n                                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                                  style: {\n                                    width: '100%'\n                                  },\n                                  required: true,\n                                  id: \"outlined-required\",\n                                  label: \"Company Name\",\n                                  ...register('CompanyName'),\n                                  fullWidth: true,\n                                  error: !!errors['CompanyName'],\n                                  helperText: errors['CompanyName'] ? errors['CompanyName'].message : ''\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 545,\n                                  columnNumber: 69\n                                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                                  style: {\n                                    width: '100%'\n                                  },\n                                  required: true,\n                                  id: \"outlined-required\",\n                                  label: \"Company Number\",\n                                  ...register('CompanyNumber'),\n                                  fullWidth: true,\n                                  error: !!errors['CompanyNumber'],\n                                  helperText: errors['CompanyNumber'] ? errors['CompanyNumber'].message : ''\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 556,\n                                  columnNumber: 69\n                                }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n                                  label: \"Appointment Date\",\n                                  ...register('AppointmentDate'),\n                                  value: appointmentDate,\n                                  onChange: newValue => {\n                                    setAppointmentDate(newValue);\n                                  },\n                                  renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n                                    style: {\n                                      width: '100%'\n                                    },\n                                    ...params,\n                                    required: true\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 572,\n                                    columnNumber: 98\n                                  }, this)\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 565,\n                                  columnNumber: 69\n                                }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n                                  label: \"DOB\",\n                                  ...register('DOB'),\n                                  value: dobDate,\n                                  onChange: newValue => {\n                                    setDobDate(newValue);\n                                  },\n                                  renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n                                    style: {\n                                      width: '100%'\n                                    },\n                                    fullWidth: true,\n                                    ...params,\n                                    required: true\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 581,\n                                    columnNumber: 98\n                                  }, this)\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 574,\n                                  columnNumber: 69\n                                }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n                                  label: \"Cessation Date\",\n                                  ...register('CessationDate'),\n                                  value: cessationDate,\n                                  onChange: newValue => {\n                                    setCessationDate(newValue);\n                                  },\n                                  renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n                                    style: {\n                                      width: '100%'\n                                    },\n                                    ...params,\n                                    required: true\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 590,\n                                    columnNumber: 98\n                                  }, this)\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 583,\n                                  columnNumber: 69\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 533,\n                                columnNumber: 65\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 532,\n                              columnNumber: 61\n                            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                              item: true,\n                              xs: 3.6,\n                              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                                children: [/*#__PURE__*/_jsxDEV(TextField, {\n                                  style: {\n                                    width: '100%'\n                                  },\n                                  required: true,\n                                  id: \"outlined-required\",\n                                  label: \"Email\",\n                                  ...register('Email'),\n                                  fullWidth: true,\n                                  error: !!errors['Email'],\n                                  helperText: errors['Email'] ? errors['Email'].message : ''\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 597,\n                                  columnNumber: 69\n                                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                                  style: {\n                                    width: '100%'\n                                  },\n                                  required: true,\n                                  id: \"outlined-required\",\n                                  label: \"ID Number\",\n                                  ...register('IDNumber'),\n                                  fullWidth: true,\n                                  error: !!errors['IDNumber'],\n                                  helperText: errors['IDNumber'] ? errors['IDNumber'].message : ''\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 608,\n                                  columnNumber: 69\n                                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                                  style: {\n                                    width: '100%'\n                                  },\n                                  required: true,\n                                  id: \"outlined-required\",\n                                  label: \"Contact Number\",\n                                  ...register('ContactNumber'),\n                                  fullWidth: true,\n                                  error: !!errors['ContactNumber'],\n                                  helperText: errors['ContactNumber'] ? errors['ContactNumber'].message : ''\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 618,\n                                  columnNumber: 69\n                                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                                  multiline: true,\n                                  style: {\n                                    width: '100%'\n                                  },\n                                  type: \"text\",\n                                  required: true,\n                                  id: \"outlined-required\",\n                                  label: \"Permanant Address\",\n                                  ...register('PermanentAddress'),\n                                  fullWidth: true,\n                                  error: !!errors['PermanentAddress'],\n                                  helperText: errors['PermanentAddress'] ? errors['PermanentAddress'].message : ''\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 628,\n                                  columnNumber: 69\n                                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                                  multiline: true,\n                                  style: {\n                                    width: '100%'\n                                  },\n                                  type: \"text\",\n                                  required: true,\n                                  id: \"outlined-required\",\n                                  label: \"Comunication Address\",\n                                  ...register('ComunicationAddress'),\n                                  fullWidth: true,\n                                  error: !!errors['ComunicationAddress'],\n                                  helperText: errors['ComunicationAddress'] ? errors['ComunicationAddress'].message : ''\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 638,\n                                  columnNumber: 69\n                                }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n                                  color: \"primary\",\n                                  checked: true,\n                                  inputProps: {\n                                    'aria-labelledby': 'Is World Check'\n                                  }\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 648,\n                                  columnNumber: 69\n                                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                                  children: \"Is World Check\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 655,\n                                  columnNumber: 69\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 596,\n                                columnNumber: 65\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 595,\n                              columnNumber: 61\n                            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                              item: true,\n                              xs: 3.6,\n                              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                                children: [/*#__PURE__*/_jsxDEV(Autocomplete, { ...register('DirectorType'),\n                                  disablePortal: true,\n                                  style: {\n                                    width: '100%'\n                                  },\n                                  id: \"drpDirectorType\",\n                                  options: directorTypes,\n                                  getOptionLabel: directorTypes => directorTypes.DirectorTypeName,\n                                  renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n                                    style: {\n                                      width: '100%'\n                                    },\n                                    ...params,\n                                    label: \"Director Type\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 666,\n                                    columnNumber: 98\n                                  }, this)\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 660,\n                                  columnNumber: 69\n                                }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n                                  onChange: (event, newValue) => {\n                                    setselectedIdType(newValue);\n                                  },\n                                  value: selectedIdType,\n                                  disablePortal: true,\n                                  id: \"drpIDType\",\n                                  options: idTypes,\n                                  getOptionLabel: idType => idType.IDTypeName,\n                                  renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n                                    style: {\n                                      width: '100%'\n                                    },\n                                    ...params,\n                                    label: \"ID Type\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 677,\n                                    columnNumber: 98\n                                  }, this)\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 668,\n                                  columnNumber: 69\n                                }, this), /*#__PURE__*/_jsxDEV(Autocomplete, { ...register('PlaceOfBirthID'),\n                                  onChange: (event, newValue) => {\n                                    setSelectedPlaceOfBirth(newValue);\n                                  },\n                                  value: selectedPlaceOfBirth,\n                                  disablePortal: true,\n                                  style: {\n                                    width: '100%'\n                                  },\n                                  id: \"drpPlaceOfBirth\",\n                                  options: placeOfBirths,\n                                  getOptionLabel: placeOfBirths => placeOfBirths.PlaceOfBirthName,\n                                  renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n                                    style: {\n                                      width: '100%'\n                                    },\n                                    ...params,\n                                    label: \"Place of Birth\",\n                                    required: true\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 689,\n                                    columnNumber: 98\n                                  }, this)\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 679,\n                                  columnNumber: 69\n                                }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n                                  onChange: (event, newValue) => {\n                                    setSelectedDesignation(newValue);\n                                  },\n                                  value: selectedDesignation,\n                                  disablePortal: true,\n                                  style: {\n                                    width: '100%'\n                                  },\n                                  id: \"drpDesignation\",\n                                  options: designations,\n                                  getOptionLabel: designations => designations.DesignationName,\n                                  renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n                                    style: {\n                                      width: '100%'\n                                    },\n                                    ...params,\n                                    label: \"Designation\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 703,\n                                    columnNumber: 98\n                                  }, this)\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 694,\n                                  columnNumber: 69\n                                }, this), /*#__PURE__*/_jsxDEV(Autocomplete, { ...register('NationalityID'),\n                                  onChange: (event, newValue) => {\n                                    setSelectedNationality(newValue);\n                                  },\n                                  value: selectedNationality,\n                                  disablePortal: true,\n                                  style: {\n                                    width: '100%'\n                                  },\n                                  id: \"drpNationality\",\n                                  options: nationalities,\n                                  getOptionLabel: nationalities => nationalities.NationalityName,\n                                  renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n                                    style: {\n                                      width: '100%'\n                                    },\n                                    ...params,\n                                    label: \"Nationality\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 715,\n                                    columnNumber: 98\n                                  }, this)\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 705,\n                                  columnNumber: 69\n                                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                                  style: {\n                                    width: '100%'\n                                  },\n                                  type: \"text\",\n                                  id: \"outlined-required\",\n                                  label: \"Remarks\",\n                                  ...register('Remarks')\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 717,\n                                  columnNumber: 69\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 659,\n                                columnNumber: 65\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 658,\n                              columnNumber: 61\n                            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                              item: true,\n                              xs: 1.2,\n                              children: [/*#__PURE__*/_jsxDEV(DirectorTypeForm, {\n                                xs: {\n                                  mb: 3\n                                },\n                                clearForm: () => {},\n                                rerenderDirectorTypeTable: rerenderDirectorTypeTable,\n                                directorTypeFormFunc: useRef(null),\n                                directorTypeData: selectedDirectorType,\n                                AddButtonLabel: \"Add\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 727,\n                                columnNumber: 65\n                              }, this), /*#__PURE__*/_jsxDEV(IDTypeForm, {\n                                clearForm: () => {},\n                                rerenderIDTypeTable: rerenderIDTypeTable,\n                                iDTypeFormFunc: useRef(null),\n                                idTypeData: selectedIdType,\n                                AddButtonLabel: \"Add\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 728,\n                                columnNumber: 65\n                              }, this), /*#__PURE__*/_jsxDEV(PlaceOfBirthForm, {\n                                clearForm: () => {},\n                                rerenderPlaceOfBirthTable: rerenderPlaceOfBirthTable,\n                                placeOfBirthFormFunc: useRef(null),\n                                directorTypeData: selectedPlaceOfBirth,\n                                AddButtonLabel: \"Add\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 729,\n                                columnNumber: 65\n                              }, this), /*#__PURE__*/_jsxDEV(DesignationForm, {\n                                clearForm: () => {},\n                                rerenderDesignationTable: rerenderDesignationTable,\n                                designationFormFunc: useRef(null),\n                                designationData: selectedDesignation,\n                                AddButtonLabel: \"Add\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 730,\n                                columnNumber: 65\n                              }, this), /*#__PURE__*/_jsxDEV(NationalityForm, {\n                                clearForm: () => {},\n                                rerenderNationalityTable: rerenderNationalityTable,\n                                nationalityFormFunc: useRef(null),\n                                nationalityData: selectedNationality,\n                                AddButtonLabel: \"Add\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 732,\n                                columnNumber: 65\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 726,\n                              columnNumber: 61\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 525,\n                            columnNumber: 57\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 524,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n                          value: selectedTabIndex,\n                          index: 1,\n                          dir: theme.direction,\n                          children: [/*#__PURE__*/_jsxDEV(Grid, {\n                            container: true,\n                            direction: \"row\",\n                            sx: uploadFileRowStyle,\n                            justifyContent: \"center\",\n                            alignItems: \"stretch\",\n                            children: [/*#__PURE__*/_jsxDEV(Grid, {\n                              item: true,\n                              xs: 3.5,\n                              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                                htmlFor: \"filePassport\",\n                                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                                  style: {\n                                    display: 'none'\n                                  },\n                                  onChange: handleChangeFile,\n                                  id: \"filePassport\",\n                                  name: \"upload-photo\",\n                                  type: \"file\",\n                                  multiple: true\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 741,\n                                  columnNumber: 69\n                                }, this), /*#__PURE__*/_jsxDEV(Fab, {\n                                  sx: uploadFileStyle,\n                                  color: \"secondary\",\n                                  size: \"small\",\n                                  component: \"div\",\n                                  \"aria-label\": \"add\",\n                                  variant: \"extended\",\n                                  children: [/*#__PURE__*/_jsxDEV(CloudUploadIcon, {\n                                    fontSize: \"large\",\n                                    sx: {\n                                      mr: 2\n                                    }\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 743,\n                                    columnNumber: 73\n                                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                                    style: {},\n                                    children: \"Upload Passport\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 744,\n                                    columnNumber: 73\n                                  }, this)]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 742,\n                                  columnNumber: 69\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 740,\n                                columnNumber: 65\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 739,\n                              columnNumber: 61\n                            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                              item: true,\n                              xs: 8.5,\n                              children: /*#__PURE__*/_jsxDEV(Stack, {\n                                direction: \"row\",\n                                spacing: 2,\n                                sx: {\n                                  overflowX: 'auto',\n                                  height: '75px'\n                                },\n                                children: passportFilesDetail.map(x => {\n                                  return /*#__PURE__*/_jsxDEV(ListItem, {\n                                    sx: uploadFileListItemStyle,\n                                    onClick: () => handleShowFile(x),\n                                    secondaryAction: /*#__PURE__*/_jsxDEV(IconButton, {\n                                      edge: \"end\",\n                                      \"aria-label\": \"delete\",\n                                      onClick: e => handleDeleteFile(e, x, 'passports'),\n                                      children: /*#__PURE__*/_jsxDEV(DeleteOutlineTwoToneIcon, {}, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 757,\n                                        columnNumber: 93\n                                      }, this)\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 756,\n                                      columnNumber: 89\n                                    }, this),\n                                    children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                                      children: /*#__PURE__*/_jsxDEV(Avatar, {\n                                        children: /*#__PURE__*/_jsxDEV(FilePresentTwoToneIcon, {}, void 0, false, {\n                                          fileName: _jsxFileName,\n                                          lineNumber: 763,\n                                          columnNumber: 93\n                                        }, this)\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 762,\n                                        columnNumber: 89\n                                      }, this)\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 761,\n                                      columnNumber: 85\n                                    }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                                      primary: x.Name\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 766,\n                                      columnNumber: 85\n                                    }, this)]\n                                  }, void 0, true, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 754,\n                                    columnNumber: 81\n                                  }, this);\n                                })\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 750,\n                                columnNumber: 65\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 749,\n                              columnNumber: 61\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 738,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                            container: true,\n                            direction: \"row\",\n                            sx: uploadFileRowStyle,\n                            justifyContent: \"flex-start\",\n                            alignItems: \"stretch\",\n                            children: [/*#__PURE__*/_jsxDEV(Grid, {\n                              item: true,\n                              xs: 3.5,\n                              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                                htmlFor: \"fileBills\",\n                                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                                  style: {\n                                    display: 'none'\n                                  },\n                                  onChange: handleChangeFile,\n                                  id: \"fileBills\",\n                                  name: \"upload-bill\",\n                                  type: \"file\",\n                                  multiple: true\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 780,\n                                  columnNumber: 69\n                                }, this), /*#__PURE__*/_jsxDEV(Fab, {\n                                  sx: uploadFileStyle,\n                                  color: \"secondary\",\n                                  size: \"small\",\n                                  component: \"span\",\n                                  \"aria-label\": \"add\",\n                                  variant: \"extended\",\n                                  children: [/*#__PURE__*/_jsxDEV(CloudUploadIcon, {\n                                    fontSize: \"large\",\n                                    sx: {\n                                      mr: 2\n                                    }\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 782,\n                                    columnNumber: 73\n                                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                                    children: \"Upload Utility Bills\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 783,\n                                    columnNumber: 73\n                                  }, this)]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 781,\n                                  columnNumber: 69\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 779,\n                                columnNumber: 65\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 778,\n                              columnNumber: 61\n                            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                              item: true,\n                              xs: 8.5,\n                              children: /*#__PURE__*/_jsxDEV(Stack, {\n                                direction: \"row\",\n                                spacing: 2,\n                                sx: {\n                                  overflowX: 'auto',\n                                  height: '75px'\n                                },\n                                children: billFilesDetail.map(x => {\n                                  return /*#__PURE__*/_jsxDEV(ListItem, {\n                                    sx: uploadFileListItemStyle,\n                                    onClick: () => handleShowFile(x),\n                                    secondaryAction: /*#__PURE__*/_jsxDEV(IconButton, {\n                                      edge: \"end\",\n                                      \"aria-label\": \"delete\",\n                                      onClick: e => handleDeleteFile(e, x, 'bills'),\n                                      children: /*#__PURE__*/_jsxDEV(DeleteOutlineTwoToneIcon, {}, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 795,\n                                        columnNumber: 93\n                                      }, this)\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 794,\n                                      columnNumber: 89\n                                    }, this),\n                                    children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                                      children: /*#__PURE__*/_jsxDEV(Avatar, {\n                                        children: /*#__PURE__*/_jsxDEV(FilePresentTwoToneIcon, {}, void 0, false, {\n                                          fileName: _jsxFileName,\n                                          lineNumber: 801,\n                                          columnNumber: 93\n                                        }, this)\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 800,\n                                        columnNumber: 89\n                                      }, this)\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 799,\n                                      columnNumber: 85\n                                    }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                                      primary: x.Name\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 804,\n                                      columnNumber: 85\n                                    }, this)]\n                                  }, void 0, true, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 792,\n                                    columnNumber: 81\n                                  }, this);\n                                })\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 788,\n                                columnNumber: 65\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 787,\n                              columnNumber: 61\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 777,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                            container: true,\n                            direction: \"row\",\n                            sx: uploadFileRowStyle,\n                            justifyContent: \"center\",\n                            alignItems: \"stretch\",\n                            children: [/*#__PURE__*/_jsxDEV(Grid, {\n                              item: true,\n                              xs: 3.5,\n                              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                                htmlFor: \"fileCompanyDocs\",\n                                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                                  style: {\n                                    display: 'none'\n                                  },\n                                  onChange: handleChangeFile,\n                                  id: \"fileCompanyDocs\",\n                                  name: \"upload-company-docs\",\n                                  type: \"file\",\n                                  multiple: true\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 817,\n                                  columnNumber: 69\n                                }, this), /*#__PURE__*/_jsxDEV(Fab, {\n                                  sx: uploadFileStyle,\n                                  color: \"secondary\",\n                                  size: \"small\",\n                                  component: \"span\",\n                                  \"aria-label\": \"add\",\n                                  variant: \"extended\",\n                                  children: [/*#__PURE__*/_jsxDEV(CloudUploadIcon, {\n                                    fontSize: \"large\",\n                                    sx: {\n                                      mr: 2\n                                    }\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 819,\n                                    columnNumber: 73\n                                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                                    children: \"Upload Company Docs\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 820,\n                                    columnNumber: 73\n                                  }, this)]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 818,\n                                  columnNumber: 69\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 816,\n                                columnNumber: 65\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 815,\n                              columnNumber: 61\n                            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                              item: true,\n                              xs: 8.5,\n                              children: /*#__PURE__*/_jsxDEV(Stack, {\n                                direction: \"row\",\n                                spacing: 2,\n                                sx: {\n                                  overflowX: 'auto',\n                                  height: '75px'\n                                },\n                                children: companyFilesDetail.map(x => {\n                                  return /*#__PURE__*/_jsxDEV(ListItem, {\n                                    sx: uploadFileListItemStyle,\n                                    onClick: () => handleShowFile(x),\n                                    secondaryAction: /*#__PURE__*/_jsxDEV(IconButton, {\n                                      edge: \"end\",\n                                      \"aria-label\": \"delete\",\n                                      onClick: e => handleDeleteFile(e, x, 'company'),\n                                      children: /*#__PURE__*/_jsxDEV(DeleteOutlineTwoToneIcon, {}, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 832,\n                                        columnNumber: 93\n                                      }, this)\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 831,\n                                      columnNumber: 89\n                                    }, this),\n                                    children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                                      children: /*#__PURE__*/_jsxDEV(Avatar, {\n                                        children: /*#__PURE__*/_jsxDEV(FilePresentTwoToneIcon, {}, void 0, false, {\n                                          fileName: _jsxFileName,\n                                          lineNumber: 838,\n                                          columnNumber: 93\n                                        }, this)\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 837,\n                                        columnNumber: 89\n                                      }, this)\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 836,\n                                      columnNumber: 85\n                                    }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                                      primary: x.Name\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 841,\n                                      columnNumber: 85\n                                    }, this)]\n                                  }, void 0, true, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 829,\n                                    columnNumber: 81\n                                  }, this);\n                                })\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 825,\n                                columnNumber: 65\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 824,\n                              columnNumber: 61\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 814,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                            container: true,\n                            direction: \"row\",\n                            sx: uploadFileRowStyle,\n                            justifyContent: \"center\",\n                            alignItems: \"stretch\",\n                            children: [/*#__PURE__*/_jsxDEV(Grid, {\n                              item: true,\n                              xs: 3.5,\n                              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                                htmlFor: \"fileOtherDocs\",\n                                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                                  style: {\n                                    display: 'none'\n                                  },\n                                  onChange: handleChangeFile,\n                                  id: \"fileOtherDocs\",\n                                  name: \"upload-photo\",\n                                  type: \"file\",\n                                  multiple: true\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 854,\n                                  columnNumber: 69\n                                }, this), /*#__PURE__*/_jsxDEV(Fab, {\n                                  sx: uploadFileStyle,\n                                  color: \"secondary\",\n                                  size: \"small\",\n                                  component: \"span\",\n                                  \"aria-label\": \"add\",\n                                  variant: \"extended\",\n                                  children: [/*#__PURE__*/_jsxDEV(CloudUploadIcon, {\n                                    fontSize: \"large\",\n                                    sx: {\n                                      mr: 2\n                                    }\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 856,\n                                    columnNumber: 73\n                                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                                    children: \"Upload Other Docs\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 857,\n                                    columnNumber: 73\n                                  }, this)]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 855,\n                                  columnNumber: 69\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 853,\n                                columnNumber: 65\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 852,\n                              columnNumber: 61\n                            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                              item: true,\n                              xs: 8.5,\n                              children: /*#__PURE__*/_jsxDEV(Stack, {\n                                direction: \"row\",\n                                spacing: 2,\n                                sx: {\n                                  overflowX: 'auto',\n                                  height: '75px'\n                                },\n                                children: otherFilesDetail.map(x => {\n                                  return /*#__PURE__*/_jsxDEV(ListItem, {\n                                    sx: uploadFileListItemStyle,\n                                    onClick: () => handleShowFile(x),\n                                    secondaryAction: /*#__PURE__*/_jsxDEV(IconButton, {\n                                      edge: \"end\",\n                                      \"aria-label\": \"delete\",\n                                      onClick: e => handleDeleteFile(e, x, 'others'),\n                                      children: /*#__PURE__*/_jsxDEV(DeleteOutlineTwoToneIcon, {}, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 869,\n                                        columnNumber: 93\n                                      }, this)\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 868,\n                                      columnNumber: 89\n                                    }, this),\n                                    children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                                      children: /*#__PURE__*/_jsxDEV(Avatar, {\n                                        children: /*#__PURE__*/_jsxDEV(FilePresentTwoToneIcon, {}, void 0, false, {\n                                          fileName: _jsxFileName,\n                                          lineNumber: 875,\n                                          columnNumber: 93\n                                        }, this)\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 874,\n                                        columnNumber: 89\n                                      }, this)\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 873,\n                                      columnNumber: 85\n                                    }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                                      primary: x.Name\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 878,\n                                      columnNumber: 85\n                                    }, this)]\n                                  }, void 0, true, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 866,\n                                    columnNumber: 81\n                                  }, this);\n                                })\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 862,\n                                columnNumber: 65\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 861,\n                              columnNumber: 61\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 851,\n                            columnNumber: 57\n                          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                            container: true,\n                            direction: \"row\",\n                            sx: uploadFileRowStyle,\n                            justifyContent: \"center\",\n                            alignItems: \"stretch\",\n                            children: [/*#__PURE__*/_jsxDEV(Grid, {\n                              item: true,\n                              xs: 3.5,\n                              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                                htmlFor: \"fileWorld\",\n                                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                                  style: {\n                                    display: 'none'\n                                  },\n                                  onChange: handleChangeFile,\n                                  id: \"fileWorld\",\n                                  name: \"upload-photo\",\n                                  type: \"file\",\n                                  multiple: true\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 891,\n                                  columnNumber: 69\n                                }, this), /*#__PURE__*/_jsxDEV(Fab, {\n                                  sx: uploadFileStyle,\n                                  color: \"secondary\",\n                                  size: \"small\",\n                                  component: \"span\",\n                                  \"aria-label\": \"add\",\n                                  variant: \"extended\",\n                                  children: [/*#__PURE__*/_jsxDEV(CloudUploadIcon, {\n                                    fontSize: \"large\",\n                                    sx: {\n                                      mr: 2\n                                    }\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 893,\n                                    columnNumber: 73\n                                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                                    children: \"Upload World Check\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 894,\n                                    columnNumber: 73\n                                  }, this)]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 892,\n                                  columnNumber: 69\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 890,\n                                columnNumber: 65\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 889,\n                              columnNumber: 61\n                            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                              item: true,\n                              xs: 8.5,\n                              children: /*#__PURE__*/_jsxDEV(Stack, {\n                                direction: \"row\",\n                                spacing: 2,\n                                sx: {\n                                  overflowX: 'auto',\n                                  height: '75px'\n                                },\n                                children: worldFilesDetail.map(x => {\n                                  return /*#__PURE__*/_jsxDEV(ListItem, {\n                                    sx: uploadFileListItemStyle,\n                                    onClick: () => handleShowFile(x),\n                                    secondaryAction: /*#__PURE__*/_jsxDEV(IconButton, {\n                                      edge: \"end\",\n                                      \"aria-label\": \"delete\",\n                                      onClick: e => handleDeleteFile(e, x, 'worlds'),\n                                      children: /*#__PURE__*/_jsxDEV(DeleteOutlineTwoToneIcon, {}, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 906,\n                                        columnNumber: 93\n                                      }, this)\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 905,\n                                      columnNumber: 89\n                                    }, this),\n                                    children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                                      children: /*#__PURE__*/_jsxDEV(Avatar, {\n                                        children: /*#__PURE__*/_jsxDEV(FilePresentTwoToneIcon, {}, void 0, false, {\n                                          fileName: _jsxFileName,\n                                          lineNumber: 912,\n                                          columnNumber: 93\n                                        }, this)\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 911,\n                                        columnNumber: 89\n                                      }, this)\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 910,\n                                      columnNumber: 85\n                                    }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                                      primary: x.Name\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 915,\n                                      columnNumber: 85\n                                    }, this)]\n                                  }, void 0, true, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 903,\n                                    columnNumber: 81\n                                  }, this);\n                                })\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 899,\n                                columnNumber: 65\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 898,\n                              columnNumber: 61\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 888,\n                            columnNumber: 57\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 737,\n                          columnNumber: 53\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 522,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 521,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 520,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 504,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 503,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  style: {\n                    display: selectedTabIndex == 1 ? 'none' : undefined\n                  },\n                  type: \"submit\",\n                  sx: {\n                    margin: 1\n                  },\n                  variant: \"contained\",\n                  color: \"primary\",\n                  children: \" Next\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 932,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  style: {\n                    display: selectedTabIndex == 0 ? 'none' : undefined\n                  },\n                  type: \"button\",\n                  sx: {\n                    margin: 1\n                  },\n                  variant: \"contained\",\n                  color: \"primary\",\n                  onClick: handleSave,\n                  children: \" Save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 933,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: () => onClickBack(),\n                  sx: {\n                    margin: 1\n                  },\n                  style: {\n                    display: selectedTabIndex == 0 ? 'none' : undefined\n                  },\n                  type: \"button\",\n                  variant: \"contained\",\n                  color: \"primary\",\n                  children: \" Back\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 934,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"button\",\n                  onClick: () => resetForm(),\n                  sx: {\n                    margin: 1\n                  },\n                  variant: \"contained\",\n                  color: \"secondary\",\n                  children: \"Reset\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 935,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  component: \"span\",\n                  hidden: directorData.DirectorID == undefined,\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    type: \"button\",\n                    sx: {\n                      margin: 1,\n                      float: 'right'\n                    },\n                    variant: \"contained\",\n                    color: \"error\",\n                    onClick: handelOpenDeleteModal,\n                    children: \" Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 940,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 939,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 931,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 502,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(DirectorForm, \"sg1xoumZblZYO6TOxT3ZXMMv3sk=\", false, function () {\n  return [useTheme, useForm];\n});\n\n_c = DirectorForm;\nexport default DirectorForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"DirectorForm\");","map":{"version":3,"sources":["E:/Projects/LFMS/LFMS.WebUI/src/content/pages/Components/Director/DirectorForm.tsx"],"names":["React","useEffect","useRef","useState","Get","Post","API_BASE_URL","Delete","object","string","number","zodResolver","Button","IconButton","Container","Grid","Card","CardHeader","CardContent","Divider","TextField","Box","Modal","Snackbar","Alert","Autocomplete","Tabs","Tab","AppBar","useTheme","Fab","ListItem","Stack","ListItemAvatar","Avatar","ListItemText","Checkbox","SwipeableViews","useForm","dropdowns","TabPanel","switchTab","DatePicker","CloudUploadIcon","DeleteOutlineTwoToneIcon","FilePresentTwoToneIcon","DirectorTypeForm","DesignationForm","IDTypeForm","NationalityForm","PlaceOfBirthForm","label","inputProps","style","position","top","left","transform","width","bgcolor","boxShadow","uploadFileRowStyle","height","overflowX","uploadFileStyle","padding","uploadFileListItemStyle","minWidth","backgroundColor","borderRadius","cursor","DirectorForm","clearForm","directorFormFunc","directorData","rerenderTable","passportFilesDetail","setPassportFilesDetail","passportFiles","setPassportFiles","billFilesDetail","setBillFilesDetail","billFiles","setBillFiles","companyFilesDetail","setCompanyFilesDetail","companyFiles","setCompanyFiles","otherFilesDetail","setOtherFilesDetail","otherFiles","setOtherFiles","worldFilesDetail","setWorldFilesDetail","worldFiles","setWorldFiles","dobDate","setDobDate","appointmentDate","setAppointmentDate","cessationDate","setCessationDate","directorTypes","setDirectorTypes","selectedDirectorType","setSelectedDirectorType","designations","setDesignations","selectedDesignation","setSelectedDesignation","nationalities","setNationalities","selectedNationality","setSelectedNationality","idTypes","setIDTypes","selectedIdType","setselectedIdType","IDTypeName","placeOfBirths","setPlaceOfBirths","selectedPlaceOfBirth","setSelectedPlaceOfBirth","directorFormData","setDirectorFormData","selectedTabIndex","setSelectedTabIndex","loading","setLoading","message","setMessage","open","setOpen","theme","openDeleteModal","setOpenDeleteModal","openSuccessAlert","setopenSuccessAlert","openErrorAlert","setopenErrorAlert","errorMessage","setErrorMessage","successMessage","setSuccessMessage","handelOpenDeleteModal","handelCloseDeleteModal","handleOpen","handleClose","reset","resetForm","handleAlertClose","event","reason","showModal","changeTab","index","id","current","loadDropdowns","editForm","data","DirectorType","DirectorTypeID","DirectorTypeName","IDTypeID","NationalityID","NationalityName","DesignationID","DesignationName","PlaceOfBirthID","PlaceOfBirthName","Date","AppointmentDate","CessationDate","DOB","DirectorID","then","x","PassportFiles","BillFiles","CompanyFiles","OtherFiles","WorldFiles","getAllDirectorTypes","getAllDesignations","getAllNationalities","getAllPlaceOfBirths","getAllIDTypes","console","log","validationSchema","DirectorName","nonempty","CompanyName","max","CompanyNumber","Email","email","IDNumber","ContactNumber","PermanentAddress","ComunicationAddress","optional","register","formState","errors","isSubmitSuccessful","handleSubmit","setValue","resolver","onClickBack","onSubmitHandler","values","handleSave","formData","FormData","append","JSON","stringify","i","length","handleFormSubmit","formValue","_url","_directorID","response","status","error","resMessage","toString","alert","handleTabChange","newValue","handleChangeIndex","handleChangeFile","target","_passportFiles","push","files","_passportFilesDetail","Name","name","_billFiles","_billFilesDetail","_companyFiles","_companyFilesDetail","_otherFiles","_otherFilesDetail","_worldFiles","_worldFilesDetail","rerenderDirectorTypeTable","rerenderDesignationTable","rerenderIDTypeTable","rerenderNationalityTable","rerenderPlaceOfBirthTable","handleShowFile","file","Path","undefined","window","handleDeleteFile","category","stopPropagation","filter","_passsportFilesDetail","onDeleteHandler","mt","my","margin","direction","params","idType","mb","display","mr","map","e","float"],"mappings":"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","sourcesContent":["import PageTitle from '../../../../components/PageTitle';\r\nimport React, { ChangeEvent, useEffect, useRef, useState } from 'react';\r\nimport { Get, Post, API_BASE_URL, Delete } from \"../../../../services/common.service\";\r\n\r\nimport { object, string, number, TypeOf } from 'zod';\r\nimport { zodResolver } from '@hookform/resolvers/zod';\r\n\r\nimport PageTitleWrapper from '../../../../components/PageTitleWrapper';\r\nimport { Button, IconButton, Container, Grid, Card, CardHeader, CardContent, Divider, TextField, Box, Modal, Snackbar, Alert, Typography, Autocomplete, Tabs, Tab, AppBar, useTheme, Fab, List, ListItem, Stack, ListItemAvatar, Avatar, ListItemText, Checkbox, } from '@mui/material';\r\nimport Footer from '../../../../components/Footer';\r\nimport SwipeableViews from 'react-swipeable-views';\r\n\r\nimport Switch from '@mui/material/Switch';\r\nimport { useForm, SubmitHandler } from 'react-hook-form';\r\nimport { DirectorModel } from '../../../../types/director.type';\r\nimport { dropdowns } from '../../../../services/dropdowns.service';\r\nimport { DesignationModel, DirectorTypeModel, IDTypeModel, NationalityModel, PlaceOfBirthModel, FileDetail } from '../../../../types/master.type';\r\nimport Scrollbars from 'react-custom-scrollbars-2';\r\nimport { TabPanel, TabPanelProps, switchTab } from '../../../../components/TabPanel';\r\nimport { DatePicker } from '@mui/lab';\r\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload';\r\nimport DeleteOutlineTwoToneIcon from '@mui/icons-material/DeleteOutlineTwoTone';\r\nimport FilePresentTwoToneIcon from '@mui/icons-material/FilePresentTwoTone';\r\nimport { DirectorTypeForm } from '../../../../content/pages/Components/DirectorType/DirectorTypeForm';\r\nimport { DesignationForm } from '../../../../content/pages/Components/Designation/DesignationForm';\r\nimport { IDTypeForm } from '../../../../content/pages/Components/IDType/IDTypeForm';\r\nimport { NationalityForm } from '../../../../content/pages/Components/Nationality/NationalityForm';\r\nimport { PlaceOfBirthForm } from '../../../../content/pages/Components/PlaceOfBirth/PlaceOfBirthForm';\r\nimport { Api } from '@mui/icons-material';\r\n//import { DatePicker as DatePickers, KeyboardDatePicker } from \"@material-ui/pickers\";\r\n\r\nconst label = { inputProps: { 'aria-label': 'Switch demo' } };\r\nconst style = {\r\n    position: 'absolute' as 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 1100,\r\n    bgcolor: 'background.paper',\r\n    //border: '2px solid #000',\r\n    boxShadow: 24,\r\n\r\n};\r\n\r\nconst uploadFileRowStyle = { height: '83px', overflowX: 'auto' };\r\nconst uploadFileStyle = { padding: '30px 10px', width: '250px', 'justify-content': 'flex-start' };\r\nconst uploadFileListItemStyle = { width: '300px', minWidth: '300px', backgroundColor: 'lightgrey', borderRadius: '15px', height: '60px', boxShadow: 24, cursor: 'pointer' };\r\n\r\nexport const DirectorForm: React.FC<any> = ({ clearForm, directorFormFunc, directorData, rerenderTable }) => {\r\n    const [passportFilesDetail, setPassportFilesDetail] = useState<FileDetail[]>([]);\r\n    const [passportFiles, setPassportFiles] = useState<File[]>([]);\r\n    const [billFilesDetail, setBillFilesDetail] = useState<FileDetail[]>([]);\r\n    const [billFiles, setBillFiles] = useState<File[]>([]);\r\n    const [companyFilesDetail, setCompanyFilesDetail] = useState<FileDetail[]>([]);\r\n    const [companyFiles, setCompanyFiles] = useState<File[]>([]);\r\n    const [otherFilesDetail, setOtherFilesDetail] = useState<FileDetail[]>([]);\r\n    const [otherFiles, setOtherFiles] = useState<File[]>([]);\r\n    const [worldFilesDetail, setWorldFilesDetail] = useState<FileDetail[]>([]);\r\n    const [worldFiles, setWorldFiles] = useState<File[]>([]);\r\n    const [dobDate, setDobDate] = useState<Date | null>(null);\r\n    const [appointmentDate, setAppointmentDate] = useState<Date | null>(null);\r\n    const [cessationDate, setCessationDate] = useState<Date | null>(null);\r\n    const [directorTypes, setDirectorTypes] = useState<DirectorTypeModel[]>([]);\r\n    const [selectedDirectorType, setSelectedDirectorType] = useState<DirectorTypeModel>();\r\n    const [designations, setDesignations] = useState<DesignationModel[]>([]);\r\n    const [selectedDesignation, setSelectedDesignation] = useState<DesignationModel>();\r\n    const [nationalities, setNationalities] = useState<NationalityModel[]>([]);\r\n    const [selectedNationality, setSelectedNationality] = useState<NationalityModel>();\r\n    const [idTypes, setIDTypes] = useState<IDTypeModel[]>([]);\r\n    const [selectedIdType, setselectedIdType] = useState<IDTypeModel>({ IDTypeName: '' });\r\n    const [placeOfBirths, setPlaceOfBirths] = useState<PlaceOfBirthModel[]>([]);\r\n    const [selectedPlaceOfBirth, setSelectedPlaceOfBirth] = useState<PlaceOfBirthModel>();\r\n    const [directorFormData, setDirectorFormData] = useState<DirectorModel>();\r\n    const [selectedTabIndex, setSelectedTabIndex] = useState(0);\r\n    const [loading, setLoading] = useState<boolean>(false);\r\n    const [message, setMessage] = useState<string>(\"\");\r\n    const [open, setOpen] = useState(false);\r\n    const theme = useTheme();\r\n    const [openDeleteModal, setOpenDeleteModal] = useState(false);\r\n    const [openSuccessAlert, setopenSuccessAlert] = useState<boolean>(false);\r\n    const [openErrorAlert, setopenErrorAlert] = useState<boolean>(false);\r\n    const [errorMessage, setErrorMessage] = useState<string>(\"\");\r\n    const [successMessage, setSuccessMessage] = useState<string>(\"\");\r\n\r\n    const handelOpenDeleteModal = () => {\r\n        setOpenDeleteModal(true);\r\n    }\r\n    const handelCloseDeleteModal = () => {\r\n        setOpenDeleteModal(false);\r\n    }\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n\r\n        // reset(companyTypeData);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        reset(directorData);\r\n        resetForm();\r\n        clearForm();\r\n        setSelectedTabIndex(0);\r\n    }\r\n    const handleAlertClose = (event?: React.SyntheticEvent | Event, reason?: string) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setopenSuccessAlert(false);\r\n    };\r\n\r\n    const showModal = () => {\r\n        setOpen(true);\r\n        reset(directorData);\r\n    }\r\n    const resetForm = () => {\r\n        reset(directorData);\r\n        setPassportFiles([]);\r\n        setBillFiles([]);\r\n        setCompanyFiles([]);\r\n        setOtherFiles([]);\r\n        setWorldFiles([]);\r\n        setPassportFilesDetail([]);\r\n        setBillFilesDetail([]);\r\n        setCompanyFilesDetail([]);\r\n        setOtherFilesDetail([]);\r\n        setWorldFilesDetail([]);\r\n        clearForm();\r\n    }\r\n    const changeTab = (index: number) => {\r\n        return {\r\n            id: `simple-tab-${index}`,\r\n            'aria-controls': `simple-tabpanel-${index}`,\r\n        };\r\n    }\r\n    useEffect(() => {\r\n        directorFormFunc.current = handleOpen\r\n        reset(directorData);\r\n        loadDropdowns();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        reset(directorData);\r\n        editForm(directorData);\r\n    }, [directorData, directorFormFunc]);\r\n    const editForm = (data: DirectorModel) => {\r\n        data.DirectorType = { DirectorTypeID: directorData.DirectorTypeID, DirectorTypeName: directorData.DirectorTypeName };\r\n        setselectedIdType({ IDTypeID: directorData.IDTypeID, IDTypeName: directorData.IDTypeName });\r\n        setSelectedNationality({ NationalityID: directorData.NationalityID, NationalityName: directorData.NationalityName });\r\n        setSelectedDesignation({ DesignationID: directorData.DesignationID, DesignationName: directorData.DesignationName });\r\n        setSelectedDirectorType({ DirectorTypeID: directorData.DirectorTypeID, DirectorTypeName: directorData.DirectorTypeName });\r\n        setSelectedPlaceOfBirth({ PlaceOfBirthID: directorData.PlaceOfBirthID, PlaceOfBirthName: directorData.PlaceOfBirthName });\r\n        setAppointmentDate(new Date(data.AppointmentDate));\r\n        setCessationDate(new Date(data.CessationDate));\r\n        setDobDate(new Date(data.DOB));\r\n        if (data.DirectorID) {\r\n            Get('Director/GetDirectorFiles?DirectorID=' + data.DirectorID).then(x => {\r\n                setPassportFilesDetail(x.data.PassportFiles);\r\n                setBillFilesDetail(x.data.BillFiles);\r\n                setCompanyFilesDetail(x.data.CompanyFiles);\r\n                setOtherFilesDetail(x.data.OtherFiles);\r\n                setWorldFilesDetail(x.data.WorldFiles);\r\n            });\r\n        }\r\n\r\n    }\r\n    const loadDropdowns = () => {\r\n        dropdowns.getAllDirectorTypes().then(x => setDirectorTypes(x));\r\n        dropdowns.getAllDesignations().then(x => setDesignations(x));\r\n        dropdowns.getAllNationalities().then(x => setNationalities(x));\r\n        dropdowns.getAllPlaceOfBirths().then(x => setPlaceOfBirths(x));\r\n        dropdowns.getAllIDTypes().then(x => { console.log(x); setIDTypes(x) });\r\n    }\r\n\r\n    const validationSchema = object({\r\n        DirectorName: string().nonempty('Director Name is required'),\r\n        CompanyName: string().nonempty('Company Name is required').max(100, 'Company Name must be less than 100 characters'),\r\n        CompanyNumber: string().nonempty('Company number is required').max(50, 'Company number must be less than 50 characters'),\r\n        Email: string().nonempty('Email is required').email('invalid email address').max(40, 'Email  must be less than 40 characters'),\r\n        IDNumber: string().nonempty('ID Number is required').max(20, 'ID Number  must be less than 20 characters'),\r\n        ContactNumber: string().nonempty('Contact Number is required').max(150, 'Contact Number  must be less than 150 characters'),\r\n        PermanentAddress: string().nonempty('Permanent Address  is required').max(150, 'Permanent Address  must be less than 150 characters'),\r\n        ComunicationAddress: string().nonempty('Comunication Address   is required').max(150, 'Comunication Address  must be less than 150 characters'),\r\n        DirectorType: object({ DirectorTypeID: number().optional(), DirectorTypeName: string().optional() })\r\n    });\r\n\r\n    const {\r\n        register,\r\n        formState: { errors, isSubmitSuccessful },\r\n        reset,\r\n        handleSubmit,\r\n        setValue\r\n    } = useForm<DirectorModel>({\r\n        resolver: zodResolver(validationSchema)\r\n    });\r\n\r\n    const onClickBack = () => {\r\n        setSelectedTabIndex(0);\r\n        switchTab(0);\r\n        //switchTab(1);\r\n        //handleFormSubmit(data);\r\n        //console.log(JSON.stringify(data, null, 2));\r\n    };\r\n\r\n    const onSubmitHandler: SubmitHandler<DirectorModel> = (values) => {\r\n        values.PlaceOfBirthID = selectedPlaceOfBirth!.PlaceOfBirthID ?? 0;\r\n        values.DesignationID = selectedDesignation!.DesignationID ?? 0;\r\n        values.DirectorTypeID = selectedDirectorType!.DirectorTypeID ?? 0;\r\n        values.NationalityID = selectedNationality!.NationalityID ?? 0;\r\n        values.IDTypeID = selectedIdType!.IDTypeID ?? 0;\r\n        values.AppointmentDate = new Date(values.AppointmentDate);\r\n        console.log(values);\r\n        setDirectorFormData(values);\r\n        setSelectedTabIndex(1);\r\n        switchTab(1);\r\n    };\r\n\r\n\r\n    const handleSave = () => {\r\n        let formData = new FormData();\r\n        formData.append(\"Director\", JSON.stringify(directorFormData));\r\n        for (var i = 1; i <= passportFiles.length; i++) {\r\n            formData.append('PassportFiles', passportFiles[i - 1]);\r\n        }\r\n        for (var i = 1; i <= billFiles.length; i++) {\r\n            formData.append('BillFiles', billFiles[i - 1]);\r\n        }\r\n        for (var i = 1; i <= companyFiles.length; i++) {\r\n            formData.append('CompanyFiles', companyFiles[i - 1]);\r\n        }\r\n        for (var i = 1; i <= otherFiles.length; i++) {\r\n            formData.append('OtherFiles', otherFiles[i - 1]);\r\n        }\r\n        for (var i = 1; i <= worldFiles.length; i++) {\r\n            formData.append('WorldFiles', worldFiles[i - 1]);\r\n        }\r\n        // handleFormSubmit(formData); esra\r\n    };\r\n\r\n    const handleFormSubmit = (formValue: DirectorModel) => {\r\n        setLoading(true);\r\n        let _url = 'director/AddDirectorAsync';\r\n        if (directorFormData!.DirectorID) {\r\n            _url = 'director/EditDirectorAsync';\r\n        }\r\n\r\n        let _directorID = directorFormData!.DirectorID ?? -1;\r\n        Get('master/IsNameExists?table=[Director]&column=DirectorName&id=DirectorID&idValue=' + _directorID + '&columnValue=' + directorFormData!.DirectorName).then(\r\n            (response: any) => {\r\n                if (response.data.status == 'success') {\r\n                    Post(_url, formValue).then(\r\n                        (response: any) => {\r\n                            // history.push(\"/profile\");\r\n                            if (response.data.status == 'success') {\r\n                                setMessage('Director Successfully Saved!');\r\n                                setopenSuccessAlert(true);\r\n                                handleClose();\r\n                                rerenderTable();\r\n                            }\r\n                        },\r\n                        (error: any) => {\r\n                            const resMessage =\r\n                                (error.response &&\r\n                                    error.response.data &&\r\n                                    error.response.data.message) ||\r\n                                error.message ||\r\n                                error.toString();\r\n                            setLoading(false);\r\n                            setMessage(resMessage);\r\n                        }\r\n                    );\r\n                }\r\n                else {\r\n                    alert('Record Already Exists!');\r\n                }\r\n            },\r\n            (error: any) => {\r\n                const resMessage =\r\n                    (error.response &&\r\n                        error.response.data &&\r\n                        error.response.data.message) ||\r\n                    error.message ||\r\n                    error.toString();\r\n                setLoading(false);\r\n            }\r\n        );\r\n    };\r\n\r\n    const handleTabChange = (event: React.SyntheticEvent, newValue: number) => {\r\n        setSelectedTabIndex(newValue);\r\n    };\r\n\r\n    const handleChangeIndex = (index: number) => {\r\n        setSelectedTabIndex(index);\r\n    };\r\n\r\n    const handleChangeFile = event => {\r\n        if (event.target.id == 'filePassport') {\r\n            let _passportFiles = passportFiles;\r\n            _passportFiles.push(...event.target.files);\r\n            setPassportFiles(_passportFiles);\r\n            let _passportFilesDetail: FileDetail[] = [];\r\n            for (let i = 0; i < _passportFiles.length; i++) {\r\n                _passportFilesDetail.push({ Name: _passportFiles[i].name });\r\n            }\r\n            setPassportFilesDetail(_passportFilesDetail);\r\n        }\r\n        else if (event.target.id == 'fileBills') {\r\n            let _billFiles = billFiles;\r\n            for (var i = 0; i < event!.target!.files!.length; i++) {\r\n                _billFiles?.push(event!.target!.files![i]);\r\n            }\r\n            setBillFiles(_billFiles);\r\n            let _billFilesDetail: FileDetail[] = [];\r\n            for (let i = 0; i < _billFiles.length; i++) {\r\n                _billFilesDetail.push({ Name: _billFiles[i].name });\r\n            }\r\n            setBillFilesDetail(_billFilesDetail);\r\n        }\r\n        else if (event.target.id == 'fileCompanyDocs') {\r\n            let _companyFiles = companyFiles;\r\n            for (var i = 0; i < event!.target!.files!.length; i++) {\r\n                _companyFiles?.push(event!.target!.files![i]);\r\n            }\r\n            setCompanyFiles(_companyFiles);\r\n            let _companyFilesDetail: FileDetail[] = [];\r\n            for (let i = 0; i < _companyFiles.length; i++) {\r\n                _companyFilesDetail.push({ Name: _companyFiles[i].name });\r\n            }\r\n            setCompanyFilesDetail(_companyFilesDetail);\r\n        }\r\n        else if (event.target.id == 'fileOtherDocs') {\r\n            let _otherFiles = otherFiles;\r\n            for (var i = 0; i < event!.target!.files!.length; i++) {\r\n                _otherFiles?.push(event!.target!.files![i]);\r\n            }\r\n            setOtherFiles(_otherFiles);\r\n            let _otherFilesDetail: FileDetail[] = [];\r\n            for (let i = 0; i < _otherFiles.length; i++) {\r\n                _otherFilesDetail.push({ Name: _otherFiles[i].name });\r\n            }\r\n            setOtherFilesDetail(_otherFilesDetail);\r\n        }\r\n        else if (event.target.id == 'fileWorld') {\r\n            let _worldFiles = worldFiles;\r\n            for (var i = 0; i < event!.target!.files!.length; i++) {\r\n                _worldFiles?.push(event!.target!.files![i]);\r\n            }\r\n            setWorldFiles(_worldFiles);\r\n            let _worldFilesDetail: FileDetail[] = [];\r\n            for (let i = 0; i < _worldFiles.length; i++) {\r\n                _worldFilesDetail.push({ Name: _worldFiles[i].name });\r\n            }\r\n            setWorldFilesDetail(_worldFilesDetail);\r\n        }\r\n\r\n    };\r\n\r\n    const rerenderDirectorTypeTable = () => {\r\n        dropdowns.getAllDirectorTypes().then(x => setDirectorTypes(x));\r\n    }\r\n    const rerenderDesignationTable = () => {\r\n        dropdowns.getAllDesignations().then(x => setDesignations(x));\r\n    }\r\n    const rerenderIDTypeTable = () => {\r\n        dropdowns.getAllIDTypes().then(x => setIDTypes(x));\r\n    }\r\n    const rerenderNationalityTable = () => {\r\n        dropdowns.getAllNationalities().then(x => setNationalities(x));\r\n    }\r\n    const rerenderPlaceOfBirthTable = () => {\r\n        dropdowns.getAllPlaceOfBirths().then(x => setPlaceOfBirths(x));\r\n    }\r\n    const handleShowFile = (file: FileDetail) => {\r\n        if (file.Path != undefined && file.Path != '') {\r\n            window.open(API_BASE_URL + 'Content/Company/Director/' + file.Name, '_blank', 'noreferrer');\r\n        }\r\n    }\r\n    const handleDeleteFile = (event: any, file: FileDetail, category: string) => {\r\n        event.stopPropagation();\r\n        if (file.Path != undefined && file.Path != '') {\r\n            Delete('Director/DeleteDirectorFile?fileName=' + file.Name + '&category=' + category).then(\r\n                (response: any) => {\r\n                    if (response.data.status == 'success') {\r\n                        setOpenDeleteModal(false);\r\n                        setopenSuccessAlert(true);\r\n                        setSuccessMessage('successfully Deleted');   \r\n                        handleClose();\r\n                        rerenderTable();\r\n                    }\r\n                },\r\n                (error: any) => {\r\n                    const resMessage =\r\n                        (error.response &&\r\n                            error.response.data &&\r\n                            error.response.data.message) ||\r\n                        error.message ||\r\n                        error.toString();\r\n                    setLoading(false);\r\n                    setopenErrorAlert(true);\r\n                    setErrorMessage(resMessage);\r\n                }\r\n            );\r\n        }\r\n        if (category == 'passports') {\r\n            let _passportFiles = passportFiles.filter(x => x.name != file.Name);\r\n            setPassportFiles(_passportFiles);\r\n            let _passsportFilesDetail = passportFilesDetail.filter(x => x.Name != file.Name);\r\n            setPassportFilesDetail(_passsportFilesDetail);\r\n        }\r\n    }\r\n\r\n    const onDeleteHandler = () => {\r\n        Delete('Director/DeleteDirector?Id=' + directorData.DirectorID).then(\r\n            (response: any) => {\r\n                if (response.data.status == 'success') {\r\n                    setOpenDeleteModal(false);\r\n                    setopenSuccessAlert(true);\r\n                    setSuccessMessage('successfully Deleted');\r\n                    rerenderTable();\r\n                    handleClose();\r\n                } else {\r\n                    setLoading(false);\r\n                    setopenErrorAlert(true);\r\n                    setErrorMessage(\"error\");\r\n                }\r\n            },\r\n            (error: any) => {\r\n                const resMessage =\r\n                    (error.response &&\r\n                        error.response.data &&\r\n                        error.response.data.message) ||\r\n                    error.message ||\r\n                    error.toString();\r\n                setLoading(false);\r\n                setopenErrorAlert(true);\r\n                setErrorMessage(resMessage);\r\n            }\r\n        );\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Snackbar open={openSuccessAlert} autoHideDuration={5000} onClose={handleAlertClose}>\r\n                <Alert onClose={handleAlertClose} variant=\"filled\" severity=\"success\" sx={{ width: '100%' }}>\r\n                    {successMessage}\r\n                </Alert>\r\n            </Snackbar>\r\n\r\n            <Snackbar open={openErrorAlert} autoHideDuration={5000} onClose={handleAlertClose}>\r\n                <Alert onClose={handleAlertClose} variant=\"filled\" severity=\"error\" sx={{ width: '100%' }}>\r\n                    {errorMessage}\r\n                </Alert>\r\n            </Snackbar>\r\n            <Button sx={{ mt: 1 }} variant=\"contained\" color=\"primary\" onClick={handleOpen}>+ Add Director</Button>\r\n\r\n            <Modal\r\n                open={openDeleteModal}\r\n                onClose={handelCloseDeleteModal}\r\n                aria-labelledby=\"modal-modal-title\"\r\n                aria-describedby=\"modal-modal-description\"\r\n            >\r\n                <Grid\r\n                    container\r\n                    direction=\"row\"\r\n                    justifyContent=\"center\"\r\n                    alignItems=\"stretch\"\r\n                    spacing={1}\r\n                >\r\n                    <Grid item xs={12}>\r\n                        <Card>\r\n                            <CardHeader title=\"Confirm Delete !\" />\r\n                            <Divider />\r\n                            <CardContent>\r\n                                <Box\r\n                                    sx={{\r\n                                        '& .MuiTextField-root': { my: 1, width: '25ch' },\r\n                                    }}\r\n                                >\r\n                                    <p>Are you sure to delete this director ?</p>\r\n\r\n                                </Box>\r\n                            </CardContent>\r\n                            <Button type=\"button\" sx={{ margin: 1 }} variant=\"contained\" color=\"primary\" onClick={onDeleteHandler}> Yes</Button>\r\n                            <Button type=\"submit\" sx={{ margin: 1 }} variant=\"contained\" color=\"error\" onClick={handelCloseDeleteModal}> No</Button>\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n            </Modal>\r\n\r\n\r\n            <Modal open={open} onClose={handleClose} aria-labelledby=\"modal-modal-title\" aria-describedby=\"modal-modal-description\" >\r\n                <Box\r\n                    component='form'\r\n                    noValidate\r\n                    autoComplete='off'\r\n                    onSubmit={handleSubmit(onSubmitHandler)}\r\n                    sx={style}>\r\n                    <Container maxWidth=\"md\">\r\n                        <div className=\"register-form\">\r\n                            <Grid container direction=\"row\" justifyContent=\"center\" alignItems=\"stretch\">\r\n                                <Grid item xs={12}>\r\n                                    <Card>\r\n                                        <CardHeader title=\"Enter Director Detail\" />\r\n                                        <Divider />\r\n                                        <AppBar position=\"static\">\r\n                                            <Tabs\r\n                                                value={selectedTabIndex}\r\n                                                //onChange={handleTabChange}\r\n                                                indicatorColor=\"secondary\"\r\n                                                textColor=\"inherit\"\r\n                                                variant=\"fullWidth\"\r\n                                                aria-label=\"full width tabs example\"\r\n                                            >\r\n                                                <Tab label=\"Details\" {...switchTab(0)} />\r\n                                                <Tab label=\"Uploads\" {...switchTab(1)} />\r\n                                            </Tabs>\r\n                                        </AppBar>\r\n                                        <CardContent>\r\n                                            <Box component=\"div\" sx={{ '& .MuiTextField-root': { my: 1, width: '25ch' }, }}  >\r\n                                                <SwipeableViews axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'} index={selectedTabIndex} onChangeIndex={handleChangeIndex}\r\n                                                >\r\n                                                    <TabPanel value={selectedTabIndex} index={0} dir={theme.direction}>\r\n                                                        <Grid\r\n                                                            container\r\n                                                            direction=\"row\"\r\n                                                            justifyContent=\"center\"\r\n                                                            alignItems=\"stretch\"\r\n                                                            spacing={1}\r\n                                                        >\r\n                                                            <Grid item xs={3.6}>\r\n                                                                <div>\r\n                                                                    <TextField\r\n                                                                        style={{ width: '100%' }}\r\n                                                                        required\r\n                                                                        id=\"outlined-required\"\r\n                                                                        label=\"Director Name\"\r\n                                                                        {...register('DirectorName')}\r\n                                                                        fullWidth\r\n                                                                        error={!!errors['DirectorName']}\r\n                                                                        helperText={errors['DirectorName'] ? errors['DirectorName'].message : ''}\r\n\r\n                                                                    />\r\n                                                                    <TextField\r\n                                                                        style={{ width: '100%' }}\r\n                                                                        required\r\n                                                                        id=\"outlined-required\"\r\n                                                                        label=\"Company Name\"\r\n                                                                        {...register('CompanyName')}\r\n                                                                        fullWidth\r\n                                                                        error={!!errors['CompanyName']}\r\n                                                                        helperText={errors['CompanyName'] ? errors['CompanyName'].message : ''}\r\n                                                                    />\r\n\r\n                                                                    <TextField\r\n                                                                        style={{ width: '100%' }}\r\n                                                                        required\r\n                                                                        id=\"outlined-required\"\r\n                                                                        label=\"Company Number\"\r\n                                                                        {...register('CompanyNumber')} fullWidth\r\n                                                                        error={!!errors['CompanyNumber']}\r\n                                                                        helperText={errors['CompanyNumber'] ? errors['CompanyNumber'].message : ''}\r\n                                                                    />\r\n                                                                    <DatePicker\r\n                                                                        label=\"Appointment Date\"\r\n                                                                        {...register('AppointmentDate')}\r\n                                                                        value={appointmentDate}\r\n                                                                        onChange={(newValue) => {\r\n                                                                            setAppointmentDate(newValue);\r\n                                                                        }}\r\n                                                                        renderInput={(params) => <TextField style={{ width: '100%' }} {...params} required />}\r\n                                                                    />\r\n                                                                    <DatePicker\r\n                                                                        label=\"DOB\"\r\n                                                                        {...register('DOB')}\r\n                                                                        value={dobDate}\r\n                                                                        onChange={(newValue) => {\r\n                                                                            setDobDate(newValue);\r\n                                                                        }}\r\n                                                                        renderInput={(params) => <TextField style={{ width: '100%' }} fullWidth {...params} required />}\r\n                                                                    />\r\n                                                                    <DatePicker\r\n                                                                        label=\"Cessation Date\"\r\n                                                                        {...register('CessationDate')}\r\n                                                                        value={cessationDate}\r\n                                                                        onChange={(newValue) => {\r\n                                                                            setCessationDate(newValue);\r\n                                                                        }}\r\n                                                                        renderInput={(params) => <TextField style={{ width: '100%' }} {...params} required />}\r\n                                                                    />\r\n\r\n                                                                </div>\r\n                                                            </Grid>\r\n                                                            <Grid item xs={3.6}>\r\n                                                                <div>\r\n                                                                    <TextField\r\n                                                                        style={{ width: '100%' }}\r\n                                                                        required\r\n                                                                        id=\"outlined-required\"\r\n                                                                        label=\"Email\"\r\n                                                                        {...register('Email')}\r\n                                                                        fullWidth\r\n                                                                        error={!!errors['Email']}\r\n                                                                        helperText={errors['Email'] ? errors['Email'].message : ''}\r\n                                                                    />\r\n\r\n                                                                    <TextField\r\n                                                                        style={{ width: '100%' }}\r\n                                                                        required\r\n                                                                        id=\"outlined-required\"\r\n                                                                        label=\"ID Number\"\r\n                                                                        {...register('IDNumber')}\r\n                                                                        fullWidth\r\n                                                                        error={!!errors['IDNumber']}\r\n                                                                        helperText={errors['IDNumber'] ? errors['IDNumber'].message : ''}\r\n                                                                    />\r\n                                                                    <TextField\r\n                                                                        style={{ width: '100%' }}\r\n                                                                        required\r\n                                                                        id=\"outlined-required\"\r\n                                                                        label=\"Contact Number\"\r\n                                                                        {...register('ContactNumber')}\r\n                                                                        fullWidth\r\n                                                                        error={!!errors['ContactNumber']}\r\n                                                                        helperText={errors['ContactNumber'] ? errors['ContactNumber'].message : ''}\r\n                                                                    />\r\n                                                                    <TextField multiline\r\n                                                                        style={{ width: '100%' }} type=\"text\"\r\n                                                                        required\r\n                                                                        id=\"outlined-required\"\r\n                                                                        label=\"Permanant Address\"\r\n                                                                        {...register('PermanentAddress')}\r\n                                                                        fullWidth\r\n                                                                        error={!!errors['PermanentAddress']}\r\n                                                                        helperText={errors['PermanentAddress'] ? errors['PermanentAddress'].message : ''}\r\n                                                                    />\r\n                                                                    <TextField multiline\r\n                                                                        style={{ width: '100%' }} type=\"text\"\r\n                                                                        required\r\n                                                                        id=\"outlined-required\"\r\n                                                                        label=\"Comunication Address\"\r\n                                                                        {...register('ComunicationAddress')}\r\n                                                                        fullWidth\r\n                                                                        error={!!errors['ComunicationAddress']}\r\n                                                                        helperText={errors['ComunicationAddress'] ? errors['ComunicationAddress'].message : ''}\r\n                                                                    />\r\n                                                                    <Checkbox\r\n                                                                        color=\"primary\"\r\n                                                                        checked={true}\r\n                                                                        inputProps={{\r\n                                                                            'aria-labelledby': 'Is World Check',\r\n                                                                        }}\r\n                                                                    />\r\n                                                                    <label>Is World Check</label>\r\n                                                                </div>\r\n                                                            </Grid>\r\n                                                            <Grid item xs={3.6}>\r\n                                                                <div>\r\n                                                                    <Autocomplete\r\n                                                                        {...register('DirectorType')}\r\n                                                                        disablePortal style={{ width: '100%' }}\r\n                                                                        id=\"drpDirectorType\"\r\n                                                                        options={directorTypes}\r\n                                                                        getOptionLabel={directorTypes => directorTypes.DirectorTypeName}\r\n                                                                        renderInput={(params) => <TextField style={{ width: '100%' }} {...params} label=\"Director Type\" />}\r\n                                                                    />\r\n                                                                    <Autocomplete\r\n                                                                        onChange={(event, newValue) => {\r\n                                                                            setselectedIdType(newValue!);\r\n                                                                        }}\r\n                                                                        value={selectedIdType}\r\n                                                                        disablePortal\r\n                                                                        id=\"drpIDType\"\r\n                                                                        options={idTypes}\r\n                                                                        getOptionLabel={idType => idType.IDTypeName}\r\n                                                                        renderInput={(params) => <TextField style={{ width: '100%' }} {...params} label=\"ID Type\" />}\r\n                                                                    />\r\n                                                                    <Autocomplete\r\n                                                                        {...register('PlaceOfBirthID')}\r\n                                                                        onChange={(event, newValue) => {\r\n                                                                            setSelectedPlaceOfBirth(newValue!);\r\n                                                                        }}\r\n                                                                        value={selectedPlaceOfBirth}\r\n                                                                        disablePortal style={{ width: '100%' }}\r\n                                                                        id=\"drpPlaceOfBirth\"\r\n                                                                        options={placeOfBirths}\r\n                                                                        getOptionLabel={placeOfBirths => placeOfBirths.PlaceOfBirthName}\r\n                                                                        renderInput={(params) => <TextField style={{ width: '100%' }} {...params} label=\"Place of Birth\"\r\n                                                                            required={true}\r\n                                                                        />}\r\n                                                                    />\r\n\r\n                                                                    <Autocomplete\r\n                                                                        onChange={(event, newValue) => {\r\n                                                                            setSelectedDesignation(newValue!);\r\n                                                                        }}\r\n                                                                        value={selectedDesignation}\r\n                                                                        disablePortal style={{ width: '100%' }}\r\n                                                                        id=\"drpDesignation\"\r\n                                                                        options={designations}\r\n                                                                        getOptionLabel={designations => designations.DesignationName}\r\n                                                                        renderInput={(params) => <TextField style={{ width: '100%' }} {...params} label=\"Designation\" />}\r\n                                                                    />\r\n                                                                    <Autocomplete\r\n                                                                        {...register('NationalityID')}\r\n                                                                        onChange={(event, newValue) => {\r\n                                                                            setSelectedNationality(newValue!);\r\n                                                                        }}\r\n                                                                        value={selectedNationality}\r\n                                                                        disablePortal style={{ width: '100%' }}\r\n                                                                        id=\"drpNationality\"\r\n                                                                        options={nationalities}\r\n                                                                        getOptionLabel={nationalities => nationalities.NationalityName}\r\n                                                                        renderInput={(params) => <TextField style={{ width: '100%' }} {...params} label=\"Nationality\" />}\r\n                                                                    />\r\n                                                                    <TextField\r\n                                                                        style={{ width: '100%' }} type=\"text\"\r\n                                                                        id=\"outlined-required\"\r\n                                                                        label=\"Remarks\"\r\n                                                                        {...register('Remarks')}\r\n                                                                    />\r\n\r\n                                                                </div>\r\n                                                            </Grid>\r\n                                                            <Grid item xs={1.2}>\r\n                                                                <DirectorTypeForm xs={{ mb: 3 }} clearForm={() => { }} rerenderDirectorTypeTable={rerenderDirectorTypeTable} directorTypeFormFunc={useRef<any>(null)} directorTypeData={selectedDirectorType} AddButtonLabel=\"Add\" />\r\n                                                                <IDTypeForm clearForm={() => { }} rerenderIDTypeTable={rerenderIDTypeTable} iDTypeFormFunc={useRef<any>(null)} idTypeData={selectedIdType} AddButtonLabel=\"Add\" />\r\n                                                                <PlaceOfBirthForm clearForm={() => { }} rerenderPlaceOfBirthTable={rerenderPlaceOfBirthTable} placeOfBirthFormFunc={useRef<any>(null)} directorTypeData={selectedPlaceOfBirth} AddButtonLabel=\"Add\" />\r\n                                                                <DesignationForm clearForm={() => { }} rerenderDesignationTable={rerenderDesignationTable} designationFormFunc={useRef<any>(null)} designationData={selectedDesignation} AddButtonLabel=\"Add\" />\r\n\r\n                                                                <NationalityForm clearForm={() => { }} rerenderNationalityTable={rerenderNationalityTable} nationalityFormFunc={useRef<any>(null)} nationalityData={selectedNationality} AddButtonLabel=\"Add\" />\r\n\r\n                                                            </Grid>\r\n                                                        </Grid>\r\n                                                    </TabPanel>\r\n                                                    <TabPanel value={selectedTabIndex} index={1} dir={theme.direction}>\r\n                                                        <Grid container direction=\"row\" sx={uploadFileRowStyle} justifyContent=\"center\" alignItems=\"stretch\">\r\n                                                            <Grid item xs={3.5}>\r\n                                                                <label htmlFor=\"filePassport\" >\r\n                                                                    <input style={{ display: 'none' }} onChange={handleChangeFile} id=\"filePassport\" name=\"upload-photo\" type=\"file\" multiple />\r\n                                                                    <Fab sx={uploadFileStyle} color=\"secondary\" size=\"small\" component=\"div\" aria-label=\"add\" variant=\"extended\">\r\n                                                                        <CloudUploadIcon fontSize=\"large\" sx={{ mr: 2 }} />\r\n                                                                        <p style={{}}>Upload Passport</p>\r\n                                                                    </Fab>\r\n                                                                </label>\r\n\r\n                                                            </Grid>\r\n                                                            <Grid item xs={8.5}>\r\n                                                                <Stack direction=\"row\" spacing={2} sx={{ overflowX: 'auto', height: '75px' }}>\r\n                                                                    {\r\n                                                                        passportFilesDetail.map(x => {\r\n                                                                            return (\r\n                                                                                <ListItem sx={uploadFileListItemStyle} onClick={() => handleShowFile(x)}\r\n                                                                                    secondaryAction={\r\n                                                                                        <IconButton edge=\"end\" aria-label=\"delete\" onClick={(e) => handleDeleteFile(e, x, 'passports')}>\r\n                                                                                            <DeleteOutlineTwoToneIcon />\r\n                                                                                        </IconButton>\r\n                                                                                    }\r\n                                                                                >\r\n                                                                                    <ListItemAvatar>\r\n                                                                                        <Avatar>\r\n                                                                                            <FilePresentTwoToneIcon />\r\n                                                                                        </Avatar>\r\n                                                                                    </ListItemAvatar>\r\n                                                                                    <ListItemText\r\n                                                                                        primary={x.Name}\r\n                                                                                    />\r\n                                                                                </ListItem>\r\n                                                                            )\r\n                                                                        })\r\n                                                                    }\r\n\r\n                                                                </Stack>\r\n                                                            </Grid>\r\n                                                        </Grid>\r\n                                                        <Grid container direction=\"row\" sx={uploadFileRowStyle} justifyContent=\"flex-start\" alignItems=\"stretch\">\r\n                                                            <Grid item xs={3.5} >\r\n                                                                <label htmlFor=\"fileBills\">\r\n                                                                    <input style={{ display: 'none' }} onChange={handleChangeFile} id=\"fileBills\" name=\"upload-bill\" type=\"file\" multiple />\r\n                                                                    <Fab sx={uploadFileStyle} color=\"secondary\" size=\"small\" component=\"span\" aria-label=\"add\" variant=\"extended\">\r\n                                                                        <CloudUploadIcon fontSize=\"large\" sx={{ mr: 2 }} />\r\n                                                                        <p>Upload Utility Bills</p>\r\n                                                                    </Fab>\r\n                                                                </label>\r\n                                                            </Grid>\r\n                                                            <Grid item xs={8.5}>\r\n                                                                <Stack direction=\"row\" spacing={2} sx={{ overflowX: 'auto', height: '75px' }}>\r\n                                                                    {\r\n                                                                        billFilesDetail.map(x => {\r\n                                                                            return (\r\n                                                                                <ListItem sx={uploadFileListItemStyle} onClick={() => handleShowFile(x)}\r\n                                                                                    secondaryAction={\r\n                                                                                        <IconButton edge=\"end\" aria-label=\"delete\" onClick={(e) => handleDeleteFile(e, x, 'bills')}>\r\n                                                                                            <DeleteOutlineTwoToneIcon />\r\n                                                                                        </IconButton>\r\n                                                                                    }\r\n                                                                                >\r\n                                                                                    <ListItemAvatar>\r\n                                                                                        <Avatar>\r\n                                                                                            <FilePresentTwoToneIcon />\r\n                                                                                        </Avatar>\r\n                                                                                    </ListItemAvatar>\r\n                                                                                    <ListItemText\r\n                                                                                        primary={x.Name}\r\n                                                                                    />\r\n                                                                                </ListItem>\r\n                                                                            )\r\n                                                                        })\r\n                                                                    }\r\n                                                                </Stack>\r\n                                                            </Grid>\r\n                                                        </Grid>\r\n                                                        <Grid container direction=\"row\" sx={uploadFileRowStyle} justifyContent=\"center\" alignItems=\"stretch\">\r\n                                                            <Grid item xs={3.5}>\r\n                                                                <label htmlFor=\"fileCompanyDocs\">\r\n                                                                    <input style={{ display: 'none' }} onChange={handleChangeFile} id=\"fileCompanyDocs\" name=\"upload-company-docs\" type=\"file\" multiple />\r\n                                                                    <Fab sx={uploadFileStyle} color=\"secondary\" size=\"small\" component=\"span\" aria-label=\"add\" variant=\"extended\">\r\n                                                                        <CloudUploadIcon fontSize=\"large\" sx={{ mr: 2 }} />\r\n                                                                        <p>Upload Company Docs</p>\r\n                                                                    </Fab>\r\n                                                                </label>\r\n                                                            </Grid>\r\n                                                            <Grid item xs={8.5}>\r\n                                                                <Stack direction=\"row\" spacing={2} sx={{ overflowX: 'auto', height: '75px' }}>\r\n                                                                    {\r\n                                                                        companyFilesDetail.map(x => {\r\n                                                                            return (\r\n                                                                                <ListItem sx={uploadFileListItemStyle} onClick={() => handleShowFile(x)}\r\n                                                                                    secondaryAction={\r\n                                                                                        <IconButton edge=\"end\" aria-label=\"delete\" onClick={(e) => handleDeleteFile(e, x, 'company')}>\r\n                                                                                            <DeleteOutlineTwoToneIcon />\r\n                                                                                        </IconButton>\r\n                                                                                    }\r\n                                                                                >\r\n                                                                                    <ListItemAvatar>\r\n                                                                                        <Avatar>\r\n                                                                                            <FilePresentTwoToneIcon />\r\n                                                                                        </Avatar>\r\n                                                                                    </ListItemAvatar>\r\n                                                                                    <ListItemText\r\n                                                                                        primary={x.Name}\r\n                                                                                    />\r\n                                                                                </ListItem>\r\n                                                                            )\r\n                                                                        })\r\n                                                                    }\r\n                                                                </Stack>\r\n                                                            </Grid>\r\n                                                        </Grid>\r\n                                                        <Grid container direction=\"row\" sx={uploadFileRowStyle} justifyContent=\"center\" alignItems=\"stretch\">\r\n                                                            <Grid item xs={3.5}>\r\n                                                                <label htmlFor=\"fileOtherDocs\">\r\n                                                                    <input style={{ display: 'none' }} onChange={handleChangeFile} id=\"fileOtherDocs\" name=\"upload-photo\" type=\"file\" multiple />\r\n                                                                    <Fab sx={uploadFileStyle} color=\"secondary\" size=\"small\" component=\"span\" aria-label=\"add\" variant=\"extended\">\r\n                                                                        <CloudUploadIcon fontSize=\"large\" sx={{ mr: 2 }} />\r\n                                                                        <p>Upload Other Docs</p>\r\n                                                                    </Fab>\r\n                                                                </label>\r\n                                                            </Grid>\r\n                                                            <Grid item xs={8.5}>\r\n                                                                <Stack direction=\"row\" spacing={2} sx={{ overflowX: 'auto', height: '75px' }}>\r\n                                                                    {\r\n                                                                        otherFilesDetail.map(x => {\r\n                                                                            return (\r\n                                                                                <ListItem sx={uploadFileListItemStyle} onClick={() => handleShowFile(x)}\r\n                                                                                    secondaryAction={\r\n                                                                                        <IconButton edge=\"end\" aria-label=\"delete\" onClick={(e) => handleDeleteFile(e, x, 'others')}>\r\n                                                                                            <DeleteOutlineTwoToneIcon />\r\n                                                                                        </IconButton>\r\n                                                                                    }\r\n                                                                                >\r\n                                                                                    <ListItemAvatar>\r\n                                                                                        <Avatar>\r\n                                                                                            <FilePresentTwoToneIcon />\r\n                                                                                        </Avatar>\r\n                                                                                    </ListItemAvatar>\r\n                                                                                    <ListItemText\r\n                                                                                        primary={x.Name}\r\n                                                                                    />\r\n                                                                                </ListItem>\r\n                                                                            )\r\n                                                                        })\r\n                                                                    }\r\n                                                                </Stack>\r\n                                                            </Grid>\r\n                                                        </Grid>\r\n                                                        <Grid container direction=\"row\" sx={uploadFileRowStyle} justifyContent=\"center\" alignItems=\"stretch\">\r\n                                                            <Grid item xs={3.5}>\r\n                                                                <label htmlFor=\"fileWorld\">\r\n                                                                    <input style={{ display: 'none' }} onChange={handleChangeFile} id=\"fileWorld\" name=\"upload-photo\" type=\"file\" multiple />\r\n                                                                    <Fab sx={uploadFileStyle} color=\"secondary\" size=\"small\" component=\"span\" aria-label=\"add\" variant=\"extended\">\r\n                                                                        <CloudUploadIcon fontSize=\"large\" sx={{ mr: 2 }} />\r\n                                                                        <p>Upload World Check</p>\r\n                                                                    </Fab>\r\n                                                                </label>\r\n                                                            </Grid>\r\n                                                            <Grid item xs={8.5}>\r\n                                                                <Stack direction=\"row\" spacing={2} sx={{ overflowX: 'auto', height: '75px' }}>\r\n                                                                    {\r\n                                                                        worldFilesDetail.map(x => {\r\n                                                                            return (\r\n                                                                                <ListItem sx={uploadFileListItemStyle} onClick={() => handleShowFile(x)}\r\n                                                                                    secondaryAction={\r\n                                                                                        <IconButton edge=\"end\" aria-label=\"delete\" onClick={(e) => handleDeleteFile(e, x, 'worlds')}>\r\n                                                                                            <DeleteOutlineTwoToneIcon />\r\n                                                                                        </IconButton>\r\n                                                                                    }\r\n                                                                                >\r\n                                                                                    <ListItemAvatar>\r\n                                                                                        <Avatar>\r\n                                                                                            <FilePresentTwoToneIcon />\r\n                                                                                        </Avatar>\r\n                                                                                    </ListItemAvatar>\r\n                                                                                    <ListItemText\r\n                                                                                        primary={x.Name}\r\n                                                                                    />\r\n                                                                                </ListItem>\r\n                                                                            )\r\n                                                                        })\r\n                                                                    }\r\n                                                                </Stack>\r\n                                                            </Grid>\r\n                                                        </Grid>\r\n                                                    </TabPanel>\r\n                                                </SwipeableViews>\r\n                                            </Box>\r\n                                        </CardContent>\r\n                                    </Card>\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <Button style={{ display: selectedTabIndex == 1 ? 'none' : undefined }} type=\"submit\" sx={{ margin: 1 }} variant=\"contained\" color=\"primary\"> Next</Button>\r\n                                    <Button style={{ display: selectedTabIndex == 0 ? 'none' : undefined }} type=\"button\" sx={{ margin: 1 }} variant=\"contained\" color=\"primary\" onClick={handleSave}> Save</Button>\r\n                                    <Button onClick={() => onClickBack()} sx={{ margin: 1 }} style={{ display: selectedTabIndex == 0 ? 'none' : undefined }} type=\"button\" variant=\"contained\" color=\"primary\"> Back</Button>\r\n                                    <Button type=\"button\"\r\n                                        onClick={() => resetForm()} sx={{ margin: 1 }} variant=\"contained\" color=\"secondary\">\r\n                                        Reset\r\n                                    </Button>\r\n                                    <Box component='span' hidden={directorData.DirectorID == undefined}>\r\n                                        <Button type=\"button\" sx={{ margin: 1, float: 'right' }} variant=\"contained\" color=\"error\" onClick={handelOpenDeleteModal}> Delete</Button>\r\n                                    </Box>\r\n\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                            {/*</form>*/}\r\n                        </div>\r\n                    </Container>\r\n                </Box>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default DirectorForm;\r\n"]},"metadata":{},"sourceType":"module"}