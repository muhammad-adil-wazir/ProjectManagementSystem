{"ast":null,"code":"var _jsxFileName = \"E:\\\\Projects\\\\Rebartek\\\\CMS.WEBUI\\\\src\\\\content\\\\pages\\\\Components\\\\ManagerType\\\\index.tsx\",\n    _s = $RefreshSig$();\n\n//import { Helmet } from 'react-helmet-async';\nimport { Grid, Container } from '@mui/material';\nimport { useRef, useState } from 'react';\nimport { ManagerTypeForm } from './ManagerTypeForm';\nimport ManagerTypeTable from './ManagerTypeTable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ManagerType() {\n  _s();\n\n  const initualData = {\n    ManagerTypeName: \"\",\n    Remarks: \"\"\n  };\n  const [managerTypeData, setManagerTypeData] = useState(initualData);\n  const [rerenderTableFlag, setrerenderTableFlag] = useState(false);\n  const managerTypeFormFunc = useRef(null);\n\n  const editHandler = (event, managerType) => {\n    event.stopPropagation();\n    setManagerTypeData(managerType);\n\n    if (managerTypeFormFunc.current != null) {\n      var _managerTypeFormFunc$;\n\n      (_managerTypeFormFunc$ = managerTypeFormFunc.current) === null || _managerTypeFormFunc$ === void 0 ? void 0 : _managerTypeFormFunc$.call(managerTypeFormFunc);\n    }\n  };\n\n  const clearManagerTypeData = () => {\n    setManagerTypeData(initualData);\n  };\n\n  const rerenderTable = () => {\n    setrerenderTableFlag(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"lg\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        justifyContent: \"center\",\n        alignItems: \"stretch\",\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(ManagerTypeForm, {\n            clearForm: clearManagerTypeData,\n            rerenderTable: rerenderTable,\n            managerTypeFormFunc: managerTypeFormFunc,\n            managerTypeData: managerTypeData,\n            AddButtonLabel: \"+ Add Manager Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(ManagerTypeTable, {\n            editHandler: editHandler,\n            rerenderTableFlag: rerenderTableFlag\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(ManagerType, \"+3+fPF7CC/WQ8dxAp0UVlk/sGNw=\");\n\n_c = ManagerType;\nexport default ManagerType;\n\nvar _c;\n\n$RefreshReg$(_c, \"ManagerType\");","map":{"version":3,"sources":["E:/Projects/Rebartek/CMS.WEBUI/src/content/pages/Components/ManagerType/index.tsx"],"names":["Grid","Container","useRef","useState","ManagerTypeForm","ManagerTypeTable","ManagerType","initualData","ManagerTypeName","Remarks","managerTypeData","setManagerTypeData","rerenderTableFlag","setrerenderTableFlag","managerTypeFormFunc","editHandler","event","managerType","stopPropagation","current","clearManagerTypeData","rerenderTable"],"mappings":";;;AAAA;AACA,SAASA,IAAT,EAAeC,SAAf,QAAgC,eAAhC;AACA,SAA4BC,MAA5B,EAAoCC,QAApC,QAAoD,OAApD;AACA,SAASC,eAAT,QAAkD,mBAAlD;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;;;;AAEA,SAASC,WAAT,GAAuB;AAAA;;AACnB,QAAMC,WAAW,GAAG;AAChBC,IAAAA,eAAe,EAAE,EADD;AAEhBC,IAAAA,OAAO,EAAE;AAFO,GAApB;AAIA,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCR,QAAQ,CAAmBI,WAAnB,CAAtD;AACA,QAAM,CAACK,iBAAD,EAAoBC,oBAApB,IAA4CV,QAAQ,CAAU,KAAV,CAA1D;AACA,QAAMW,mBAAmB,GAAGZ,MAAM,CAAM,IAAN,CAAlC;;AACA,QAAMa,WAAgB,GAAG,CAACC,KAAD,EAAaC,WAAb,KAAkC;AACvDD,IAAAA,KAAK,CAACE,eAAN;AAEAP,IAAAA,kBAAkB,CAACM,WAAD,CAAlB;;AACA,QAAIH,mBAAmB,CAACK,OAApB,IAA+B,IAAnC,EAAyC;AAAA;;AACrC,+BAAAL,mBAAmB,CAACK,OAApB,qFAAAL,mBAAmB;AACtB;AACJ,GAPD;;AAQA,QAAMM,oBAAoB,GAAG,MAAM;AAC/BT,IAAAA,kBAAkB,CAACJ,WAAD,CAAlB;AACH,GAFD;;AAGA,QAAMc,aAAa,GAAG,MAAM;AACxBR,IAAAA,oBAAoB,CAAC,IAAD,CAApB;AACH,GAFD;;AAGA,sBACI;AAAA,2BAEI,QAAC,SAAD;AAAW,MAAA,QAAQ,EAAC,IAApB;AAAA,6BACI,QAAC,IAAD;AACI,QAAA,SAAS,MADb;AAEI,QAAA,SAAS,EAAC,KAFd;AAGI,QAAA,cAAc,EAAC,QAHnB;AAII,QAAA,UAAU,EAAC,SAJf;AAKI,QAAA,OAAO,EAAE,CALb;AAAA,gCAOI,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAA,iCACI,QAAC,eAAD;AAAiB,YAAA,SAAS,EAAEO,oBAA5B;AAAkD,YAAA,aAAa,EAAEC,aAAjE;AAAgF,YAAA,mBAAmB,EAAEP,mBAArG;AAA0H,YAAA,eAAe,EAAEJ,eAA3I;AAA4J,YAAA,cAAc,EAAE;AAA5K;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAPJ,eAUI,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAA,iCACI,QAAC,gBAAD;AAAkB,YAAA,WAAW,EAAEK,WAA/B;AAA4C,YAAA,iBAAiB,EAAEH;AAA/D;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAFJ,mBADJ;AAqBH;;GA3CQN,W;;KAAAA,W;AA6CT,eAAeA,WAAf","sourcesContent":["//import { Helmet } from 'react-helmet-async';\r\nimport { Grid, Container } from '@mui/material';\r\nimport { MouseEventHandler, useRef, useState } from 'react';\r\nimport { ManagerTypeForm, ManagerTypeModel } from './ManagerTypeForm';\r\nimport ManagerTypeTable from './ManagerTypeTable';\r\n\r\nfunction ManagerType() {\r\n    const initualData = {\r\n        ManagerTypeName: \"\",\r\n        Remarks: \"\",\r\n    }\r\n    const [managerTypeData, setManagerTypeData] = useState<ManagerTypeModel>(initualData);\r\n    const [rerenderTableFlag, setrerenderTableFlag] = useState<boolean>(false);\r\n    const managerTypeFormFunc = useRef<any>(null)\r\n    const editHandler: any = (event: any, managerType: any) => {\r\n        event.stopPropagation();\r\n\r\n        setManagerTypeData(managerType);\r\n        if (managerTypeFormFunc.current != null) {\r\n            managerTypeFormFunc.current?.();\r\n        }\r\n    }\r\n    const clearManagerTypeData = () => {\r\n        setManagerTypeData(initualData);\r\n    }\r\n    const rerenderTable = () => {\r\n        setrerenderTableFlag(true);\r\n    }\r\n    return (\r\n        <>\r\n\r\n            <Container maxWidth=\"lg\">\r\n                <Grid\r\n                    container\r\n                    direction=\"row\"\r\n                    justifyContent=\"center\"\r\n                    alignItems=\"stretch\"\r\n                    spacing={3}\r\n                >\r\n                    <Grid item xs={12}>\r\n                        <ManagerTypeForm clearForm={clearManagerTypeData} rerenderTable={rerenderTable} managerTypeFormFunc={managerTypeFormFunc} managerTypeData={managerTypeData} AddButtonLabel={\"+ Add Manager Type\"} />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <ManagerTypeTable editHandler={editHandler} rerenderTableFlag={rerenderTableFlag} />\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ManagerType;\r\n"]},"metadata":{},"sourceType":"module"}