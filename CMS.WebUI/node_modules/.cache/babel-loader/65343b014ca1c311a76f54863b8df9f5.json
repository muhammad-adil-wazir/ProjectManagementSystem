{"ast":null,"code":"var _jsxFileName = \"E:\\\\Projects\\\\LFMS\\\\LFMS.WebUI\\\\src\\\\content\\\\pages\\\\Components\\\\Director\\\\DirectorForm.tsx\",\n    _s = $RefreshSig$();\n\n////import { Helmet } from 'react-helmet-async';\nimport { useEffect, useState } from 'react';\nimport * as Yup from \"yup\";\nimport { post } from \"../../../../services/common.service\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { Button, Container, Grid, Card, CardHeader, CardContent, Divider, TextField, Box, Modal, Typography, Autocomplete, Tabs, Tab, AppBar, useTheme } from '@mui/material';\nimport SwipeableViews from 'react-swipeable-views';\nimport { useForm } from 'react-hook-form';\nimport { dropdowns } from '../../../../services/dropdowns.service';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst label = {\n  inputProps: {\n    'aria-label': 'Switch demo'\n  }\n};\nconst hidden = {\n  display: 'none'\n};\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 1000,\n  bgcolor: 'background.paper',\n  //border: '2px solid #000',\n  boxShadow: 24,\n  p: 4\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `full-width-tab-${index}`,\n    'aria-controls': `full-width-tabpanel-${index}`\n  };\n}\n\nfunction TabPanel(props) {\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `full-width-tabpanel-${index}`,\n    \"aria-labelledby\": `full-width-tab-${index}`,\n    ...other,\n    children: value === index && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n\n_c = TabPanel;\nexport const DirectorForm = _ref => {\n  _s();\n\n  let {\n    clearForm,\n    directorFormFunc,\n    directorData,\n    rerenderTable\n  } = _ref;\n  const [openSuccessAlert, setopenSuccessAlert] = useState(false);\n  const [directorTypes, setDirectorTypes] = useState([]);\n  const [designations, setDesignations] = useState([]);\n  const [nationalities, setNationalities] = useState([]);\n  const [placeOfBirth, setPlaceOfBirth] = useState([]);\n  const [selectedTabIndex, setSelectedTabIndex] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [open, setOpen] = useState(false);\n  const theme = useTheme();\n\n  const handleOpen = () => {\n    setOpen(true); // reset(companyTypeData);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    reset(directorData);\n    clearForm();\n  };\n\n  const handleAlertClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setopenSuccessAlert(false);\n  };\n\n  const showModal = () => {\n    setOpen(true);\n    reset(directorData);\n  };\n\n  const resetForm = () => {\n    reset(directorData);\n    clearForm();\n  };\n\n  const changeTab = index => {\n    return {\n      id: `simple-tab-${index}`,\n      'aria-controls': `simple-tabpanel-${index}`\n    };\n  };\n\n  useEffect(() => {\n    directorFormFunc.current = handleOpen;\n    reset(directorData);\n    loadDropdowns();\n  }, []);\n  useEffect(() => {\n    reset(directorData);\n  }, [directorData, directorFormFunc]);\n\n  const loadDropdowns = () => {\n    dropdowns.getDirectorTypes().then(x => {\n      console.log(x);\n      setDirectorTypes(x);\n    }); //dropdowns.getDirectorTypes().then(x => setDirectorTypes(x));\n    //dropdowns.getDirectorTypes().then(x => setDirectorTypes(x));\n  };\n\n  const validationSchema = Yup.object().shape({\n    companyTypeName: Yup.string().required('Director is required').min(2, 'Director must be at least 2 characters').max(20, 'Director must not exceed 20 characters')\n  });\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(validationSchema)\n  });\n\n  const onClickNext = data => {\n    setSelectedTabIndex(1); //handleFormSubmit(data);\n    //console.log(JSON.stringify(data, null, 2));\n  };\n\n  const onSubmit = data => {\n    handleFormSubmit(data); //console.log(JSON.stringify(data, null, 2));\n  };\n\n  const handleFormSubmit = director => {\n    setLoading(true);\n    let _url = 'director/AddDirector';\n\n    if (director.DirectorID != undefined) {\n      _url = 'director/EditDirector';\n    }\n\n    post(_url, director).then(response => {\n      // history.push(\"/profile\");\n      if (response.data.status == 'success') {\n        setMessage('Director Successfully Saved!');\n        setopenSuccessAlert(true);\n        handleClose();\n        rerenderTable();\n      }\n    }, error => {\n      const resMessage = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n      setLoading(false);\n      setMessage(resMessage);\n    });\n  };\n\n  const handleTabChange = (event, newValue) => {\n    setSelectedTabIndex(newValue);\n  };\n\n  const handleChangeIndex = index => {\n    setSelectedTabIndex(index);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      sx: {\n        margin: 1\n      },\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleOpen,\n      children: \"Open modal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"modal-modal-title\",\n      \"aria-describedby\": \"modal-modal-description\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: style,\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          maxWidth: \"md\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"register-form\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleSubmit(onSubmit),\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                direction: \"row\",\n                justifyContent: \"center\",\n                alignItems: \"stretch\",\n                spacing: 1,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(Card, {\n                    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n                      title: \"Enter Company Type Detail\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 215,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 216,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(AppBar, {\n                      position: \"static\",\n                      children: /*#__PURE__*/_jsxDEV(Tabs, {\n                        value: selectedTabIndex,\n                        onChange: handleTabChange,\n                        indicatorColor: \"secondary\",\n                        textColor: \"inherit\",\n                        variant: \"fullWidth\",\n                        \"aria-label\": \"full width tabs example\",\n                        children: [/*#__PURE__*/_jsxDEV(Tab, {\n                          label: \"Details\",\n                          ...a11yProps(0)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 226,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n                          label: \"Uploads\",\n                          ...a11yProps(1)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 227,\n                          columnNumber: 53\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 218,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 217,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(SwipeableViews, {\n                      axis: theme.direction === 'rtl' ? 'x-reverse' : 'x',\n                      index: selectedTabIndex,\n                      onChangeIndex: handleChangeIndex,\n                      children: [/*#__PURE__*/_jsxDEV(TabPanel, {\n                        value: selectedTabIndex,\n                        index: 0,\n                        dir: theme.direction,\n                        children: \"Item One\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 235,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n                        value: selectedTabIndex,\n                        index: 1,\n                        dir: theme.direction,\n                        children: \"Item Two\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 238,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n                        value: selectedTabIndex,\n                        index: 2,\n                        dir: theme.direction,\n                        children: \"Item Three\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 241,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 230,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 245,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n                      children: /*#__PURE__*/_jsxDEV(Box, {\n                        component: \"form\",\n                        sx: {\n                          '& .MuiTextField-root': {\n                            my: 1,\n                            width: '25ch'\n                          }\n                        },\n                        noValidate: true,\n                        autoComplete: \"off\",\n                        children: /*#__PURE__*/_jsxDEV(Grid, {\n                          container: true,\n                          direction: \"row\",\n                          justifyContent: \"center\",\n                          alignItems: \"stretch\",\n                          spacing: 1,\n                          children: [/*#__PURE__*/_jsxDEV(Grid, {\n                            item: true,\n                            xs: 4,\n                            children: /*#__PURE__*/_jsxDEV(\"div\", {\n                              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                                style: {\n                                  width: '100%'\n                                },\n                                required: true,\n                                id: \"outlined-required\",\n                                label: \"DirectorName\",\n                                ...register('DirectorName'),\n                                className: `form-control ${errors.DirectorName ? 'is-invalid' : ''}`\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 264,\n                                columnNumber: 57\n                              }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n                                disablePortal: true,\n                                style: {\n                                  width: '100%'\n                                },\n                                id: \"drpDirectorType\",\n                                options: directorTypes,\n                                renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n                                  style: {\n                                    width: '100%'\n                                  },\n                                  ...params,\n                                  label: \"Director Type\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 276,\n                                  columnNumber: 86\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 272,\n                                columnNumber: 57\n                              }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n                                disablePortal: true,\n                                style: {\n                                  width: '100%'\n                                },\n                                id: \"drpDirectorType\",\n                                options: directorTypes,\n                                renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n                                  style: {\n                                    width: '100%'\n                                  },\n                                  ...params,\n                                  label: \"Director Type\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 282,\n                                  columnNumber: 86\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 278,\n                                columnNumber: 57\n                              }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n                                disablePortal: true,\n                                style: {\n                                  width: '100%'\n                                },\n                                id: \"drpDirectorType\",\n                                options: directorTypes,\n                                renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n                                  style: {\n                                    width: '100%'\n                                  },\n                                  ...params,\n                                  label: \"Director Type\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 288,\n                                  columnNumber: 86\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 284,\n                                columnNumber: 57\n                              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                                style: {\n                                  width: '100%'\n                                },\n                                required: true,\n                                id: \"outlined-required\",\n                                label: \"DirectorName\",\n                                ...register('DirectorName'),\n                                className: `form-control ${errors.DirectorName ? 'is-invalid' : ''}`\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 290,\n                                columnNumber: 57\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 263,\n                              columnNumber: 53\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 262,\n                            columnNumber: 53\n                          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                            item: true,\n                            xs: 4,\n                            children: /*#__PURE__*/_jsxDEV(\"div\", {\n                              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                                style: {\n                                  width: '100%'\n                                },\n                                required: true,\n                                id: \"outlined-required\",\n                                label: \"DirectorName\",\n                                ...register('DirectorName'),\n                                className: `form-control ${errors.DirectorName ? 'is-invalid' : ''}`\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 302,\n                                columnNumber: 61\n                              }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n                                disablePortal: true,\n                                style: {\n                                  width: '100%'\n                                },\n                                id: \"drpDirectorType\",\n                                options: directorTypes,\n                                renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n                                  style: {\n                                    width: '100%'\n                                  },\n                                  ...params,\n                                  label: \"Director Type\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 314,\n                                  columnNumber: 90\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 310,\n                                columnNumber: 61\n                              }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n                                disablePortal: true,\n                                style: {\n                                  width: '100%'\n                                },\n                                id: \"drpDirectorType\",\n                                options: directorTypes,\n                                renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n                                  style: {\n                                    width: '100%'\n                                  },\n                                  ...params,\n                                  label: \"Director Type\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 320,\n                                  columnNumber: 90\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 316,\n                                columnNumber: 61\n                              }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n                                disablePortal: true,\n                                style: {\n                                  width: '100%'\n                                },\n                                id: \"drpDirectorType\",\n                                options: directorTypes,\n                                renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n                                  style: {\n                                    width: '100%'\n                                  },\n                                  ...params,\n                                  label: \"Director Type\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 326,\n                                  columnNumber: 90\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 322,\n                                columnNumber: 61\n                              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                                style: {\n                                  width: '100%'\n                                },\n                                required: true,\n                                id: \"outlined-required\",\n                                label: \"DirectorName\",\n                                ...register('DirectorName'),\n                                className: `form-control ${errors.DirectorName ? 'is-invalid' : ''}`\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 328,\n                                columnNumber: 61\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 301,\n                              columnNumber: 57\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 300,\n                            columnNumber: 53\n                          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                            item: true,\n                            xs: 4,\n                            children: /*#__PURE__*/_jsxDEV(\"div\", {\n                              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                                style: {\n                                  width: '100%'\n                                },\n                                required: true,\n                                id: \"outlined-required\",\n                                label: \"DirectorName\",\n                                ...register('DirectorName'),\n                                className: `form-control ${errors.DirectorName ? 'is-invalid' : ''}`\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 340,\n                                columnNumber: 61\n                              }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n                                disablePortal: true,\n                                style: {\n                                  width: '100%'\n                                },\n                                id: \"drpDirectorType\",\n                                options: directorTypes,\n                                renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n                                  style: {\n                                    width: '100%'\n                                  },\n                                  ...params,\n                                  label: \"Director Type\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 352,\n                                  columnNumber: 90\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 348,\n                                columnNumber: 61\n                              }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n                                disablePortal: true,\n                                style: {\n                                  width: '100%'\n                                },\n                                id: \"drpDirectorType\",\n                                options: directorTypes,\n                                renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n                                  style: {\n                                    width: '100%'\n                                  },\n                                  ...params,\n                                  label: \"Director Type\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 358,\n                                  columnNumber: 90\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 354,\n                                columnNumber: 61\n                              }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n                                disablePortal: true,\n                                style: {\n                                  width: '100%'\n                                },\n                                id: \"drpDirectorType\",\n                                options: directorTypes,\n                                renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n                                  style: {\n                                    width: '100%'\n                                  },\n                                  ...params,\n                                  label: \"Director Type\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 364,\n                                  columnNumber: 90\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 360,\n                                columnNumber: 61\n                              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                                style: {\n                                  width: '100%'\n                                },\n                                required: true,\n                                id: \"outlined-required\",\n                                label: \"DirectorName\",\n                                ...register('DirectorName'),\n                                className: `form-control ${errors.DirectorName ? 'is-invalid' : ''}`\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 366,\n                                columnNumber: 61\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 339,\n                              columnNumber: 57\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 338,\n                            columnNumber: 53\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 255,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 247,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 246,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 214,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    style: {\n                      display: selectedTabIndex == 1 ? 'none' : undefined\n                    },\n                    type: \"submit\",\n                    sx: {\n                      margin: 1\n                    },\n                    variant: \"contained\",\n                    color: \"primary\",\n                    onClick: onClickNext,\n                    children: \" Next\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 382,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    style: {\n                      display: selectedTabIndex == 0 ? 'none' : undefined\n                    },\n                    type: \"submit\",\n                    sx: {\n                      margin: 1\n                    },\n                    variant: \"contained\",\n                    color: \"primary\",\n                    children: \" Save\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 383,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    type: \"button\",\n                    onClick: () => resetForm(),\n                    sx: {\n                      margin: 1\n                    },\n                    variant: \"contained\",\n                    color: \"secondary\",\n                    children: \"Reset\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 384,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 381,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(DirectorForm, \"UzmqlduRwVl1lDrwcAfhjxhQH0I=\", false, function () {\n  return [useTheme, useForm];\n});\n\n_c2 = DirectorForm;\nexport default DirectorForm;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TabPanel\");\n$RefreshReg$(_c2, \"DirectorForm\");","map":{"version":3,"sources":["E:/Projects/LFMS/LFMS.WebUI/src/content/pages/Components/Director/DirectorForm.tsx"],"names":["useEffect","useState","Yup","post","yupResolver","Button","Container","Grid","Card","CardHeader","CardContent","Divider","TextField","Box","Modal","Typography","Autocomplete","Tabs","Tab","AppBar","useTheme","SwipeableViews","useForm","dropdowns","label","inputProps","hidden","display","style","position","top","left","transform","width","bgcolor","boxShadow","p","a11yProps","index","id","TabPanel","props","children","value","other","DirectorForm","clearForm","directorFormFunc","directorData","rerenderTable","openSuccessAlert","setopenSuccessAlert","directorTypes","setDirectorTypes","designations","setDesignations","nationalities","setNationalities","placeOfBirth","setPlaceOfBirth","selectedTabIndex","setSelectedTabIndex","loading","setLoading","message","setMessage","open","setOpen","theme","handleOpen","handleClose","reset","handleAlertClose","event","reason","showModal","resetForm","changeTab","current","loadDropdowns","getDirectorTypes","then","x","console","log","validationSchema","object","shape","companyTypeName","string","required","min","max","register","handleSubmit","formState","errors","resolver","onClickNext","data","onSubmit","handleFormSubmit","director","_url","DirectorID","undefined","response","status","error","resMessage","toString","handleTabChange","newValue","handleChangeIndex","margin","direction","my","DirectorName","params"],"mappings":"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","sourcesContent":["////import { Helmet } from 'react-helmet-async';\r\nimport PageTitle from '../../../../components/PageTitle';\r\nimport { useEffect, useState } from 'react';\r\nimport * as Yup from \"yup\";\r\nimport { post} from \"../../../../services/common.service\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\n\r\nimport PageTitleWrapper from '../../../../components/PageTitleWrapper';\r\nimport { Button, IconButton, Container, Grid, Card, CardHeader, CardContent, Divider, TextField, Box, Modal, Typography, Autocomplete, Tabs, Tab, AppBar, useTheme } from '@mui/material';\r\nimport Footer from '../../../../components/Footer';\r\nimport SwipeableViews from 'react-swipeable-views';\r\n\r\nimport Switch from '@mui/material/Switch';\r\nimport { useForm } from 'react-hook-form';\r\nimport { DirectorModel } from '../../../../types/director.type';\r\nimport { dropdowns } from '../../../../services/dropdowns.service';\r\nimport { DesignationModel, DirectorTypeModel, NationalityModel, PlaceOfBirthModel } from '../../../../types/master.type';\r\nimport Scrollbars from 'react-custom-scrollbars-2';\r\n\r\n\r\n\r\nconst label = { inputProps: { 'aria-label': 'Switch demo' } };\r\n\r\nconst hidden = {display:'none'}\r\nconst style = {\r\n    position: 'absolute' as 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 1000,\r\n    bgcolor: 'background.paper',\r\n    //border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n};\r\n\r\nfunction a11yProps(index: number) {\r\n    return {\r\n        id: `full-width-tab-${index}`,\r\n        'aria-controls': `full-width-tabpanel-${index}`,\r\n    };\r\n}\r\ninterface TabPanelProps {\r\n    children?: React.ReactNode;\r\n    dir?: string;\r\n    index: number;\r\n    value: number;\r\n}\r\n\r\nfunction TabPanel(props: TabPanelProps) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`full-width-tabpanel-${index}`}\r\n            aria-labelledby={`full-width-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box sx={{ p: 3 }}>\r\n                    <Typography>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\nexport const DirectorForm: React.FC<any> = ({ clearForm, directorFormFunc, directorData, rerenderTable}) => {\r\n    const [openSuccessAlert, setopenSuccessAlert] = useState<boolean>(false);\r\n    const [directorTypes, setDirectorTypes] = useState<DirectorTypeModel[]>([]);\r\n    const [designations, setDesignations] = useState<DesignationModel[]>([]);\r\n    const [nationalities, setNationalities] = useState<NationalityModel[]>([]);\r\n    const [placeOfBirth, setPlaceOfBirth] = useState<PlaceOfBirthModel[]>([]);\r\n    const [selectedTabIndex, setSelectedTabIndex] = useState(0);\r\n    const [loading, setLoading] = useState<boolean>(false);\r\n    const [message, setMessage] = useState<string>(\"\");\r\n    const [open, setOpen] = useState(false);\r\n    const theme = useTheme();\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n        // reset(companyTypeData);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        reset(directorData);\r\n        clearForm();\r\n    }\r\n    const handleAlertClose = (event?: React.SyntheticEvent | Event, reason?: string) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setopenSuccessAlert(false);\r\n    };\r\n   \r\n    const showModal = () => {\r\n        setOpen(true);\r\n        reset(directorData);\r\n    }\r\n    const resetForm = () => {\r\n        reset(directorData);\r\n        clearForm();\r\n    }\r\n    const changeTab = (index: number) => {\r\n        return {\r\n            id: `simple-tab-${index}`,\r\n            'aria-controls': `simple-tabpanel-${index}`,\r\n        };\r\n    }\r\n    useEffect(() => {\r\n        directorFormFunc.current = handleOpen\r\n        reset(directorData);\r\n        loadDropdowns();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        reset(directorData);\r\n    }, [directorData, directorFormFunc]);\r\n\r\n    const loadDropdowns = () => {\r\n        dropdowns.getDirectorTypes().then(x => {\r\n            console.log(x);\r\n            setDirectorTypes(x);\r\n        }\r\n          \r\n        );\r\n        //dropdowns.getDirectorTypes().then(x => setDirectorTypes(x));\r\n        //dropdowns.getDirectorTypes().then(x => setDirectorTypes(x));\r\n    }\r\n    const validationSchema = Yup.object().shape({\r\n        companyTypeName: Yup.string()\r\n            .required('Director is required')\r\n            .min(2, 'Director must be at least 2 characters')\r\n            .max(20, 'Director must not exceed 20 characters'),\r\n    });\r\n\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        reset,\r\n        formState: { errors }\r\n    } = useForm<DirectorModel>({\r\n        resolver: yupResolver(validationSchema)\r\n    });\r\n    const onClickNext = (data: DirectorModel) => {\r\n        setSelectedTabIndex(1);\r\n        //handleFormSubmit(data);\r\n        //console.log(JSON.stringify(data, null, 2));\r\n    };\r\n    const onSubmit = (data: DirectorModel) => {\r\n        handleFormSubmit(data);\r\n        //console.log(JSON.stringify(data, null, 2));\r\n    };\r\n    const handleFormSubmit = (director: DirectorModel) => {\r\n        setLoading(true);\r\n        let _url = 'director/AddDirector';\r\n        if (director.DirectorID != undefined) {\r\n            _url = 'director/EditDirector';\r\n        }\r\n        post(_url, director).then(\r\n            (response: any) => {\r\n                // history.push(\"/profile\");\r\n                if (response.data.status == 'success') {\r\n                    setMessage('Director Successfully Saved!');\r\n                    setopenSuccessAlert(true);\r\n                    handleClose();\r\n                    rerenderTable();\r\n                }\r\n            },\r\n            (error: any) => {\r\n                const resMessage =\r\n                    (error.response &&\r\n                        error.response.data &&\r\n                        error.response.data.message) ||\r\n                    error.message ||\r\n                    error.toString();\r\n                setLoading(false);\r\n                setMessage(resMessage);\r\n            }\r\n        ); \r\n    };\r\n\r\n    const handleTabChange = (event: React.SyntheticEvent, newValue: number) => {\r\n        setSelectedTabIndex(newValue);\r\n    };\r\n    const handleChangeIndex = (index: number) => {\r\n        setSelectedTabIndex(index);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Button sx={{ margin: 1 }} variant=\"contained\" color=\"primary\" onClick={handleOpen}>Open modal</Button>\r\n           \r\n            <Modal\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"modal-modal-title\"\r\n                aria-describedby=\"modal-modal-description\"\r\n            >\r\n                <Box sx={style}>\r\n                    <Container maxWidth=\"md\">\r\n                        <div className=\"register-form\">\r\n                            <form onSubmit={handleSubmit(onSubmit)}>\r\n                                <Grid\r\n                                    container\r\n                                    direction=\"row\"\r\n                                    justifyContent=\"center\"\r\n                                    alignItems=\"stretch\"\r\n                                    spacing={1}\r\n                                >\r\n                                    <Grid item xs={12}>\r\n                                        <Card>\r\n                                            <CardHeader title=\"Enter Company Type Detail\" />\r\n                                            <Divider />\r\n                                            <AppBar position=\"static\">\r\n                                                <Tabs\r\n                                                    value={selectedTabIndex}\r\n                                                    onChange={handleTabChange}\r\n                                                    indicatorColor=\"secondary\"\r\n                                                    textColor=\"inherit\"\r\n                                                    variant=\"fullWidth\"\r\n                                                    aria-label=\"full width tabs example\"\r\n                                                >\r\n                                                    <Tab label=\"Details\" {...a11yProps(0)} />\r\n                                                    <Tab label=\"Uploads\" {...a11yProps(1)} />\r\n                                                </Tabs>\r\n                                            </AppBar>\r\n                                            <SwipeableViews\r\n                                                axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n                                                index={selectedTabIndex}\r\n                                                onChangeIndex={handleChangeIndex}\r\n                                            >\r\n                                                <TabPanel value={selectedTabIndex} index={0} dir={theme.direction}>\r\n                                                    Item One\r\n                                                </TabPanel>\r\n                                                <TabPanel value={selectedTabIndex} index={1} dir={theme.direction}>\r\n                                                    Item Two\r\n                                                </TabPanel>\r\n                                                <TabPanel value={selectedTabIndex} index={2} dir={theme.direction}>\r\n                                                    Item Three\r\n                                                </TabPanel>\r\n                                            </SwipeableViews>\r\n                                            <Divider />\r\n                                            <CardContent>\r\n                                                <Box\r\n                                                    component=\"form\"\r\n                                                    sx={{\r\n                                                        '& .MuiTextField-root': { my: 1, width: '25ch' },\r\n                                                    }}\r\n                                                    noValidate\r\n                                                    autoComplete=\"off\"\r\n                                                >\r\n                                                    <Grid\r\n                                                        container\r\n                                                        direction=\"row\"\r\n                                                        justifyContent=\"center\"\r\n                                                        alignItems=\"stretch\"\r\n                                                        spacing={1}\r\n                                                    >\r\n                                                    <Grid item xs={4}>\r\n                                                    <div>\r\n                                                        <TextField\r\n                                                            style={{ width: '100%' }}\r\n                                                            required\r\n                                                            id=\"outlined-required\"\r\n                                                            label=\"DirectorName\"\r\n                                                            {...register('DirectorName')}\r\n                                                            className={`form-control ${errors.DirectorName ? 'is-invalid' : ''}`}\r\n                                                        />\r\n                                                        <Autocomplete\r\n                                                            disablePortal style={{ width: '100%' }}\r\n                                                            id=\"drpDirectorType\"\r\n                                                            options={directorTypes}\r\n                                                            renderInput={(params) => <TextField style={{ width: '100%' }} {...params} label=\"Director Type\" />}\r\n                                                        />\r\n                                                        <Autocomplete\r\n                                                            disablePortal style={{ width: '100%' }}\r\n                                                            id=\"drpDirectorType\"\r\n                                                            options={directorTypes}\r\n                                                            renderInput={(params) => <TextField style={{ width: '100%' }} {...params} label=\"Director Type\" />}\r\n                                                        />\r\n                                                        <Autocomplete\r\n                                                            disablePortal style={{ width: '100%' }}\r\n                                                            id=\"drpDirectorType\"\r\n                                                            options={directorTypes}\r\n                                                            renderInput={(params) => <TextField style={{ width: '100%' }} {...params} label=\"Director Type\" />}\r\n                                                        />\r\n                                                        <TextField\r\n                                                            style={{ width: '100%' }}\r\n                                                            required\r\n                                                            id=\"outlined-required\"\r\n                                                            label=\"DirectorName\"\r\n                                                            {...register('DirectorName')}\r\n                                                            className={`form-control ${errors.DirectorName ? 'is-invalid' : ''}`}\r\n                                                        />\r\n                                                        </div>\r\n                                                    </Grid>\r\n                                                    <Grid item xs={4}>\r\n                                                        <div>\r\n                                                            <TextField\r\n                                                                style={{ width: '100%' }}\r\n                                                                required\r\n                                                                id=\"outlined-required\"\r\n                                                                label=\"DirectorName\"\r\n                                                                {...register('DirectorName')}\r\n                                                                className={`form-control ${errors.DirectorName ? 'is-invalid' : ''}`}\r\n                                                            />\r\n                                                            <Autocomplete\r\n                                                                disablePortal style={{ width: '100%' }}\r\n                                                                id=\"drpDirectorType\"\r\n                                                                options={directorTypes}\r\n                                                                renderInput={(params) => <TextField style={{ width: '100%' }} {...params} label=\"Director Type\" />}\r\n                                                            />\r\n                                                            <Autocomplete\r\n                                                                disablePortal style={{ width: '100%' }}\r\n                                                                id=\"drpDirectorType\"\r\n                                                                options={directorTypes}\r\n                                                                renderInput={(params) => <TextField style={{ width: '100%' }} {...params} label=\"Director Type\" />}\r\n                                                            />\r\n                                                            <Autocomplete\r\n                                                                disablePortal style={{ width: '100%' }}\r\n                                                                id=\"drpDirectorType\"\r\n                                                                options={directorTypes}\r\n                                                                renderInput={(params) => <TextField style={{ width: '100%' }} {...params} label=\"Director Type\" />}\r\n                                                            />\r\n                                                            <TextField\r\n                                                                style={{ width: '100%' }}\r\n                                                                required\r\n                                                                id=\"outlined-required\"\r\n                                                                label=\"DirectorName\"\r\n                                                                {...register('DirectorName')}\r\n                                                                className={`form-control ${errors.DirectorName ? 'is-invalid' : ''}`}\r\n                                                            />\r\n                                                        </div>\r\n                                                    </Grid>\r\n                                                    <Grid item xs={4}>\r\n                                                        <div>\r\n                                                            <TextField\r\n                                                                style={{ width: '100%' }}\r\n                                                                required\r\n                                                                id=\"outlined-required\"\r\n                                                                label=\"DirectorName\"\r\n                                                                {...register('DirectorName')}\r\n                                                                className={`form-control ${errors.DirectorName ? 'is-invalid' : ''}`}\r\n                                                            />\r\n                                                            <Autocomplete\r\n                                                                disablePortal style={{ width: '100%' }}\r\n                                                                id=\"drpDirectorType\"\r\n                                                                options={directorTypes}\r\n                                                                renderInput={(params) => <TextField style={{ width: '100%' }} {...params} label=\"Director Type\" />}\r\n                                                            />\r\n                                                            <Autocomplete\r\n                                                                disablePortal style={{ width: '100%' }}\r\n                                                                id=\"drpDirectorType\"\r\n                                                                options={directorTypes}\r\n                                                                renderInput={(params) => <TextField style={{ width: '100%' }} {...params} label=\"Director Type\" />}\r\n                                                            />\r\n                                                            <Autocomplete\r\n                                                                disablePortal style={{ width: '100%' }}\r\n                                                                id=\"drpDirectorType\"\r\n                                                                options={directorTypes}\r\n                                                                renderInput={(params) => <TextField style={{ width: '100%' }} {...params} label=\"Director Type\" />}\r\n                                                            />\r\n                                                            <TextField\r\n                                                                style={{ width: '100%' }}\r\n                                                                required\r\n                                                                id=\"outlined-required\"\r\n                                                                label=\"DirectorName\"\r\n                                                                {...register('DirectorName')}\r\n                                                                className={`form-control ${errors.DirectorName ? 'is-invalid' : ''}`}\r\n                                                            />\r\n                                                        </div>\r\n                                                    </Grid>\r\n                                                    </Grid>\r\n                                                </Box>\r\n                                            </CardContent>\r\n                                        </Card>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Button style={{ display: selectedTabIndex == 1 ? 'none' : undefined }} type=\"submit\" sx={{ margin: 1 }} variant=\"contained\" color=\"primary\" onClick={onClickNext }> Next</Button>\r\n                                        <Button style={{ display: selectedTabIndex == 0 ? 'none' : undefined }} type=\"submit\" sx={{ margin: 1 }} variant=\"contained\" color=\"primary\"> Save</Button> \r\n                                        <Button type=\"button\"\r\n                                            onClick={() => resetForm()} sx={{ margin: 1 }} variant=\"contained\" color=\"secondary\">\r\n                                            Reset\r\n                                        </Button>\r\n                                       \r\n                                    </Grid>\r\n\r\n\r\n                                </Grid>\r\n\r\n                            </form>\r\n                        </div>\r\n                    </Container>\r\n                </Box>\r\n            </Modal>\r\n          \r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default DirectorForm;\r\n"]},"metadata":{},"sourceType":"module"}