{"ast":null,"code":"import { get } from './common.service';\nexport const dropdowns = {\n  getAllDirectorTypes: async () => {\n    return await get('Master/GetAllDirectorTypes').then(x => {\n      if (x.data.status == 'success') {\n        return x.data.directorTypes;\n      } else {\n        return [];\n      }\n    });\n  },\n  getAllDesignations: async () => {\n    return await get('Master/getAllDesignations').then(x => {\n      if (x.data.status == 'success') {\n        return x.data.designations;\n      } else {\n        return [];\n      }\n    });\n  },\n  getAllNationalities: async () => {\n    return await get('Master/getAllNationalities').then(x => {\n      if (x.data.status == 'success') {\n        return x.data.nationalities;\n      } else {\n        return [];\n      }\n    });\n  },\n  getAllPlaceOfBirths: async () => {\n    return await get('Master/getAllPlaceOfBirths').then(x => {\n      if (x.data.status == 'success') {\n        return x.data.placeOfBirths;\n      } else {\n        return [];\n      }\n    });\n  },\n  getAllIDTypes: async () => {\n    return await get('Master/getAllIDTypes').then(x => {\n      if (x.data.status == 'success') {\n        return x.data.placeOfBirths;\n      } else {\n        return [];\n      }\n    });\n  }\n};","map":{"version":3,"sources":["E:/Projects/LFMS/LFMS.WebUI/src/services/dropdowns.service.ts"],"names":["get","dropdowns","getAllDirectorTypes","then","x","data","status","directorTypes","getAllDesignations","designations","getAllNationalities","nationalities","getAllPlaceOfBirths","placeOfBirths","getAllIDTypes"],"mappings":"AAAA,SAASA,GAAT,QAA0B,kBAA1B;AAIA,OAAO,MAAMC,SAAS,GAAG;AACrBC,EAAAA,mBAAmB,EAAE,YAA0C;AAC3D,WAAO,MAAMF,GAAG,CAAC,4BAAD,CAAH,CAAkCG,IAAlC,CAAuCC,CAAC,IAAI;AACrD,UAAIA,CAAC,CAACC,IAAF,CAAOC,MAAP,IAAiB,SAArB,EAAgC;AAC5B,eAAOF,CAAC,CAACC,IAAF,CAAOE,aAAd;AACH,OAFD,MAGK;AACD,eAAO,EAAP;AACH;AACJ,KAPY,CAAb;AAQH,GAVoB;AAWrBC,EAAAA,kBAAkB,EAAE,YAAyC;AACzD,WAAO,MAAMR,GAAG,CAAC,2BAAD,CAAH,CAAiCG,IAAjC,CAAsCC,CAAC,IAAI;AACpD,UAAIA,CAAC,CAACC,IAAF,CAAOC,MAAP,IAAiB,SAArB,EAAgC;AAC5B,eAAOF,CAAC,CAACC,IAAF,CAAOI,YAAd;AACH,OAFD,MAGK;AACD,eAAO,EAAP;AACH;AACJ,KAPY,CAAb;AAQH,GApBoB;AAqBrBC,EAAAA,mBAAmB,EAAE,YAAyC;AAC1D,WAAO,MAAMV,GAAG,CAAC,4BAAD,CAAH,CAAkCG,IAAlC,CAAuCC,CAAC,IAAI;AACrD,UAAIA,CAAC,CAACC,IAAF,CAAOC,MAAP,IAAiB,SAArB,EAAgC;AAC5B,eAAOF,CAAC,CAACC,IAAF,CAAOM,aAAd;AACH,OAFD,MAGK;AACD,eAAO,EAAP;AACH;AACJ,KAPY,CAAb;AAQH,GA9BoB;AA+BrBC,EAAAA,mBAAmB,EAAE,YAA0C;AAC3D,WAAO,MAAMZ,GAAG,CAAC,4BAAD,CAAH,CAAkCG,IAAlC,CAAuCC,CAAC,IAAI;AACrD,UAAIA,CAAC,CAACC,IAAF,CAAOC,MAAP,IAAiB,SAArB,EAAgC;AAC5B,eAAOF,CAAC,CAACC,IAAF,CAAOQ,aAAd;AACH,OAFD,MAGK;AACD,eAAO,EAAP;AACH;AACJ,KAPY,CAAb;AAQH,GAxCoB;AAyCrBC,EAAAA,aAAa,EAAE,YAAoC;AAC/C,WAAO,MAAMd,GAAG,CAAC,sBAAD,CAAH,CAA4BG,IAA5B,CAAiCC,CAAC,IAAI;AAC/C,UAAIA,CAAC,CAACC,IAAF,CAAOC,MAAP,IAAiB,SAArB,EAAgC;AAC5B,eAAOF,CAAC,CAACC,IAAF,CAAOQ,aAAd;AACH,OAFD,MAGK;AACD,eAAO,EAAP;AACH;AACJ,KAPY,CAAb;AAQH;AAlDoB,CAAlB","sourcesContent":["import { get, post } from './common.service';\r\nimport { DesignationModel, DirectorTypeModel, IDTypeModel, NationalityModel } from '../types/master.type';\r\nimport { PlaceOfBirthModel } from '../content/pages/Components/PlaceOfBirth/PlaceOfBirthForm';\r\n\r\nexport const dropdowns = {\r\n    getAllDirectorTypes: async (): Promise<DirectorTypeModel[]> => {\r\n        return await get('Master/GetAllDirectorTypes').then(x => {\r\n            if (x.data.status == 'success') {\r\n                return x.data.directorTypes;\r\n            }\r\n            else {\r\n                return [];\r\n            }\r\n        });\r\n    },\r\n    getAllDesignations: async (): Promise<DesignationModel[]> => {\r\n        return await get('Master/getAllDesignations').then(x => {\r\n            if (x.data.status == 'success') {\r\n                return x.data.designations;\r\n            }\r\n            else {\r\n                return [];\r\n            }\r\n        });\r\n    },\r\n    getAllNationalities: async (): Promise<NationalityModel[]> => {\r\n        return await get('Master/getAllNationalities').then(x => {\r\n            if (x.data.status == 'success') {\r\n                return x.data.nationalities;\r\n            }\r\n            else {\r\n                return [];\r\n            }\r\n        });\r\n    },\r\n    getAllPlaceOfBirths: async (): Promise<PlaceOfBirthModel[]> => {\r\n        return await get('Master/getAllPlaceOfBirths').then(x => {\r\n            if (x.data.status == 'success') {\r\n                return x.data.placeOfBirths;\r\n            }\r\n            else {\r\n                return [];\r\n            }\r\n        });\r\n    },\r\n    getAllIDTypes: async (): Promise<IDTypeModel[]> => {\r\n        return await get('Master/getAllIDTypes').then(x => {\r\n            if (x.data.status == 'success') {\r\n                return x.data.placeOfBirths;\r\n            }\r\n            else {\r\n                return [];\r\n            }\r\n        });\r\n    },\r\n}\r\n"]},"metadata":{},"sourceType":"module"}